{"mappings":"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","sources":["node_modules/mithril/index.js","node_modules/mithril/hyperscript.js","node_modules/mithril/render/hyperscript.js","node_modules/mithril/render/vnode.js","node_modules/mithril/render/hyperscriptVnode.js","node_modules/mithril/util/hasOwn.js","node_modules/mithril/render/trust.js","node_modules/mithril/render/fragment.js","node_modules/mithril/request.js","node_modules/mithril/promise/promise.js","node_modules/mithril/promise/polyfill.js","node_modules/mithril/mount-redraw.js","node_modules/mithril/render.js","node_modules/mithril/render/render.js","node_modules/mithril/api/mount-redraw.js","node_modules/mithril/request/request.js","node_modules/mithril/pathname/build.js","node_modules/mithril/querystring/build.js","node_modules/mithril/util/assign.js","node_modules/mithril/route.js","node_modules/mithril/api/router.js","node_modules/mithril/pathname/parse.js","node_modules/mithril/querystring/parse.js","node_modules/mithril/pathname/compileTemplate.js","node_modules/mithril/util/censor.js","src/index.ts","src/components/note.ts","node_modules/tone/build/webpack:/Tone/webpack/universalModuleDefinition","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/arrayWithHoles.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/createClass.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/nonIterableRest.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/slicedToArray.js","node_modules/tone/build/webpack:/Tone/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/tone/build/webpack:/Tone/node_modules/automation-events/build/es5/bundle.js","node_modules/tone/build/webpack:/Tone/webpack/bootstrap","node_modules/tone/build/webpack:/Tone/webpack/runtime/define property getters","node_modules/tone/build/webpack:/Tone/webpack/runtime/hasOwnProperty shorthand","node_modules/tone/build/webpack:/Tone/webpack/runtime/make namespace object","node_modules/tone/build/webpack:/Tone/Tone/version.ts","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/globals.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/constants.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/read-only-map.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/module.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/window.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","node_modules/tone/build/webpack:/Tone/node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","node_modules/tone/build/webpack:/Tone/Tone/core/util/TypeCheck.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Debug.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/AudioContext.ts","node_modules/tone/build/webpack:/Tone/node_modules/tslib/tslib.es6.js","node_modules/tone/build/webpack:/Tone/Tone/core/clock/Ticker.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/AdvancedTypeCheck.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Defaults.ts","node_modules/tone/build/webpack:/Tone/Tone/core/Tone.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Math.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Timeline.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/ContextInitialization.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Emitter.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/BaseContext.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Context.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Interface.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/ToneAudioBuffer.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/OfflineContext.ts","node_modules/tone/build/webpack:/Tone/Tone/core/Global.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/DummyContext.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/Conversions.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/TimeBase.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/Time.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/Frequency.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/TransportTime.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/ToneWithContext.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/StateTimeline.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Param.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/ToneAudioNode.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Gain.ts","node_modules/tone/build/webpack:/Tone/Tone/source/OneShotSource.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/ToneConstantSource.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Signal.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/TickParam.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/TickSignal.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/TickSource.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/Clock.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Delay.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Offline.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/ToneAudioBuffers.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/Midi.ts","node_modules/tone/build/webpack:/Tone/Tone/core/type/Ticks.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Draw.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/IntervalTimeline.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Volume.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Destination.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/TimelineValue.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/TransportEvent.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/TransportRepeatEvent.ts","node_modules/tone/build/webpack:/Tone/Tone/core/clock/Transport.ts","node_modules/tone/build/webpack:/Tone/Tone/source/Source.ts","node_modules/tone/build/webpack:/Tone/Tone/source/buffer/ToneBufferSource.ts","node_modules/tone/build/webpack:/Tone/Tone/source/Noise.ts","node_modules/tone/build/webpack:/Tone/Tone/source/UserMedia.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/OscillatorInterface.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/ToneOscillatorNode.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/Oscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/SignalOperator.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/WaveShaper.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/AudioToGain.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Multiply.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/AMOscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/FMOscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/PulseOscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/FatOscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/PWMOscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/OmniOscillator.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Add.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Scale.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Zero.ts","node_modules/tone/build/webpack:/Tone/Tone/source/oscillator/LFO.ts","node_modules/tone/build/webpack:/Tone/Tone/core/util/Decorator.ts","node_modules/tone/build/webpack:/Tone/Tone/source/buffer/Player.ts","node_modules/tone/build/webpack:/Tone/Tone/source/buffer/Players.ts","node_modules/tone/build/webpack:/Tone/Tone/source/buffer/GrainPlayer.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Abs.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/GainToAudio.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Negate.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Subtract.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/GreaterThanZero.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/GreaterThan.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/Pow.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/ScaleExp.ts","node_modules/tone/build/webpack:/Tone/Tone/signal/SyncedSignal.ts","node_modules/tone/build/webpack:/Tone/Tone/component/envelope/Envelope.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/Instrument.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/Monophonic.ts","node_modules/tone/build/webpack:/Tone/Tone/component/envelope/AmplitudeEnvelope.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/Synth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/ModulationSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/AMSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/BiquadFilter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/Filter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/envelope/FrequencyEnvelope.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/MonoSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/DuoSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/FMSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/MetalSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/MembraneSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/NoiseSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/core/worklet/WorkletGlobalScope.ts","node_modules/tone/build/webpack:/Tone/Tone/core/worklet/ToneAudioWorklet.ts","node_modules/tone/build/webpack:/Tone/Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","node_modules/tone/build/webpack:/Tone/Tone/core/worklet/SingleIOProcessor.worklet.ts","node_modules/tone/build/webpack:/Tone/Tone/core/worklet/DelayLine.worklet.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/FeedbackCombFilter.worklet.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/FeedbackCombFilter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/OnePoleFilter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/LowpassCombFilter.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/PluckSynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/PolySynth.ts","node_modules/tone/build/webpack:/Tone/Tone/instrument/Sampler.ts","node_modules/tone/build/webpack:/Tone/Tone/event/ToneEvent.ts","node_modules/tone/build/webpack:/Tone/Tone/event/Loop.ts","node_modules/tone/build/webpack:/Tone/Tone/event/Part.ts","node_modules/tone/build/webpack:/Tone/Tone/event/PatternGenerator.ts","node_modules/tone/build/webpack:/Tone/Tone/event/Pattern.ts","node_modules/tone/build/webpack:/Tone/Tone/event/Sequence.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/CrossFade.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Effect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/LFOEffect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/AutoFilter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Panner.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/AutoPanner.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/Follower.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/AutoWah.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/BitCrusher.worklet.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/BitCrusher.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Chebyshev.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Split.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Merge.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/StereoEffect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/StereoFeedbackEffect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Chorus.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Distortion.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/FeedbackEffect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/FeedbackDelay.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/PhaseShiftAllpass.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/FrequencyShifter.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Freeverb.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/JCReverb.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/StereoXFeedbackEffect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/PingPongDelay.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/PitchShift.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Phaser.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Reverb.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/MidSideSplit.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/MidSideMerge.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/MidSideEffect.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/StereoWidener.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Tremolo.ts","node_modules/tone/build/webpack:/Tone/Tone/effect/Vibrato.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/Analyser.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/MeterBase.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/Meter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/FFT.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/DCMeter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/analysis/Waveform.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Solo.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/PanVol.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Channel.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Mono.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/MultibandSplit.ts","node_modules/tone/build/webpack:/Tone/Tone/core/context/Listener.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Panner3D.ts","node_modules/tone/build/webpack:/Tone/Tone/component/channel/Recorder.ts","node_modules/tone/build/webpack:/Tone/Tone/component/dynamics/Compressor.ts","node_modules/tone/build/webpack:/Tone/Tone/component/dynamics/Gate.ts","node_modules/tone/build/webpack:/Tone/Tone/component/dynamics/Limiter.ts","node_modules/tone/build/webpack:/Tone/Tone/component/dynamics/MidSideCompressor.ts","node_modules/tone/build/webpack:/Tone/Tone/component/dynamics/MultibandCompressor.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/EQ3.ts","node_modules/tone/build/webpack:/Tone/Tone/component/filter/Convolver.ts","node_modules/tone/build/webpack:/Tone/Tone/index.ts","src/components/transport.ts","src/components/clock.ts","src/components/components.ts","src/utils.ts","node_modules/ramda/src/internal/_arity.js","node_modules/ramda/src/internal/_isPlaceholder.js","node_modules/ramda/src/internal/_curry1.js","node_modules/flyd/lib/index.js","node_modules/ramda/src/internal/_curryN.js","node_modules/ramda/src/curryN.js","node_modules/ramda/src/internal/_curry2.js","src/state.ts","node_modules/tslib/tslib.es6.js","node_modules/classnames/index.js","node_modules/construct-ui/lib/esm/_shared/classes.js","node_modules/construct-ui/lib/esm/_shared/keys.js","node_modules/construct-ui/lib/esm/_shared/utils.js","node_modules/construct-ui/lib/esm/components/icon/generated/IconNames.js","node_modules/construct-ui/lib/esm/components/icon/generated/IconContents.js","node_modules/construct-ui/lib/esm/components/icon/Icon.js","node_modules/construct-ui/lib/esm/components/spinner/index.js","node_modules/construct-ui/lib/esm/components/button/index.js","node_modules/construct-ui/lib/esm/components/button-group/index.js","node_modules/construct-ui/lib/esm/components/control-group/index.js","node_modules/construct-ui/lib/esm/components/list/List.js","node_modules/construct-ui/lib/esm/components/list/ListItem.js","node_modules/popper.js/src/utils/isBrowser.js","node_modules/popper.js/src/utils/debounce.js","node_modules/popper.js/src/utils/isFunction.js","node_modules/popper.js/src/utils/getStyleComputedProperty.js","node_modules/popper.js/src/utils/getParentNode.js","node_modules/popper.js/src/utils/getScrollParent.js","node_modules/popper.js/src/utils/getReferenceNode.js","node_modules/popper.js/src/utils/isIE.js","node_modules/popper.js/src/utils/getOffsetParent.js","node_modules/popper.js/src/utils/getRoot.js","node_modules/popper.js/src/utils/findCommonOffsetParent.js","node_modules/popper.js/src/utils/isOffsetContainer.js","node_modules/popper.js/src/utils/getScroll.js","node_modules/popper.js/src/utils/includeScroll.js","node_modules/popper.js/src/utils/getBordersSize.js","node_modules/popper.js/src/utils/getWindowSizes.js","node_modules/popper.js/src/utils/getClientRect.js","node_modules/popper.js/src/utils/getBoundingClientRect.js","node_modules/popper.js/src/utils/getOffsetRectRelativeToArbitraryNode.js","node_modules/popper.js/src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","node_modules/popper.js/src/utils/isFixed.js","node_modules/popper.js/src/utils/getFixedPositionOffsetParent.js","node_modules/popper.js/src/utils/getBoundaries.js","node_modules/popper.js/src/utils/computeAutoPlacement.js","node_modules/popper.js/src/utils/getReferenceOffsets.js","node_modules/popper.js/src/utils/getOuterSizes.js","node_modules/popper.js/src/utils/getOppositePlacement.js","node_modules/popper.js/src/utils/getPopperOffsets.js","node_modules/popper.js/src/utils/find.js","node_modules/popper.js/src/utils/runModifiers.js","node_modules/popper.js/src/utils/findIndex.js","node_modules/popper.js/src/methods/update.js","node_modules/popper.js/src/utils/isModifierEnabled.js","node_modules/popper.js/src/utils/getSupportedPropertyName.js","node_modules/popper.js/src/methods/destroy.js","node_modules/popper.js/src/utils/getWindow.js","node_modules/popper.js/src/utils/setupEventListeners.js","node_modules/popper.js/src/methods/enableEventListeners.js","node_modules/popper.js/src/methods/disableEventListeners.js","node_modules/popper.js/src/utils/removeEventListeners.js","node_modules/popper.js/src/utils/isNumeric.js","node_modules/popper.js/src/utils/setStyles.js","node_modules/popper.js/src/modifiers/computeStyle.js","node_modules/popper.js/src/utils/isModifierRequired.js","node_modules/popper.js/src/methods/placements.js","node_modules/popper.js/src/utils/clockwise.js","node_modules/popper.js/src/modifiers/flip.js","node_modules/popper.js/src/modifiers/offset.js","node_modules/popper.js/src/modifiers/index.js","node_modules/popper.js/src/modifiers/shift.js","node_modules/popper.js/src/modifiers/preventOverflow.js","node_modules/popper.js/src/modifiers/keepTogether.js","node_modules/popper.js/src/modifiers/arrow.js","node_modules/popper.js/src/utils/getOppositeVariation.js","node_modules/popper.js/src/modifiers/inner.js","node_modules/popper.js/src/modifiers/hide.js","node_modules/popper.js/src/utils/getRoundedOffsets.js","node_modules/popper.js/src/modifiers/applyStyle.js","node_modules/popper.js/src/utils/setAttributes.js","node_modules/popper.js/src/methods/defaults.js","node_modules/popper.js/src/index.js","node_modules/construct-ui/lib/esm/components/abstract-component/index.js","node_modules/construct-ui/lib/esm/components/portal/index.js","node_modules/construct-ui/lib/esm/utils/transition-manager/index.js","node_modules/construct-ui/lib/esm/components/overlay/index.js","node_modules/construct-ui/lib/esm/components/popover/Popover.js","node_modules/lodash.debounce/index.js","node_modules/construct-ui/lib/esm/components/input/index.js","node_modules/construct-ui/lib/esm/components/query-list/index.js","node_modules/construct-ui/lib/esm/components/select-list/index.js","src/components/bpm.ts","src/components/menu.ts"],"sourcesContent":["\"use strict\"\n\nvar hyperscript = require(\"./hyperscript\")\nvar request = require(\"./request\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nvar m = function m() { return hyperscript.apply(this, arguments) }\nm.m = hyperscript\nm.trust = hyperscript.trust\nm.fragment = hyperscript.fragment\nm.Fragment = \"[\"\nm.mount = mountRedraw.mount\nm.route = require(\"./route\")\nm.render = require(\"./render\")\nm.redraw = mountRedraw.redraw\nm.request = request.request\nm.jsonp = request.jsonp\nm.parseQueryString = require(\"./querystring/parse\")\nm.buildQueryString = require(\"./querystring/build\")\nm.parsePathname = require(\"./pathname/parse\")\nm.buildPathname = require(\"./pathname/build\")\nm.vnode = require(\"./render/vnode\")\nm.PromisePolyfill = require(\"./promise/polyfill\")\nm.censor = require(\"./util/censor\")\n\nmodule.exports = m\n","\"use strict\"\n\nvar hyperscript = require(\"./render/hyperscript\")\n\nhyperscript.trust = require(\"./render/trust\")\nhyperscript.fragment = require(\"./render/fragment\")\n\nmodule.exports = hyperscript\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\nvar hasOwn = require(\"../util/hasOwn\")\n\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\n\nfunction isEmpty(object) {\n\tfor (var key in object) if (hasOwn.call(object, key)) return false\n\treturn true\n}\n\nfunction compileSelector(selector) {\n\tvar match, tag = \"div\", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === \"\" && value !== \"\") tag = value\n\t\telse if (type === \"#\") attrs.id = value\n\t\telse if (type === \".\") classes.push(value)\n\t\telse if (match[3][0] === \"[\") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\tif (match[4] === \"class\") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(\" \")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\n\nfunction execSelector(state, vnode) {\n\tvar attrs = vnode.attrs\n\tvar hasClass = hasOwn.call(attrs, \"class\")\n\tvar className = hasClass ? attrs.class : attrs.className\n\n\tvnode.tag = state.tag\n\tvnode.attrs = {}\n\n\tif (!isEmpty(state.attrs) && !isEmpty(attrs)) {\n\t\tvar newAttrs = {}\n\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key)) newAttrs[key] = attrs[key]\n\t\t}\n\n\t\tattrs = newAttrs\n\t}\n\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key) && key !== \"className\" && !hasOwn.call(attrs, key)){\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className != null || state.attrs.className != null) attrs.className =\n\t\tclassName != null\n\t\t\t? state.attrs.className != null\n\t\t\t\t? String(state.attrs.className) + \" \" + String(className)\n\t\t\t\t: className\n\t\t\t: state.attrs.className != null\n\t\t\t\t? state.attrs.className\n\t\t\t\t: null\n\n\tif (hasClass) attrs.class = null\n\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== \"key\") {\n\t\t\tvnode.attrs = attrs\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn vnode\n}\n\nfunction hyperscript(selector) {\n\tif (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\n\t\tthrow Error(\"The selector must be either a string or a component.\");\n\t}\n\n\tvar vnode = hyperscriptVnode.apply(1, arguments)\n\n\tif (typeof selector === \"string\") {\n\t\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\t\tif (selector !== \"[\") return execSelector(selectorCache[selector] || compileSelector(selector), vnode)\n\t}\n\n\tvnode.tag = selector\n\treturn vnode\n}\n\nmodule.exports = hyperscript\n","\"use strict\"\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node\n\treturn Vnode(\"#\", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\tisKeyed && (input[i] != null || typeof input[i] === \"boolean\")\n\t\t\t\t\t\t? \"In fragments, vnodes must either all have keys or none have keys. You may wish to consider using an explicit keyed empty fragment, m.fragment({key: ...}), instead of a hole.\"\n\t\t\t\t\t\t: \"In fragments, vnodes must either all have keys or none have keys.\"\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril.js requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode(\"\", attrs.key, attrs, children)\n}\n","// This exists so I'm only saving it once.\n\"use strict\"\n\nmodule.exports = {}.hasOwnProperty\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(html) {\n\tif (html == null) html = \"\"\n\treturn Vnode(\"<\", undefined, undefined, html, undefined, undefined)\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\n\nmodule.exports = function() {\n\tvar vnode = hyperscriptVnode.apply(0, arguments)\n\n\tvnode.tag = \"[\"\n\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\treturn vnode\n}\n","\"use strict\"\n\nvar PromisePolyfill = require(\"./promise/promise\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./request/request\")(typeof window !== \"undefined\" ? window : null, PromisePolyfill, mountRedraw.redraw)\n","/* global window */\n\"use strict\"\n\nvar PromisePolyfill = require(\"./polyfill\")\n\nif (typeof window !== \"undefined\") {\n\tif (typeof window.Promise === \"undefined\") {\n\t\twindow.Promise = PromisePolyfill\n\t} else if (!window.Promise.prototype.finally) {\n\t\twindow.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = window.Promise\n} else if (typeof global !== \"undefined\") {\n\tif (typeof global.Promise === \"undefined\") {\n\t\tglobal.Promise = PromisePolyfill\n\t} else if (!global.Promise.prototype.finally) {\n\t\tglobal.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = global.Promise\n} else {\n\tmodule.exports = PromisePolyfill\n}\n","\"use strict\"\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with 'new'.\")\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function.\")\n\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved with itself.\")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== \"function\") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.prototype.finally = function(callback) {\n\treturn this.then(\n\t\tfunction(value) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn value\n\t\t\t})\n\t\t},\n\t\tfunction(reason) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn PromisePolyfill.reject(reason);\n\t\t\t})\n\t\t}\n\t)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\n\nmodule.exports = PromisePolyfill\n","\"use strict\"\n\nvar render = require(\"./render\")\n\nmodule.exports = require(\"./api/mount-redraw\")(render, typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : null, typeof console !== \"undefined\" ? console : null)\n","\"use strict\"\n\nmodule.exports = require(\"./render/render\")(typeof window !== \"undefined\" ? window : null)\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function($window) {\n\tvar $doc = $window && $window.document\n\tvar currentRedraw\n\n\tvar nameSpace = {\n\t\tsvg: \"http://www.w3.org/2000/svg\",\n\t\tmath: \"http://www.w3.org/1998/Math/MathML\"\n\t}\n\n\tfunction getNameSpace(vnode) {\n\t\treturn vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\n\t}\n\n\t//sanity check to discourage people from doing `vnode.state = ...`\n\tfunction checkState(vnode, original) {\n\t\tif (vnode.state !== original) throw new Error(\"'vnode.state' must not be modified.\")\n\t}\n\n\t//Note: the hook is passed as the `this` argument to allow proxying the\n\t//arguments without requiring a full array allocation to do so. It also\n\t//takes advantage of the fact the current `vnode` is the first argument in\n\t//all lifecycle methods.\n\tfunction callHook(vnode) {\n\t\tvar original = vnode.state\n\t\ttry {\n\t\t\treturn this.apply(original, arguments)\n\t\t} finally {\n\t\t\tcheckState(vnode, original)\n\t\t}\n\t}\n\n\t// IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when\n\t// inside an iframe. Catch and swallow this error, and heavy-handidly return null.\n\tfunction activeElement() {\n\t\ttry {\n\t\t\treturn $doc.activeElement\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === \"string\") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase \"#\": createText(parent, vnode, nextSibling); break\n\t\t\t\tcase \"<\": createHTML(parent, vnode, ns, nextSibling); break\n\t\t\t\tcase \"[\": createFragment(parent, vnode, hooks, ns, nextSibling); break\n\t\t\t\tdefault: createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t}\n\tvar possibleParents = {caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\"}\n\tfunction createHTML(parent, vnode, ns, nextSibling) {\n\t\tvar match = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\t// not using the proper parent makes the child element(s) vanish.\n\t\t//     var div = document.createElement(\"div\")\n\t\t//     div.innerHTML = \"<td>i</td><td>j</td>\"\n\t\t//     console.log(div.innerHTML)\n\t\t// --> \"ij\", no <td> in sight.\n\t\tvar temp = $doc.createElement(possibleParents[match[1]] || \"div\")\n\t\tif (ns === \"http://www.w3.org/2000/svg\") {\n\t\t\ttemp.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + vnode.children + \"</svg>\"\n\t\t\ttemp = temp.firstChild\n\t\t} else {\n\t\t\ttemp.innerHTML = vnode.children\n\t\t}\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\t// Capture nodes to remove, so we don't confuse them.\n\t\tvnode.instance = []\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tvnode.instance.push(child)\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tvar attrs = vnode.attrs\n\t\tvar is = attrs && attrs.is\n\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\n\t\tif (attrs != null) {\n\t\t\tsetAttrs(vnode, attrs, ns)\n\t\t}\n\n\t\tinsertNode(parent, element, nextSibling)\n\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tif (vnode.tag === \"select\" && attrs != null) setLateSelectAttrs(vnode, attrs)\n\t\t\t}\n\t\t}\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === \"function\") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tinitLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tcreateNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t}\n\t}\n\n\t//update\n\t/**\n\t * @param {Element|Fragment} parent - the parent element\n\t * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for\n\t *                               this part of the tree\n\t * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\n\t * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\n\t * @param {Element | null} nextSibling - the next DOM node if we're dealing with a\n\t *                                       fragment that is not the last item in its\n\t *                                       parent\n\t * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\n\t * @returns void\n\t */\n\t// This function diffs and patches lists of vnodes, both keyed and unkeyed.\n\t//\n\t// We will:\n\t//\n\t// 1. describe its general structure\n\t// 2. focus on the diff algorithm optimizations\n\t// 3. discuss DOM node operations.\n\n\t// ## Overview:\n\t//\n\t// The updateNodes() function:\n\t// - deals with trivial cases\n\t// - determines whether the lists are keyed or unkeyed based on the first non-null node\n\t//   of each list.\n\t// - diffs them and patches the DOM if needed (that's the brunt of the code)\n\t// - manages the leftovers: after diffing, are there:\n\t//   - old nodes left to remove?\n\t// \t - new nodes to insert?\n\t// \t deal with them!\n\t//\n\t// The lists are only iterated over once, with an exception for the nodes in `old` that\n\t// are visited in the fourth part of the diff and in the `removeNodes` loop.\n\n\t// ## Diffing\n\t//\n\t// Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\n\t// may be good for context on longest increasing subsequence-based logic for moving nodes.\n\t//\n\t// In order to diff keyed lists, one has to\n\t//\n\t// 1) match nodes in both lists, per key, and update them accordingly\n\t// 2) create the nodes present in the new list, but absent in the old one\n\t// 3) remove the nodes present in the old list, but absent in the new one\n\t// 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\n\t//\n\t// To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate\n\t// over the new list and for each new vnode, find the corresponding vnode in the old list using\n\t// the map.\n\t// 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\n\t// and must be created.\n\t// For the removals, we actually remove the nodes that have been updated from the old list.\n\t// The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\n\t// The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\n\t// algorithm.\n\t//\n\t// the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\n\t// from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\n\t// corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\n\t//  match the above lists, for example).\n\t//\n\t// In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\n\t// can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\n\t//\n\t// @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\n\t// the longest increasing subsequence *of old nodes still present in the new list*).\n\t//\n\t// It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\n\t// and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\n\t// the `LIS` and a temporary one to create the LIS).\n\t//\n\t// So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\n\t// the LIS and can be updated without moving them.\n\t//\n\t// If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\n\t// the exception of the last node if the list is fully reversed).\n\t//\n\t// ## Finding the next sibling.\n\t//\n\t// `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\n\t// When the list is being traversed top-down, at any index, the DOM nodes up to the previous\n\t// vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\n\t// list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\n\t//\n\t// In the other scenarios (swaps, upwards traversal, map-based diff),\n\t// the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\n\t// bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\n\t// as the next sibling (cached in the `nextSibling` variable).\n\n\n\t// ## DOM node moves\n\t//\n\t// In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\n\t// this is not the case if the node moved (second and fourth part of the diff algo). We move\n\t// the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`\n\t// variable rather than fetching it using `getNextSibling()`.\n\t//\n\t// The fourth part of the diff currently inserts nodes unconditionally, leading to issues\n\t// like #1791 and #1999. We need to be smarter about those situations where adjascent old\n\t// nodes remain together in the new list in a way that isn't covered by parts one and\n\t// three of the diff algo.\n\n\tfunction updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\n\t\telse if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length)\n\t\telse {\n\t\t\tvar isOldKeyed = old[0] != null && old[0].key != null\n\t\t\tvar isKeyed = vnodes[0] != null && vnodes[0].key != null\n\t\t\tvar start = 0, oldStart = 0\n\t\t\tif (!isOldKeyed) while (oldStart < old.length && old[oldStart] == null) oldStart++\n\t\t\tif (!isKeyed) while (start < vnodes.length && vnodes[start] == null) start++\n\t\t\tif (isOldKeyed !== isKeyed) {\n\t\t\t\tremoveNodes(parent, old, oldStart, old.length)\n\t\t\t\tcreateNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else if (!isKeyed) {\n\t\t\t\t// Don't index past the end of either list (causes deopts).\n\t\t\t\tvar commonLength = old.length < vnodes.length ? old.length : vnodes.length\n\t\t\t\t// Rewind if necessary to the first non-null index on either side.\n\t\t\t\t// We could alternatively either explicitly create or remove nodes when `start !== oldStart`\n\t\t\t\t// but that would be optimizing for sparse lists which are more rare than dense ones.\n\t\t\t\tstart = start < oldStart ? start : oldStart\n\t\t\t\tfor (; start < commonLength; start++) {\n\t\t\t\t\to = old[start]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o === v || o == null && v == null) continue\n\t\t\t\t\telse if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling))\n\t\t\t\t\telse if (v == null) removeNode(parent, o)\n\t\t\t\t\telse updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\tif (old.length > commonLength) removeNodes(parent, old, start, old.length)\n\t\t\t\tif (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else {\n\t\t\t\t// keyed diff\n\t\t\t\tvar oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling\n\n\t\t\t\t// bottom-up\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\t// top-down\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o.key !== v.key) break\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tif (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\t// swaps and list reversals\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (start === end) break\n\t\t\t\t\tif (o.key !== ve.key || oe.key !== v.key) break\n\t\t\t\t\ttopSibling = getNextSibling(old, oldStart, nextSibling)\n\t\t\t\t\tmoveNodes(parent, oe, topSibling)\n\t\t\t\t\tif (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns)\n\t\t\t\t\tif (++start <= --end) moveNodes(parent, o, nextSibling)\n\t\t\t\t\tif (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldStart++; oldEnd--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t}\n\t\t\t\t// bottom up once again\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t}\n\t\t\t\tif (start > end) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\telse if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\telse {\n\t\t\t\t\t// inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\n\t\t\t\t\tvar originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li=0, i=0, pos = 2147483647, matched = 0, map, lisIndices\n\t\t\t\t\tfor (i = 0; i < vnodesLength; i++) oldIndices[i] = -1\n\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\tif (map == null) map = getKeyMap(old, oldStart, oldEnd + 1)\n\t\t\t\t\t\tve = vnodes[i]\n\t\t\t\t\t\tvar oldIndex = map[ve.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tpos = (oldIndex < pos) ? oldIndex : -1 // becomes -1 if nodes were re-ordered\n\t\t\t\t\t\t\toldIndices[i-start] = oldIndex\n\t\t\t\t\t\t\toe = old[oldIndex]\n\t\t\t\t\t\t\told[oldIndex] = null\n\t\t\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\t\t\tmatched++\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnextSibling = originalNextSibling\n\t\t\t\t\tif (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\t\tif (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (pos === -1) {\n\t\t\t\t\t\t\t// the indices of the indices of the items that are part of the\n\t\t\t\t\t\t\t// longest increasing subsequence in the oldIndices list\n\t\t\t\t\t\t\tlisIndices = makeLisIndices(oldIndices)\n\t\t\t\t\t\t\tli = lisIndices.length - 1\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (lisIndices[li] === i - start) li--\n\t\t\t\t\t\t\t\t\telse moveNodes(parent, v, nextSibling)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode.events = old.events\n\t\t\tif (shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === \"string\") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tupdateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase \"#\": updateText(old, vnode); break\n\t\t\t\t\tcase \"<\": updateHTML(parent, old, vnode, ns, nextSibling); break\n\t\t\t\t\tcase \"[\": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(parent, old)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, ns, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\tremoveHTML(parent, old)\n\t\t\tcreateHTML(parent, vnode, ns, nextSibling)\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t}\n\t}\n\tfunction updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tif (vnode.tag === \"textarea\") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tupdateNodes(element, old.children, vnode.children, hooks, null, ns)\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tupdateLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(parent, old.instance)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction getKeyMap(vnodes, start, end) {\n\t\tvar map = Object.create(null)\n\t\tfor (; start < end; start++) {\n\t\t\tvar vnode = vnodes[start]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key = vnode.key\n\t\t\t\tif (key != null) map[key] = start\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\t// Lifted from ivi https://github.com/ivijs/ivi/\n\t// takes a list of unique numbers (-1 is special and can\n\t// occur multiple times) and returns an array with the indices\n\t// of the items that are part of the longest increasing\n\t// subsequence\n\tvar lisTemp = []\n\tfunction makeLisIndices(a) {\n\t\tvar result = [0]\n\t\tvar u = 0, v = 0, i = 0\n\t\tvar il = lisTemp.length = a.length\n\t\tfor (var i = 0; i < il; i++) lisTemp[i] = a[i]\n\t\tfor (var i = 0; i < il; ++i) {\n\t\t\tif (a[i] === -1) continue\n\t\t\tvar j = result[result.length - 1]\n\t\t\tif (a[j] < a[i]) {\n\t\t\t\tlisTemp[i] = j\n\t\t\t\tresult.push(i)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tu = 0\n\t\t\tv = result.length - 1\n\t\t\twhile (u < v) {\n\t\t\t\t// Fast integer average without overflow.\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tvar c = (u >>> 1) + (v >>> 1) + (u & v & 1)\n\t\t\t\tif (a[result[c]] < a[i]) {\n\t\t\t\t\tu = c + 1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = c\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (a[i] < a[result[u]]) {\n\t\t\t\tif (u > 0) lisTemp[i] = result[u - 1]\n\t\t\t\tresult[u] = i\n\t\t\t}\n\t\t}\n\t\tu = result.length\n\t\tv = result[u - 1]\n\t\twhile (u-- > 0) {\n\t\t\tresult[u] = v\n\t\t\tv = lisTemp[v]\n\t\t}\n\t\tlisTemp.length = 0\n\t\treturn result\n\t}\n\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\n\t// This covers a really specific edge case:\n\t// - Parent node is keyed and contains child\n\t// - Child is removed, returns unresolved promise in `onbeforeremove`\n\t// - Parent node is moved in keyed diff\n\t// - Remaining children still need moved appropriately\n\t//\n\t// Ideally, I'd track removed nodes as well, but that introduces a lot more\n\t// complexity and I'm not exactly interested in doing that.\n\tfunction moveNodes(parent, vnode, nextSibling) {\n\t\tvar frag = $doc.createDocumentFragment()\n\t\tmoveChildToFrag(parent, frag, vnode)\n\t\tinsertNode(parent, frag, nextSibling)\n\t}\n\tfunction moveChildToFrag(parent, frag, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\t\t\tfrag.appendChild(vnode.instance[i])\n\t\t\t\t}\n\t\t\t} else if (vnode.tag !== \"[\") {\n\t\t\t\t// Don't recurse for text nodes *or* elements, just fragments\n\t\t\t\tfrag.appendChild(vnode.dom)\n\t\t\t} else if (vnode.children.length === 1) {\n\t\t\t\tvnode = vnode.children[0]\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\tif (child != null) moveChildToFrag(parent, frag, child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling != null) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\n\tfunction maybeSetContentEditable(vnode) {\n\t\tif (vnode.attrs == null || (\n\t\t\tvnode.attrs.contenteditable == null && // attribute\n\t\t\tvnode.attrs.contentEditable == null // property\n\t\t)) return false\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === \"<\") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted.\")\n\t\treturn true\n\t}\n\n\t//remove\n\tfunction removeNodes(parent, vnodes, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) removeNode(parent, vnode)\n\t\t}\n\t}\n\tfunction removeNode(parent, vnode) {\n\t\tvar mask = 0\n\t\tvar original = vnode.state\n\t\tvar stateResult, attrsResult\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.state.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\tmask = 1\n\t\t\t\tstateResult = result\n\t\t\t}\n\t\t}\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.attrs.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tmask |= 2\n\t\t\t\tattrsResult = result\n\t\t\t}\n\t\t}\n\t\tcheckState(vnode, original)\n\n\t\t// If we can, try to fast-path it and avoid all the overhead of awaiting\n\t\tif (!mask) {\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t} else {\n\t\t\tif (stateResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 1) { mask &= 2; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tstateResult.then(next, next)\n\t\t\t}\n\t\t\tif (attrsResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 2) { mask &= 1; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tattrsResult.then(next, next)\n\t\t\t}\n\t\t}\n\n\t\tfunction reallyRemove() {\n\t\t\tcheckState(vnode, original)\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t}\n\t}\n\tfunction removeHTML(parent, vnode) {\n\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\tparent.removeChild(vnode.instance[i])\n\t\t}\n\t}\n\tfunction removeChild(parent, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tremoveHTML(parent, vnode)\n\t\t\t} else {\n\t\t\t\tif (vnode.tag !== \"[\") {\n\t\t\t\t\tparent.removeChild(vnode.dom)\n\t\t\t\t\tif (!Array.isArray(vnode.children)) break\n\t\t\t\t}\n\t\t\t\tif (vnode.children.length === 1) {\n\t\t\t\t\tvnode = vnode.children[0]\n\t\t\t\t\tif (vnode != null) continue\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\t\tif (child != null) removeChild(parent, child)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tfunction onremove(vnode) {\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode)\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode)\n\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\t} else {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//attrs\n\tfunction setAttrs(vnode, attrs, ns) {\n\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t//\n\t\t// Also, the DOM does things to inputs based on the value, so it needs set first.\n\t\t// See: https://github.com/MithrilJS/mithril.js/issues/2622\n\t\tif (vnode.tag === \"input\" && attrs.type != null) vnode.dom.setAttribute(\"type\", attrs.type)\n\t\tvar isFileInput = attrs != null && vnode.tag === \"input\" && attrs.type === \"file\"\n\t\tfor (var key in attrs) {\n\t\t\tsetAttr(vnode, key, null, attrs[key], ns, isFileInput)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key, old, value, ns, isFileInput) {\n\t\tif (key === \"key\" || key === \"is\" || value == null || isLifecycleMethod(key) || (old === value && !isFormAttribute(vnode, key)) && typeof value !== \"object\" || key === \"type\" && vnode.tag === \"input\") return\n\t\tif (key[0] === \"o\" && key[1] === \"n\") return updateEvent(vnode, key, value)\n\t\tif (key.slice(0, 6) === \"xlink:\") vnode.dom.setAttributeNS(\"http://www.w3.org/1999/xlink\", key.slice(6), value)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, value)\n\t\telse if (hasPropertyKey(vnode, key, ns)) {\n\t\t\tif (key === \"value\") {\n\t\t\t\t// Only do the coercion if we're actually going to check the value.\n\t\t\t\t/* eslint-disable no-implicit-coercion */\n\t\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\t\t//setting input[type=file][value] to same value causes an error to be generated if it's non-empty\n\t\t\t\tif ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === \"\" + value && (isFileInput || vnode.dom === activeElement())) return\n\t\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"select\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"option\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t//setting input[type=file][value] to different value is an error if it's non-empty\n\t\t\t\t// Not ideal, but it at least works around the most common source of uncaught exceptions for now.\n\t\t\t\tif (isFileInput && \"\" + value !== \"\") { console.error(\"`value` is read-only on file inputs!\"); return }\n\t\t\t\t/* eslint-enable no-implicit-coercion */\n\t\t\t}\n\t\t\tvnode.dom[key] = value\n\t\t} else {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\tif (value) vnode.dom.setAttribute(key, \"\")\n\t\t\t\telse vnode.dom.removeAttribute(key)\n\t\t\t}\n\t\t\telse vnode.dom.setAttribute(key === \"className\" ? \"class\" : key, value)\n\t\t}\n\t}\n\tfunction removeAttr(vnode, key, old, ns) {\n\t\tif (key === \"key\" || key === \"is\" || old == null || isLifecycleMethod(key)) return\n\t\tif (key[0] === \"o\" && key[1] === \"n\") updateEvent(vnode, key, undefined)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, null)\n\t\telse if (\n\t\t\thasPropertyKey(vnode, key, ns)\n\t\t\t&& key !== \"className\"\n\t\t\t&& key !== \"title\" // creates \"null\" as title\n\t\t\t&& !(key === \"value\" && (\n\t\t\t\tvnode.tag === \"option\"\n\t\t\t\t|| vnode.tag === \"select\" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement()\n\t\t\t))\n\t\t\t&& !(vnode.tag === \"input\" && key === \"type\")\n\t\t) {\n\t\t\tvnode.dom[key] = null\n\t\t} else {\n\t\t\tvar nsLastIndex = key.indexOf(\":\")\n\t\t\tif (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1)\n\t\t\tif (old !== false) vnode.dom.removeAttribute(key === \"className\" ? \"class\" : key)\n\t\t}\n\t}\n\tfunction setLateSelectAttrs(vnode, attrs) {\n\t\tif (\"value\" in attrs) {\n\t\t\tif(attrs.value === null) {\n\t\t\t\tif (vnode.dom.selectedIndex !== -1) vnode.dom.value = null\n\t\t\t} else {\n\t\t\t\tvar normalized = \"\" + attrs.value // eslint-disable-line no-implicit-coercion\n\t\t\t\tif (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {\n\t\t\t\t\tvnode.dom.value = normalized\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\"selectedIndex\" in attrs) setAttr(vnode, \"selectedIndex\", null, attrs.selectedIndex, undefined)\n\t}\n\tfunction updateAttrs(vnode, old, attrs, ns) {\n\t\tif (old && old === attrs) {\n\t\t\tconsole.warn(\"Don't reuse attrs object, use new object for every redraw, this will throw in next major\")\n\t\t}\n\t\tif (attrs != null) {\n\t\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t\t//\n\t\t\t// Also, the DOM does things to inputs based on the value, so it needs set first.\n\t\t\t// See: https://github.com/MithrilJS/mithril.js/issues/2622\n\t\t\tif (vnode.tag === \"input\" && attrs.type != null) vnode.dom.setAttribute(\"type\", attrs.type)\n\t\t\tvar isFileInput = vnode.tag === \"input\" && attrs.type === \"file\"\n\t\t\tfor (var key in attrs) {\n\t\t\t\tsetAttr(vnode, key, old && old[key], attrs[key], ns, isFileInput)\n\t\t\t}\n\t\t}\n\t\tvar val\n\t\tif (old != null) {\n\t\t\tfor (var key in old) {\n\t\t\t\tif (((val = old[key]) != null) && (attrs == null || attrs[key] == null)) {\n\t\t\t\t\tremoveAttr(vnode, key, val, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === activeElement() || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\n\t}\n\tfunction hasPropertyKey(vnode, key, ns) {\n\t\t// Filter out namespaced keys\n\t\treturn ns === undefined && (\n\t\t\t// If it's a custom element, just keep it.\n\t\t\tvnode.tag.indexOf(\"-\") > -1 || vnode.attrs != null && vnode.attrs.is ||\n\t\t\t// If it's a normal element, let's try to avoid a few browser bugs.\n\t\t\tkey !== \"href\" && key !== \"list\" && key !== \"form\" && key !== \"width\" && key !== \"height\"// && key !== \"type\"\n\t\t\t// Defer the property check until *after* we check everything.\n\t\t) && key in vnode.dom\n\t}\n\n\t//style\n\tvar uppercaseRegex = /[A-Z]/g\n\tfunction toLowerCase(capital) { return \"-\" + capital.toLowerCase() }\n\tfunction normalizeKey(key) {\n\t\treturn key[0] === \"-\" && key[1] === \"-\" ? key :\n\t\t\tkey === \"cssFloat\" ? \"float\" :\n\t\t\t\tkey.replace(uppercaseRegex, toLowerCase)\n\t}\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) {\n\t\t\t// Styles are equivalent, do nothing.\n\t\t} else if (style == null) {\n\t\t\t// New style is missing, just clear it.\n\t\t\telement.style.cssText = \"\"\n\t\t} else if (typeof style !== \"object\") {\n\t\t\t// New style is a string, let engine deal with patching.\n\t\t\telement.style.cssText = style\n\t\t} else if (old == null || typeof old !== \"object\") {\n\t\t\t// `old` is missing or a string, `style` is an object.\n\t\t\telement.style.cssText = \"\"\n\t\t\t// Add new style properties\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null) element.style.setProperty(normalizeKey(key), String(value))\n\t\t\t}\n\t\t} else {\n\t\t\t// Both old & new are (different) objects.\n\t\t\t// Update style properties that have changed\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null && (value = String(value)) !== String(old[key])) {\n\t\t\t\t\telement.style.setProperty(normalizeKey(key), value)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove style properties that no longer exist\n\t\t\tfor (var key in old) {\n\t\t\t\tif (old[key] != null && style[key] == null) {\n\t\t\t\t\telement.style.removeProperty(normalizeKey(key))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Here's an explanation of how this works:\n\t// 1. The event names are always (by design) prefixed by `on`.\n\t// 2. The EventListener interface accepts either a function or an object\n\t//    with a `handleEvent` method.\n\t// 3. The object does not inherit from `Object.prototype`, to avoid\n\t//    any potential interference with that (e.g. setters).\n\t// 4. The event name is remapped to the handler before calling it.\n\t// 5. In function-based event handlers, `ev.target === this`. We replicate\n\t//    that below.\n\t// 6. In function-based event handlers, `return false` prevents the default\n\t//    action and stops event propagation. We replicate that below.\n\tfunction EventDict() {\n\t\t// Save this, so the current redraw is correctly tracked.\n\t\tthis._ = currentRedraw\n\t}\n\tEventDict.prototype = Object.create(null)\n\tEventDict.prototype.handleEvent = function (ev) {\n\t\tvar handler = this[\"on\" + ev.type]\n\t\tvar result\n\t\tif (typeof handler === \"function\") result = handler.call(ev.currentTarget, ev)\n\t\telse if (typeof handler.handleEvent === \"function\") handler.handleEvent(ev)\n\t\tif (this._ && ev.redraw !== false) (0, this._)()\n\t\tif (result === false) {\n\t\t\tev.preventDefault()\n\t\t\tev.stopPropagation()\n\t\t}\n\t}\n\n\t//event\n\tfunction updateEvent(vnode, key, value) {\n\t\tif (vnode.events != null) {\n\t\t\tvnode.events._ = currentRedraw\n\t\t\tif (vnode.events[key] === value) return\n\t\t\tif (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\t\tif (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = value\n\t\t\t} else {\n\t\t\t\tif (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = undefined\n\t\t\t}\n\t\t} else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\tvnode.events = new EventDict()\n\t\t\tvnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\tvnode.events[key] = value\n\t\t}\n\t}\n\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode)\n\t\tif (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tdo {\n\t\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.state.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\treturn false\n\t\t} while (false); // eslint-disable-line no-constant-condition\n\t\tvnode.dom = old.dom\n\t\tvnode.domSize = old.domSize\n\t\tvnode.instance = old.instance\n\t\t// One would think having the actual latest attributes would be ideal,\n\t\t// but it doesn't let us properly diff based on our current internal\n\t\t// representation. We have to save not only the old DOM info, but also\n\t\t// the attributes used to create it, as we diff *that*, not against the\n\t\t// DOM directly (with a few exceptions in `setAttr`). And, of course, we\n\t\t// need to save the children and text as they are conceptually not\n\t\t// unlike special \"attributes\" internally.\n\t\tvnode.attrs = old.attrs\n\t\tvnode.children = old.children\n\t\tvnode.text = old.text\n\t\treturn true\n\t}\n\n\tvar currentDOM\n\n\treturn function(dom, vnodes, redraw) {\n\t\tif (!dom) throw new TypeError(\"DOM element being rendered to does not exist.\")\n\t\tif (currentDOM != null && dom.contains(currentDOM)) {\n\t\t\tthrow new TypeError(\"Node is currently being rendered to and thus is locked.\")\n\t\t}\n\t\tvar prevRedraw = currentRedraw\n\t\tvar prevDOM = currentDOM\n\t\tvar hooks = []\n\t\tvar active = activeElement()\n\t\tvar namespace = dom.namespaceURI\n\n\t\tcurrentDOM = dom\n\t\tcurrentRedraw = typeof redraw === \"function\" ? redraw : undefined\n\t\ttry {\n\t\t\t// First time rendering into a node clears it out\n\t\t\tif (dom.vnodes == null) dom.textContent = \"\"\n\t\t\tvnodes = Vnode.normalizeChildren(Array.isArray(vnodes) ? vnodes : [vnodes])\n\t\t\tupdateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\n\t\t\tdom.vnodes = vnodes\n\t\t\t// `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement\n\t\t\tif (active != null && activeElement() !== active && typeof active.focus === \"function\") active.focus()\n\t\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t\t} finally {\n\t\t\tcurrentRedraw = prevRedraw\n\t\t\tcurrentDOM = prevDOM\n\t\t}\n\t}\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(render, schedule, console) {\n\tvar subscriptions = []\n\tvar pending = false\n\tvar offset = -1\n\n\tfunction sync() {\n\t\tfor (offset = 0; offset < subscriptions.length; offset += 2) {\n\t\t\ttry { render(subscriptions[offset], Vnode(subscriptions[offset + 1]), redraw) }\n\t\t\tcatch (e) { console.error(e) }\n\t\t}\n\t\toffset = -1\n\t}\n\n\tfunction redraw() {\n\t\tif (!pending) {\n\t\t\tpending = true\n\t\t\tschedule(function() {\n\t\t\t\tpending = false\n\t\t\t\tsync()\n\t\t\t})\n\t\t}\n\t}\n\n\tredraw.sync = sync\n\n\tfunction mount(root, component) {\n\t\tif (component != null && component.view == null && typeof component !== \"function\") {\n\t\t\tthrow new TypeError(\"m.mount expects a component, not a vnode.\")\n\t\t}\n\n\t\tvar index = subscriptions.indexOf(root)\n\t\tif (index >= 0) {\n\t\t\tsubscriptions.splice(index, 2)\n\t\t\tif (index <= offset) offset -= 2\n\t\t\trender(root, [])\n\t\t}\n\n\t\tif (component != null) {\n\t\t\tsubscriptions.push(root, component)\n\t\t\trender(root, Vnode(component), redraw)\n\t\t}\n\t}\n\n\treturn {mount: mount, redraw: redraw}\n}\n","\"use strict\"\n\nvar buildPathname = require(\"../pathname/build\")\nvar hasOwn = require(\"../util/hasOwn\")\n\nmodule.exports = function($window, Promise, oncompletion) {\n\tvar callbackCount = 0\n\n\tfunction PromiseProxy(executor) {\n\t\treturn new Promise(executor)\n\t}\n\n\t// In case the global Promise is some userland library's where they rely on\n\t// `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or\n\t// similar. Let's *not* break them.\n\tPromiseProxy.prototype = Promise.prototype\n\tPromiseProxy.__proto__ = Promise // eslint-disable-line no-proto\n\n\tfunction makeRequest(factory) {\n\t\treturn function(url, args) {\n\t\t\tif (typeof url !== \"string\") { args = url; url = url.url }\n\t\t\telse if (args == null) args = {}\n\t\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\tfactory(buildPathname(url, args.params), args, function (data) {\n\t\t\t\t\tif (typeof args.type === \"function\") {\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tdata[i] = new args.type(data[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse data = new args.type(data)\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data)\n\t\t\t\t}, reject)\n\t\t\t})\n\t\t\tif (args.background === true) return promise\n\t\t\tvar count = 0\n\t\t\tfunction complete() {\n\t\t\t\tif (--count === 0 && typeof oncompletion === \"function\") oncompletion()\n\t\t\t}\n\n\t\t\treturn wrap(promise)\n\n\t\t\tfunction wrap(promise) {\n\t\t\t\tvar then = promise.then\n\t\t\t\t// Set the constructor, so engines know to not await or resolve\n\t\t\t\t// this as a native promise. At the time of writing, this is\n\t\t\t\t// only necessary for V8, but their behavior is the correct\n\t\t\t\t// behavior per spec. See this spec issue for more details:\n\t\t\t\t// https://github.com/tc39/ecma262/issues/1577. Also, see the\n\t\t\t\t// corresponding comment in `request/tests/test-request.js` for\n\t\t\t\t// a bit more background on the issue at hand.\n\t\t\t\tpromise.constructor = PromiseProxy\n\t\t\t\tpromise.then = function() {\n\t\t\t\t\tcount++\n\t\t\t\t\tvar next = then.apply(promise, arguments)\n\t\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\t\tcomplete()\n\t\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t\t})\n\t\t\t\t\treturn wrap(next)\n\t\t\t\t}\n\t\t\t\treturn promise\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasHeader(args, name) {\n\t\tfor (var key in args.headers) {\n\t\t\tif (hasOwn.call(args.headers, key) && key.toLowerCase() === name) return true\n\t\t}\n\t\treturn false\n\t}\n\n\treturn {\n\t\trequest: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar method = args.method != null ? args.method.toUpperCase() : \"GET\"\n\t\t\tvar body = args.body\n\t\t\tvar assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData || body instanceof $window.URLSearchParams)\n\t\t\tvar responseType = args.responseType || (typeof args.extract === \"function\" ? \"\" : \"json\")\n\n\t\t\tvar xhr = new $window.XMLHttpRequest(), aborted = false, isTimeout = false\n\t\t\tvar original = xhr, replacedAbort\n\t\t\tvar abort = xhr.abort\n\n\t\t\txhr.abort = function() {\n\t\t\t\taborted = true\n\t\t\t\tabort.call(this)\n\t\t\t}\n\n\t\t\txhr.open(method, url, args.async !== false, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\n\n\t\t\tif (assumeJSON && body != null && !hasHeader(args, \"content-type\")) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (typeof args.deserialize !== \"function\" && !hasHeader(args, \"accept\")) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tif (args.timeout) xhr.timeout = args.timeout\n\t\t\txhr.responseType = responseType\n\n\t\t\tfor (var key in args.headers) {\n\t\t\t\tif (hasOwn.call(args.headers, key)) {\n\t\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function(ev) {\n\t\t\t\t// Don't throw errors on xhr.abort().\n\t\t\t\tif (aborted) return\n\n\t\t\t\tif (ev.target.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar success = (ev.target.status >= 200 && ev.target.status < 300) || ev.target.status === 304 || (/^file:\\/\\//i).test(url)\n\t\t\t\t\t\t// When the response type isn't \"\" or \"text\",\n\t\t\t\t\t\t// `xhr.responseText` is the wrong thing to use.\n\t\t\t\t\t\t// Browsers do the right thing and throw here, and we\n\t\t\t\t\t\t// should honor that and do the right thing by\n\t\t\t\t\t\t// preferring `xhr.response` where possible/practical.\n\t\t\t\t\t\tvar response = ev.target.response, message\n\n\t\t\t\t\t\tif (responseType === \"json\") {\n\t\t\t\t\t\t\t// For IE and Edge, which don't implement\n\t\t\t\t\t\t\t// `responseType: \"json\"`.\n\t\t\t\t\t\t\tif (!ev.target.responseType && typeof args.extract !== \"function\") {\n\t\t\t\t\t\t\t\t// Handle no-content which will not parse.\n\t\t\t\t\t\t\t\ttry { response = JSON.parse(ev.target.responseText) }\n\t\t\t\t\t\t\t\tcatch (e) { response = null }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!responseType || responseType === \"text\") {\n\t\t\t\t\t\t\t// Only use this default if it's text. If a parsed\n\t\t\t\t\t\t\t// document is needed on old IE and friends (all\n\t\t\t\t\t\t\t// unsupported), the user should use a custom\n\t\t\t\t\t\t\t// `config` instead. They're already using this at\n\t\t\t\t\t\t\t// their own risk.\n\t\t\t\t\t\t\tif (response == null) response = ev.target.responseText\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof args.extract === \"function\") {\n\t\t\t\t\t\t\tresponse = args.extract(ev.target, args)\n\t\t\t\t\t\t\tsuccess = true\n\t\t\t\t\t\t} else if (typeof args.deserialize === \"function\") {\n\t\t\t\t\t\t\tresponse = args.deserialize(response)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (success) resolve(response)\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar completeErrorResponse = function() {\n\t\t\t\t\t\t\t\ttry { message = ev.target.responseText }\n\t\t\t\t\t\t\t\tcatch (e) { message = response }\n\t\t\t\t\t\t\t\tvar error = new Error(message)\n\t\t\t\t\t\t\t\terror.code = ev.target.status\n\t\t\t\t\t\t\t\terror.response = response\n\t\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (xhr.status === 0) {\n\t\t\t\t\t\t\t\t// Use setTimeout to push this code block onto the event queue\n\t\t\t\t\t\t\t\t// This allows `xhr.ontimeout` to run in the case that there is a timeout\n\t\t\t\t\t\t\t\t// Without this setTimeout, `xhr.ontimeout` doesn't have a chance to reject\n\t\t\t\t\t\t\t\t// as `xhr.onreadystatechange` will run before it\n\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\tif (isTimeout) return\n\t\t\t\t\t\t\t\t\tcompleteErrorResponse()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else completeErrorResponse()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.ontimeout = function (ev) {\n\t\t\t\tisTimeout = true\n\t\t\t\tvar error = new Error(\"Request timed out\")\n\t\t\t\terror.code = ev.target.status\n\t\t\t\treject(error)\n\t\t\t}\n\n\t\t\tif (typeof args.config === \"function\") {\n\t\t\t\txhr = args.config(xhr, args, url) || xhr\n\n\t\t\t\t// Propagate the `abort` to any replacement XHR as well.\n\t\t\t\tif (xhr !== original) {\n\t\t\t\t\treplacedAbort = xhr.abort\n\t\t\t\t\txhr.abort = function() {\n\t\t\t\t\t\taborted = true\n\t\t\t\t\t\treplacedAbort.call(this)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (body == null) xhr.send()\n\t\t\telse if (typeof args.serialize === \"function\") xhr.send(args.serialize(body))\n\t\t\telse if (body instanceof $window.FormData || body instanceof $window.URLSearchParams) xhr.send(body)\n\t\t\telse xhr.send(JSON.stringify(body))\n\t\t}),\n\t\tjsonp: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\n\t\t\tvar script = $window.document.createElement(\"script\")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(data)\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error(\"JSONP request failed\"))\n\t\t\t}\n\t\t\tscript.src = url + (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") +\n\t\t\t\tencodeURIComponent(args.callbackKey || \"callback\") + \"=\" +\n\t\t\t\tencodeURIComponent(callbackName)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t}),\n\t}\n}\n","\"use strict\"\n\nvar buildQueryString = require(\"../querystring/build\")\nvar assign = require(\"../util/assign\")\n\n// Returns `path` from `template` + `params`\nmodule.exports = function(template, params) {\n\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(template)) {\n\t\tthrow new SyntaxError(\"Template parameter names must be separated by either a '/', '-', or '.'.\")\n\t}\n\tif (params == null) return template\n\tvar queryIndex = template.indexOf(\"?\")\n\tvar hashIndex = template.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? template.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = template.slice(0, pathEnd)\n\tvar query = {}\n\n\tassign(query, params)\n\n\tvar resolved = path.replace(/:([^\\/\\.-]+)(\\.{3})?/g, function(m, key, variadic) {\n\t\tdelete query[key]\n\t\t// If no such parameter exists, don't interpolate it.\n\t\tif (params[key] == null) return m\n\t\t// Escape normal parameters, but not variadic ones.\n\t\treturn variadic ? params[key] : encodeURIComponent(String(params[key]))\n\t})\n\n\t// In case the template substitution adds new query/hash parameters.\n\tvar newQueryIndex = resolved.indexOf(\"?\")\n\tvar newHashIndex = resolved.indexOf(\"#\")\n\tvar newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex\n\tvar newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex\n\tvar result = resolved.slice(0, newPathEnd)\n\n\tif (queryIndex >= 0) result += template.slice(queryIndex, queryEnd)\n\tif (newQueryIndex >= 0) result += (queryIndex < 0 ? \"?\" : \"&\") + resolved.slice(newQueryIndex, newQueryEnd)\n\tvar querystring = buildQueryString(query)\n\tif (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? \"?\" : \"&\") + querystring\n\tif (hashIndex >= 0) result += template.slice(hashIndex)\n\tif (newHashIndex >= 0) result += (hashIndex < 0 ? \"\" : \"&\") + resolved.slice(newHashIndex)\n\treturn result\n}\n","\"use strict\"\n\nmodule.exports = function(object) {\n\tif (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\n\n\tvar args = []\n\tfor (var key in object) {\n\t\tdestructure(key, object[key])\n\t}\n\n\treturn args.join(\"&\")\n\n\tfunction destructure(key, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === \"[object Object]\") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\n\t}\n}\n","// This exists so I'm only saving it once.\n\"use strict\"\n\nvar hasOwn = require(\"./hasOwn\")\n\nmodule.exports = Object.assign || function(target, source) {\n\tfor (var key in source) {\n\t\tif (hasOwn.call(source, key)) target[key] = source[key]\n\t}\n}\n","\"use strict\"\n\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./api/router\")(typeof window !== \"undefined\" ? window : null, mountRedraw)\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar m = require(\"../render/hyperscript\")\nvar Promise = require(\"../promise/promise\")\n\nvar buildPathname = require(\"../pathname/build\")\nvar parsePathname = require(\"../pathname/parse\")\nvar compileTemplate = require(\"../pathname/compileTemplate\")\nvar assign = require(\"../util/assign\")\nvar censor = require(\"../util/censor\")\n\nvar sentinel = {}\n\nfunction decodeURIComponentSave(component) {\n\ttry {\n\t\treturn decodeURIComponent(component)\n\t} catch(e) {\n\t\treturn component\n\t}\n}\n\nmodule.exports = function($window, mountRedraw) {\n\tvar callAsync = $window == null\n\t\t// In case Mithril.js' loaded globally without the DOM, let's not break\n\t\t? null\n\t\t: typeof $window.setImmediate === \"function\" ? $window.setImmediate : $window.setTimeout\n\tvar p = Promise.resolve()\n\n\tvar scheduled = false\n\n\t// state === 0: init\n\t// state === 1: scheduled\n\t// state === 2: done\n\tvar ready = false\n\tvar state = 0\n\n\tvar compiled, fallbackRoute\n\n\tvar currentResolver = sentinel, component, attrs, currentPath, lastUpdate\n\n\tvar RouterRoot = {\n\t\tonbeforeupdate: function() {\n\t\t\tstate = state ? 2 : 1\n\t\t\treturn !(!state || sentinel === currentResolver)\n\t\t},\n\t\tonremove: function() {\n\t\t\t$window.removeEventListener(\"popstate\", fireAsync, false)\n\t\t\t$window.removeEventListener(\"hashchange\", resolveRoute, false)\n\t\t},\n\t\tview: function() {\n\t\t\tif (!state || sentinel === currentResolver) return\n\t\t\t// Wrap in a fragment to preserve existing key semantics\n\t\t\tvar vnode = [Vnode(component, attrs.key, attrs)]\n\t\t\tif (currentResolver) vnode = currentResolver.render(vnode[0])\n\t\t\treturn vnode\n\t\t},\n\t}\n\n\tvar SKIP = route.SKIP = {}\n\n\tfunction resolveRoute() {\n\t\tscheduled = false\n\t\t// Consider the pathname holistically. The prefix might even be invalid,\n\t\t// but that's not our problem.\n\t\tvar prefix = $window.location.hash\n\t\tif (route.prefix[0] !== \"#\") {\n\t\t\tprefix = $window.location.search + prefix\n\t\t\tif (route.prefix[0] !== \"?\") {\n\t\t\t\tprefix = $window.location.pathname + prefix\n\t\t\t\tif (prefix[0] !== \"/\") prefix = \"/\" + prefix\n\t\t\t}\n\t\t}\n\t\t// This seemingly useless `.concat()` speeds up the tests quite a bit,\n\t\t// since the representation is consistently a relatively poorly\n\t\t// optimized cons string.\n\t\tvar path = prefix.concat()\n\t\t\t.replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponentSave)\n\t\t\t.slice(route.prefix.length)\n\t\tvar data = parsePathname(path)\n\n\t\tassign(data.params, $window.history.state)\n\n\t\tfunction reject(e) {\n\t\t\tconsole.error(e)\n\t\t\tsetPath(fallbackRoute, null, {replace: true})\n\t\t}\n\n\t\tloop(0)\n\t\tfunction loop(i) {\n\t\t\t// state === 0: init\n\t\t\t// state === 1: scheduled\n\t\t\t// state === 2: done\n\t\t\tfor (; i < compiled.length; i++) {\n\t\t\t\tif (compiled[i].check(data)) {\n\t\t\t\t\tvar payload = compiled[i].component\n\t\t\t\t\tvar matchedRoute = compiled[i].route\n\t\t\t\t\tvar localComp = payload\n\t\t\t\t\tvar update = lastUpdate = function(comp) {\n\t\t\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\t\t\tif (comp === SKIP) return loop(i + 1)\n\t\t\t\t\t\tcomponent = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\")? comp : \"div\"\n\t\t\t\t\t\tattrs = data.params, currentPath = path, lastUpdate = null\n\t\t\t\t\t\tcurrentResolver = payload.render ? payload : null\n\t\t\t\t\t\tif (state === 2) mountRedraw.redraw()\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tstate = 2\n\t\t\t\t\t\t\tmountRedraw.redraw.sync()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// There's no understating how much I *wish* I could\n\t\t\t\t\t// use `async`/`await` here...\n\t\t\t\t\tif (payload.view || typeof payload === \"function\") {\n\t\t\t\t\t\tpayload = {}\n\t\t\t\t\t\tupdate(localComp)\n\t\t\t\t\t}\n\t\t\t\t\telse if (payload.onmatch) {\n\t\t\t\t\t\tp.then(function () {\n\t\t\t\t\t\t\treturn payload.onmatch(data.params, path, matchedRoute)\n\t\t\t\t\t\t}).then(update, path === fallbackRoute ? null : reject)\n\t\t\t\t\t}\n\t\t\t\t\telse update(\"div\")\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (path === fallbackRoute) {\n\t\t\t\tthrow new Error(\"Could not resolve default route \" + fallbackRoute + \".\")\n\t\t\t}\n\t\t\tsetPath(fallbackRoute, null, {replace: true})\n\t\t}\n\t}\n\n\t// Set it unconditionally so `m.route.set` and `m.route.Link` both work,\n\t// even if neither `pushState` nor `hashchange` are supported. It's\n\t// cleared if `hashchange` is used, since that makes it automatically\n\t// async.\n\tfunction fireAsync() {\n\t\tif (!scheduled) {\n\t\t\tscheduled = true\n\t\t\t// TODO: just do `mountRedraw.redraw()` here and elide the timer\n\t\t\t// dependency. Note that this will muck with tests a *lot*, so it's\n\t\t\t// not as easy of a change as it sounds.\n\t\t\tcallAsync(resolveRoute)\n\t\t}\n\t}\n\n\tfunction setPath(path, data, options) {\n\t\tpath = buildPathname(path, data)\n\t\tif (ready) {\n\t\t\tfireAsync()\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, route.prefix + path)\n\t\t\telse $window.history.pushState(state, title, route.prefix + path)\n\t\t}\n\t\telse {\n\t\t\t$window.location.href = route.prefix + path\n\t\t}\n\t}\n\n\tfunction route(root, defaultRoute, routes) {\n\t\tif (!root) throw new TypeError(\"DOM element being rendered to does not exist.\")\n\n\t\tcompiled = Object.keys(routes).map(function(route) {\n\t\t\tif (route[0] !== \"/\") throw new SyntaxError(\"Routes must start with a '/'.\")\n\t\t\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(route)) {\n\t\t\t\tthrow new SyntaxError(\"Route parameter names must be separated with either '/', '.', or '-'.\")\n\t\t\t}\n\t\t\treturn {\n\t\t\t\troute: route,\n\t\t\t\tcomponent: routes[route],\n\t\t\t\tcheck: compileTemplate(route),\n\t\t\t}\n\t\t})\n\t\tfallbackRoute = defaultRoute\n\t\tif (defaultRoute != null) {\n\t\t\tvar defaultData = parsePathname(defaultRoute)\n\n\t\t\tif (!compiled.some(function (i) { return i.check(defaultData) })) {\n\t\t\t\tthrow new ReferenceError(\"Default route doesn't match any known routes.\")\n\t\t\t}\n\t\t}\n\n\t\tif (typeof $window.history.pushState === \"function\") {\n\t\t\t$window.addEventListener(\"popstate\", fireAsync, false)\n\t\t} else if (route.prefix[0] === \"#\") {\n\t\t\t$window.addEventListener(\"hashchange\", resolveRoute, false)\n\t\t}\n\n\t\tready = true\n\t\tmountRedraw.mount(root, RouterRoot)\n\t\tresolveRoute()\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) {\n\t\t\toptions = options || {}\n\t\t\toptions.replace = true\n\t\t}\n\t\tlastUpdate = null\n\t\tsetPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = \"#!\"\n\troute.Link = {\n\t\tview: function(vnode) {\n\t\t\t// Omit the used parameters from the rendered element - they are\n\t\t\t// internal. Also, censor the various lifecycle methods.\n\t\t\t//\n\t\t\t// We don't strip the other parameters because for convenience we\n\t\t\t// let them be specified in the selector as well.\n\t\t\tvar child = m(\n\t\t\t\tvnode.attrs.selector || \"a\",\n\t\t\t\tcensor(vnode.attrs, [\"options\", \"params\", \"selector\", \"onclick\"]),\n\t\t\t\tvnode.children\n\t\t\t)\n\t\t\tvar options, onclick, href\n\n\t\t\t// Let's provide a *right* way to disable a route link, rather than\n\t\t\t// letting people screw up accessibility on accident.\n\t\t\t//\n\t\t\t// The attribute is coerced so users don't get surprised over\n\t\t\t// `disabled: 0` resulting in a button that's somehow routable\n\t\t\t// despite being visibly disabled.\n\t\t\tif (child.attrs.disabled = Boolean(child.attrs.disabled)) {\n\t\t\t\tchild.attrs.href = null\n\t\t\t\tchild.attrs[\"aria-disabled\"] = \"true\"\n\t\t\t\t// If you *really* do want add `onclick` on a disabled link, use\n\t\t\t\t// an `oncreate` hook to add it.\n\t\t\t} else {\n\t\t\t\toptions = vnode.attrs.options\n\t\t\t\tonclick = vnode.attrs.onclick\n\t\t\t\t// Easier to build it now to keep it isomorphic.\n\t\t\t\thref = buildPathname(child.attrs.href, vnode.attrs.params)\n\t\t\t\tchild.attrs.href = route.prefix + href\n\t\t\t\tchild.attrs.onclick = function(e) {\n\t\t\t\t\tvar result\n\t\t\t\t\tif (typeof onclick === \"function\") {\n\t\t\t\t\t\tresult = onclick.call(e.currentTarget, e)\n\t\t\t\t\t} else if (onclick == null || typeof onclick !== \"object\") {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t} else if (typeof onclick.handleEvent === \"function\") {\n\t\t\t\t\t\tonclick.handleEvent(e)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Adapted from React Router's implementation:\n\t\t\t\t\t// https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js\n\t\t\t\t\t//\n\t\t\t\t\t// Try to be flexible and intuitive in how we handle links.\n\t\t\t\t\t// Fun fact: links aren't as obvious to get right as you\n\t\t\t\t\t// would expect. There's a lot more valid ways to click a\n\t\t\t\t\t// link than this, and one might want to not simply click a\n\t\t\t\t\t// link, but right click or command-click it to copy the\n\t\t\t\t\t// link target, etc. Nope, this isn't just for blind people.\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Skip if `onclick` prevented default\n\t\t\t\t\t\tresult !== false && !e.defaultPrevented &&\n\t\t\t\t\t\t// Ignore everything but left clicks\n\t\t\t\t\t\t(e.button === 0 || e.which === 0 || e.which === 1) &&\n\t\t\t\t\t\t// Let the browser handle `target=_blank`, etc.\n\t\t\t\t\t\t(!e.currentTarget.target || e.currentTarget.target === \"_self\") &&\n\t\t\t\t\t\t// No modifier keys\n\t\t\t\t\t\t!e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey\n\t\t\t\t\t) {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\te.redraw = false\n\t\t\t\t\t\troute.set(href, null, options)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn child\n\t\t},\n\t}\n\troute.param = function(key) {\n\t\treturn attrs && key != null ? attrs[key] : attrs\n\t}\n\n\treturn route\n}\n","\"use strict\"\n\nvar parseQueryString = require(\"../querystring/parse\")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf(\"?\")\n\tvar hashIndex = url.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\n\n\tif (!path) path = \"/\"\n\telse {\n\t\tif (path[0] !== \"/\") path = \"/\" + path\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n","\"use strict\"\n\nfunction decodeURIComponentSave(str) {\n\ttry {\n\t\treturn decodeURIComponent(str)\n\t} catch(err) {\n\t\treturn str\n\t}\n}\n\nmodule.exports = function(string) {\n\tif (string === \"\" || string == null) return {}\n\tif (string.charAt(0) === \"?\") string = string.slice(1)\n\n\tvar entries = string.split(\"&\"), counters = {}, data = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split(\"=\")\n\t\tvar key = decodeURIComponentSave(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponentSave(entry[1]) : \"\"\n\n\t\tif (value === \"true\") value = true\n\t\telse if (value === \"false\") value = false\n\n\t\tvar levels = key.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data\n\t\tif (key.indexOf(\"[\") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tif (level === \"\") {\n\t\t\t\tvar key = levels.slice(0, j).join()\n\t\t\t\tif (counters[key] == null) {\n\t\t\t\t\tcounters[key] = Array.isArray(cursor) ? cursor.length : 0\n\t\t\t\t}\n\t\t\t\tlevel = counters[key]++\n\t\t\t}\n\t\t\t// Disallow direct prototype pollution\n\t\t\telse if (level === \"__proto__\") break\n\t\t\tif (j === levels.length - 1) cursor[level] = value\n\t\t\telse {\n\t\t\t\t// Read own properties exclusively to disallow indirect\n\t\t\t\t// prototype pollution\n\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(cursor, level)\n\t\t\t\tif (desc != null) desc = desc.value\n\t\t\t\tif (desc == null) cursor[level] = desc = isNumber ? [] : {}\n\t\t\t\tcursor = desc\n\t\t\t}\n\t\t}\n\t}\n\treturn data\n}\n","\"use strict\"\n\nvar parsePathname = require(\"./parse\")\n\n// Compiles a template into a function that takes a resolved path (without query\n// strings) and returns an object containing the template parameters with their\n// parsed values. This expects the input of the compiled template to be the\n// output of `parsePathname`. Note that it does *not* remove query parameters\n// specified in the template.\nmodule.exports = function(template) {\n\tvar templateData = parsePathname(template)\n\tvar templateKeys = Object.keys(templateData.params)\n\tvar keys = []\n\tvar regexp = new RegExp(\"^\" + templateData.path.replace(\n\t\t// I escape literal text so people can use things like `:file.:ext` or\n\t\t// `:lang-:locale` in routes. This is all merged into one pass so I\n\t\t// don't also accidentally escape `-` and make it harder to detect it to\n\t\t// ban it from template parameters.\n\t\t/:([^\\/.-]+)(\\.{3}|\\.(?!\\.)|-)?|[\\\\^$*+.()|\\[\\]{}]/g,\n\t\tfunction(m, key, extra) {\n\t\t\tif (key == null) return \"\\\\\" + m\n\t\t\tkeys.push({k: key, r: extra === \"...\"})\n\t\t\tif (extra === \"...\") return \"(.*)\"\n\t\t\tif (extra === \".\") return \"([^/]+)\\\\.\"\n\t\t\treturn \"([^/]+)\" + (extra || \"\")\n\t\t}\n\t) + \"$\")\n\treturn function(data) {\n\t\t// First, check the params. Usually, there isn't any, and it's just\n\t\t// checking a static set.\n\t\tfor (var i = 0; i < templateKeys.length; i++) {\n\t\t\tif (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false\n\t\t}\n\t\t// If no interpolations exist, let's skip all the ceremony\n\t\tif (!keys.length) return regexp.test(data.path)\n\t\tvar values = regexp.exec(data.path)\n\t\tif (values == null) return false\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tdata.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1])\n\t\t}\n\t\treturn true\n\t}\n}\n","\"use strict\"\n\n// Note: this is mildly perf-sensitive.\n//\n// It does *not* use `delete` - dynamic `delete`s usually cause objects to bail\n// out into dictionary mode and just generally cause a bunch of optimization\n// issues within engines.\n//\n// Ideally, I would've preferred to do this, if it weren't for the optimization\n// issues:\n//\n// ```js\n// const hasOwn = require(\"./hasOwn\")\n// const magic = [\n//     \"key\", \"oninit\", \"oncreate\", \"onbeforeupdate\", \"onupdate\",\n//     \"onbeforeremove\", \"onremove\",\n// ]\n// module.exports = (attrs, extras) => {\n//     const result = Object.assign(Object.create(null), attrs)\n//     for (const key of magic) delete result[key]\n//     if (extras != null) for (const key of extras) delete result[key]\n//     return result\n// }\n// ```\n\nvar hasOwn = require(\"./hasOwn\")\n// Words in RegExp literals are sometimes mangled incorrectly by the internal bundler, so use RegExp().\nvar magic = new RegExp(\"^(?:key|oninit|oncreate|onbeforeupdate|onupdate|onbeforeremove|onremove)$\")\n\nmodule.exports = function(attrs, extras) {\n\tvar result = {}\n\n\tif (extras != null) {\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key) && !magic.test(key) && extras.indexOf(key) < 0) {\n\t\t\t\tresult[key] = attrs[key]\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key) && !magic.test(key)) {\n\t\t\t\tresult[key] = attrs[key]\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}\n","import m from 'mithril'\nimport { Note } from './components/note'\nimport { TransportControls } from './components/transport'\nimport { Bpm } from './components/bpm'\nimport { Menu } from './components/menu'\nimport '../node_modules/construct-ui/lib/index.css'\nimport { state } from './state'\n\nexport const Home = {\n  view: vnode => [m(Menu), Bpm(state), TransportControls, Note],\n}\n\nm.route(document.body, '/', {\n  '/': Home,\n})\n","import m from 'mithril'\nimport { Synth } from 'tone'\n\nconst synth = new Synth().toDestination()\nexport const Note = m('input[type=button]', {\n  value: 'start',\n  onclick: e => {\n    synth.triggerAttackRelease('c4', '8n')\n  },\n})\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tone\"] = factory();\n\telse\n\t\troot[\"Tone\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default[\"default\"](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default[\"default\"](AutomationEventList, [{\n        key: _Symbol$iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }(Symbol.iterator);\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const version: string = \"14.8.40\";\n","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","/*\n * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to\n * test it's used here as a placeholder.\n *\n * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.\n *\n * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.\n *\n * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.\n *\n * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.\n *\n * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.\n *\n * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.\n *\n * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.\n *\n * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.\n *\n * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.\n *\n * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.\n *\n * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.\n *\n * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.\n *\n * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.\n */\nexport const testDomExceptionConstructorSupport = () => {\n    try {\n        new DOMException(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-dom-exception-constructor-support.js.map","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=test-transferables-support.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome, Edge & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        const buffer = new Float32Array(1);\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            }, (err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&\n        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&\n        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&\n        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&\n        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&\n        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&\n        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&\n        cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) &&\n        cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) &&\n        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&\n        cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise.all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n//# sourceMappingURL=is-supported-promise.js.map","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n        const source = new Float32Array(2);\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support.js.map","export const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = audioContext.close !== undefined;\n        try {\n            audioContext.close();\n        }\n        catch {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=test-audio-context-close-method-support.js.map","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n            const resolvePromise = (err) => {\n                if (isPending) {\n                    isPending = false;\n                    offlineAudioContext.startRendering();\n                    resolve(err instanceof TypeError);\n                }\n            };\n            let promise;\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                promise = offlineAudioContext\n                    // Bug #1: Safari requires a successCallback.\n                    .decodeAudioData(null, () => {\n                    // Ignore the success callback.\n                }, resolvePromise);\n            }\n            catch (err) {\n                resolvePromise(err);\n            }\n            // Bug #21: Safari does not support promises yet.\n            if (promise !== undefined) {\n                // Bug #6: Chrome, Edge, Firefox and Opera do not call the errorCallback.\n                promise.catch(resolvePromise);\n            }\n        });\n    };\n};\n//# sourceMappingURL=test-audio-context-decode-audio-data-method-type-error-support.js.map","export const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        let audioContext;\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        }\n        catch {\n            return false;\n        }\n        audioContext.close();\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-context-options-support.js.map","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n        nativeGainNode.disconnect(nativeGainNode);\n        return isSupported;\n    };\n};\n//# sourceMappingURL=test-audio-node-connect-method-support.js.map","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob([\n            'let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor(\"a\",A)'\n        ], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const messageChannel = new MessageChannel();\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            await new Promise((resolve) => {\n                audioWorkletNode.port.onmessage = () => resolve();\n                audioWorkletNode.port.postMessage(messageChannel.port2, [messageChannel.port2]);\n            });\n            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            isCallingProcess = await new Promise((resolve) => {\n                messageChannel.port1.onmessage = ({ data }) => resolve(data === 1);\n                messageChannel.port1.postMessage(0);\n            });\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            messageChannel.port1.close();\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support.js.map","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeChannelMergerNode = offlineAudioContext.createChannelMerger();\n        /**\n         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support\n         * in other browsers.\n         */\n        if (nativeChannelMergerNode.channelCountMode === 'max') {\n            return true;\n        }\n        try {\n            nativeChannelMergerNode.channelCount = 2;\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=test-channel-merger-node-channel-count-support.js.map","export const createTestConstantSourceNodeAccurateSchedulingSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n    };\n};\n//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support.js.map","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-convolver-node-buffer-reassignability-support.js.map","// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.\nexport const createTestConvolverNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        try {\n            nativeConvolverNode.channelCount = 1;\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-convolver-node-channel-count-support.js.map","export const createTestIsSecureContextSupport = (window) => {\n    return () => window !== null && window.hasOwnProperty('isSecureContext');\n};\n//# sourceMappingURL=test-is-secure-context-support.js.map","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        try {\n            audioContext.createMediaStreamSource(new MediaStream());\n            return false;\n        }\n        catch (err) {\n            return true;\n        }\n        finally {\n            audioContext.close();\n        }\n    };\n};\n//# sourceMappingURL=test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=test-stereo-panner-node-default-value-support.js.map","import { Note } from \"../type/Units\";\n\n/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg: any): arg is undefined {\n\treturn typeof arg === \"undefined\";\n}\n\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined<T>(arg: T | undefined): arg is T {\n\treturn !isUndef(arg);\n}\n\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg: any): arg is (a: any) => any {\n\treturn typeof arg === \"function\";\n}\n\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg: any): arg is number {\n\treturn (typeof arg === \"number\");\n}\n\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg: any): arg is object {\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg: any): arg is boolean {\n\treturn (typeof arg === \"boolean\");\n}\n\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg: any): arg is any[] {\n\treturn (Array.isArray(arg));\n}\n\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg: any): arg is string {\n\treturn (typeof arg === \"string\");\n}\n\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg: any): arg is Note {\n\treturn isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n","import { isUndef } from \"./TypeCheck\";\n\n/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement: boolean, error: string): asserts statement {\n\tif (!statement) {\n\t\tthrow new Error(error);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value: number, gte: number, lte = Infinity): void {\n\tif (!(gte <= value && value <= lte)) {\n\t\tthrow new RangeError(\n\t\t\t`Value must be within [${gte}, ${lte}], got: ${value}`\n\t\t);\n\t}\n}\n\n/**\n * Warn if the context is not running.\n */\nexport function assertContextRunning(\n\tcontext: import(\"../context/BaseContext\").BaseContext\n): void {\n\t// add a warning if the context is not started\n\tif (!context.isOffline && context.state !== \"running\") {\n\t\twarn(\n\t\t\t\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\"\n\t\t);\n\t}\n}\n\n/**\n * If it is currently inside a scheduled callback\n */\nlet isInsideScheduledCallback = false;\nlet printedScheduledWarning = false;\n\n/**\n * Notify that the following block of code is occurring inside a Transport callback.\n */\nexport function enterScheduledCallback(insideCallback: boolean): void {\n\tisInsideScheduledCallback = insideCallback;\n}\n\n/**\n * Make sure that a time was passed into\n */\nexport function assertUsedScheduleTime(\n\ttime?: import(\"../type/Units\").Time\n): void {\n\tif (isUndef(time) && isInsideScheduledCallback && !printedScheduledWarning) {\n\t\tprintedScheduledWarning = true;\n\t\twarn(\"Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing\");\n\t}\n}\n\n/**\n * A basic logging interface\n */\ninterface Logger {\n\tlog: (args?: any[]) => void;\n\twarn: (args?: any[]) => void;\n}\n\n/**\n * The default logger is the console\n */\nlet defaultLogger: Logger = console;\n\n/**\n * Set the logging interface\n */\nexport function setLogger(logger: Logger): void {\n\tdefaultLogger = logger;\n}\n\n/**\n * Log anything\n */\nexport function log(...args: any[]): void {\n\tdefaultLogger.log(...args);\n}\n\n/**\n * Warn anything\n */\nexport function warn(...args: any[]): void {\n\tdefaultLogger.warn(...args);\n}\n","import {\n\tAudioContext as stdAudioContext,\n\tAudioWorkletNode as stdAudioWorkletNode,\n\tOfflineAudioContext as stdOfflineAudioContext\n} from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options?: AudioContextOptions): AudioContext {\n\treturn new stdAudioContext(options) as unknown as AudioContext;\n}\n\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels: number, length: number, sampleRate: number): OfflineAudioContext {\n\treturn new stdOfflineAudioContext(channels, length, sampleRate) as unknown as OfflineAudioContext;\n}\n\n/**\n * Either the online or offline audio context\n */\nexport type AnyAudioContext = AudioContext | OfflineAudioContext;\n\n/**\n * Interface for things that Tone.js adds to the window\n */\ninterface ToneWindow extends Window {\n\tTONE_SILENCE_LOGGING?: boolean;\n\tTONE_DEBUG_CLASS?: string;\n}\n\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow: ToneWindow | null = typeof self === \"object\" ? self : null;\n\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n\t(theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\n\nexport function createAudioWorkletNode(context: AnyAudioContext, name: string, options?: Partial<AudioWorkletNodeOptions>): AudioWorkletNode {\n\tassert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n\t// @ts-ignore\n\treturn new stdAudioWorkletNode(context, name, options);\n}\n\n/**\n * This promise resolves to a boolean which indicates if the \n * functionality is supported within the currently used browse. \n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Seconds } from \"../type/Units\";\n\nexport type TickerClockSource = \"worker\" | \"timeout\" | \"offline\";\n\n/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n\n\t/**\n\t * Either \"worker\" or \"timeout\" or \"offline\"\n\t */\n\tprivate _type: TickerClockSource;\n\n\t/**\n\t * The update interval of the worker\n\t */\n\tprivate _updateInterval!: Seconds;\n\n\t/**\n\t * The lowest allowable interval, preferably calculated from context sampleRate\n\t */\n\tprivate _minimumUpdateInterval: Seconds;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t */\n\tprivate _callback: () => void;\n\n\t/**\n\t * track the callback interval\n\t */\n\tprivate _timeout!: ReturnType<typeof setTimeout>;\n\n\t/**\n\t * private reference to the worker\n\t */\n\tprivate _worker!: Worker;\n\n\tconstructor(callback: () => void, type: TickerClockSource, updateInterval: Seconds, contextSampleRate?: number) {\n\n\t\tthis._callback = callback;\n\t\tthis._type = type;\n\t\tthis._minimumUpdateInterval = Math.max( 128/(contextSampleRate || 44100), .001 );\n\t\tthis.updateInterval = updateInterval;\n\n\t\t// create the clock source for the first time\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Generate a web worker\n\t */\n\tprivate _createWorker(): void {\n\n\t\tconst blob = new Blob([\n\t\t\t/* javascript */`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n\t\t], { type: \"text/javascript\" });\n\t\tconst blobUrl = URL.createObjectURL(blob);\n\t\tconst worker = new Worker(blobUrl);\n\n\t\tworker.onmessage = this._callback.bind(this);\n\n\t\tthis._worker = worker;\n\t}\n\n\t/**\n\t * Create a timeout loop\n\t */\n\tprivate _createTimeout(): void {\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._createTimeout();\n\t\t\tthis._callback();\n\t\t}, this._updateInterval * 1000);\n\t}\n\n\t/**\n\t * Create the clock source.\n\t */\n\tprivate _createClock(): void {\n\t\tif (this._type === \"worker\") {\n\t\t\ttry {\n\t\t\t\tthis._createWorker();\n\t\t\t} catch (e) {\n\t\t\t\t// workers not supported, fallback to timeout\n\t\t\t\tthis._type = \"timeout\";\n\t\t\t\tthis._createClock();\n\t\t\t}\n\t\t} else if (this._type === \"timeout\") {\n\t\t\tthis._createTimeout();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up the current clock source\n\t */\n\tprivate _disposeClock(): void {\n\t\tif (this._timeout) {\n\t\t\tclearTimeout(this._timeout);\n\t\t}\n\t\tif (this._worker) {\n\t\t\tthis._worker.terminate();\n\t\t\tthis._worker.onmessage = null;\n\t\t}\n\t}\n\n\t/**\n\t * The rate in seconds the ticker will update\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._updateInterval = Math.max(interval, this._minimumUpdateInterval);\n\t\tif (this._type === \"worker\") {\n\t\t\tthis._worker?.postMessage(this._updateInterval * 1000);\n\t\t}\n\t}\n\n\t/**\n\t * The type of the ticker, either a worker or a timeout\n\t */\n\tget type(): TickerClockSource {\n\t\treturn this._type;\n\t}\n\tset type(type: TickerClockSource) {\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): void {\n\t\tthis._disposeClock();\n\t}\n}\n","import {\n\tAudioBuffer, isAnyAudioContext,\n\tisAnyAudioNode, isAnyAudioParam,\n\tisAnyOfflineAudioContext\n} from \"standardized-audio-context\";\n\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg: any): arg is AudioParam {\n\treturn isAnyAudioParam(arg);\n}\n\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg: any): arg is AudioNode {\n\treturn isAnyAudioNode(arg);\n}\n\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg: any): arg is OfflineAudioContext {\n\treturn isAnyOfflineAudioContext(arg);\n}\n\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg: any): arg is AudioContext {\n\treturn isAnyAudioContext(arg);\n}\n\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg: any): arg is AudioBuffer {\n\treturn arg instanceof AudioBuffer;\n}\n","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n\ntype BaseToneOptions = import(\"../Tone\").BaseToneOptions;\n\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key: string, arg: any): boolean {\n\treturn key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\n/**\n * Recursively merge an object\n * @param target the object to merge into\n * @param sources the source objects to merge\n */\nexport function deepMerge<T>(target: T): T;\nexport function deepMerge<T, U>(target: T, source1: U): T & U;\nexport function deepMerge<T, U, V>(target: T, source1: U, source2: V): T & U & V;\nexport function deepMerge<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\nexport function deepMerge(target: any, ...sources: any[]): any {\n\tif (!sources.length) {\n\t\treturn target; \n\t}\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (noCopy(key, source[key])) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t} else if (isObject(source[key])) {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tObject.assign(target, { [key]: {} }); \n\t\t\t\t}\n\t\t\t\tdeepMerge(target[key], source[key] as any);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] as any });\n\t\t\t}\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals<T>(arrayA: T[], arrayB: T[]): boolean {\n\treturn arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments<T extends object>(\n\tdefaults: T,\n\targsArray: IArguments,\n\tkeys: Array<keyof T> = [],\n\tobjKey?: keyof T,\n): T {\n\tconst opts: Partial<T> = {};\n\tconst args = Array.from(argsArray);\n\t// if the first argument is an object and has an object key\n\tif (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n\t\t// if it's not part of the defaults\n\t\tconst partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n\t\tif (!partOfDefaults) {\n\t\t\t// merge that key\n\t\t\tdeepMerge(opts, { [objKey]: args[0] });\n\t\t\t// remove the obj key from the keys\n\t\t\tkeys.splice(keys.indexOf(objKey), 1);\n\t\t\t// shift the first argument off\n\t\t\targs.shift();\n\t\t}\n\t}\n\tif (args.length === 1 && isObject(args[0])) {\n\t\tdeepMerge(opts, args[0]);\n\t} else {\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (isDefined(args[i])) {\n\t\t\t\topts[keys[i]] = args[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn deepMerge(defaults, opts);\n}\n\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance<T>(instance: T): BaseToneOptions {\n\ttype ToneClass = {\n\t\tconstructor: ToneClass;\n\t\tgetDefaults: () => BaseToneOptions;\n\t} & T;\n\n\treturn (instance as ToneClass).constructor.getDefaults();\n}\n\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg<T>(given: T, fallback: T): T {\n\tif (isUndef(given)) {\n\t\treturn fallback;\n\t} else {\n\t\treturn given;\n\t}\n}\n\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject<T extends object, O extends string[]>(obj: T, omit: O): Omit<T, keyof O> {\n\tomit.forEach(prop => {\n\t\tif (Reflect.has(obj, prop)) {\n\t\t\tdelete obj[prop];\n\t\t}\n\t});\n\treturn obj;\n}\n","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n\n//-------------------------------------\n// \tTONE\n//-------------------------------------\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseToneOptions { }\n\n/**\n * Tone is the base class of all other classes.\n * \n * @category Core\n * @constructor\n */\nexport abstract class Tone {\n\n\t/**\n\t * The version number semver\n\t */\n\tstatic version: string = version;\n\n\t/**\n\t * The name of the class\n\t */\n\tprotected abstract name: string;\n\n\t/**\n\t * Returns all of the default options belonging to the class.\n\t */\n\tstatic getDefaults(): BaseToneOptions {\n\t\treturn {};\n\t}\n\n\t//-------------------------------------\n\t// \tDEBUGGING\n\t//-------------------------------------\n\n\t/**\n\t * Set this debug flag to log all events that happen in this class.\n\t */\n\tdebug = false;\n\n\t/**\n\t * Prints the outputs to the console log for debugging purposes.\n\t * Prints the contents only if either the object has a property\n\t * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n\t * is set to the name of the class.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * // prints all logs originating from this oscillator\n\t * osc.debug = true;\n\t * // calls to start/stop will print in the console\n\t * osc.start();\n\t */\n\tprotected log(...args: any[]): void {\n\t\t// if the object is either set to debug = true\n\t\t// or if there is a string on the Tone.global.with the class name\n\t\tif (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n\t\t\tlog(this, ...args);\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tDISPOSING\n\t//-------------------------------------\n\n\t/**\n\t * Indicates if the instance was disposed\n\t */\n\tprivate _wasDisposed = false;\n\n\t/**\n\t * disconnect and dispose.\n\t */\n\tdispose(): this {\n\t\tthis._wasDisposed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Indicates if the instance was disposed. 'Disposing' an\n\t * instance means that all of the Web Audio nodes that were\n\t * created for the instance are disconnected and freed for garbage collection.\n\t */\n\tget disposed(): boolean {\n\t\treturn this._wasDisposed;\n\t}\n\n\t/**\n\t * Convert the class to a string\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.toString());\n\t */\n\ttoString(): string {\n\t\treturn this.name;\n\t}\n}\n","/**\n * The threshold for correctness for operators. Less than one sample even \n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n\n/**\n * Test if A is greater than B\n */\nexport function GT(a: number, b: number): boolean {\n\treturn a > b + EPSILON;\n}\n\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a: number, b: number): boolean {\n\treturn GT(a, b) || EQ(a, b);\n}\n\n/**\n * Test if A is less than B\n */\nexport function LT(a: number, b: number): boolean {\n\treturn a + EPSILON < b;\n}\n\n/**\n * Test if A is less than B\n */\nexport function EQ(a: number, b: number): boolean {\n\treturn Math.abs(a - b) < EPSILON;\n}\n\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.max(Math.min(value, max), min);\n}\n","import { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n\ntype TimelineSearchParam = \"ticks\" | \"time\";\n\n/**\n * The options object for Timeline\n */\ninterface TimelineOptions {\n\tmemory: number;\n\tincreasing: boolean;\n}\n\n/**\n * An event must have a time number\n */\nexport interface TimelineEvent {\n\ttime: number;\n}\n\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline<GenericEvent extends TimelineEvent> extends Tone {\n\n\treadonly name: string = \"Timeline\";\n\n\t/**\n\t * The memory of the timeline, i.e.\n\t * how many events in the past it will retain\n\t */\n\tmemory: number;\n\n\t/**\n\t * The array of scheduled timeline events\n\t */\n\tprotected _timeline: GenericEvent[] = [];\n\n\t/**\n\t * If the time value must always be greater than or equal to the last \n\t * element on the list. \n\t */\n\tincreasing: boolean;\n\n\t/**\n\t * @param memory The number of previous events that are retained.\n\t */\n\tconstructor(memory?: number);\n\tconstructor(options?: Partial<TimelineOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n\n\t\tthis.memory = options.memory;\n\t\tthis.increasing = options.increasing;\n\t}\n\n\tstatic getDefaults(): TimelineOptions {\n\t\treturn {\n\t\t\tmemory: Infinity,\n\t\t\tincreasing: false,\n\t\t};\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t */\n\tget length(): number {\n\t\treturn this._timeline.length;\n\t}\n\n\t/**\n\t * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t * @param event  The event object to insert into the timeline.\n\t */\n\tadd(event: GenericEvent): this {\n\t\t// the event needs to have a time attribute\n\t\tassert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n\t\tevent.time = event.time.valueOf();\n\t\tif (this.increasing && this.length) {\n\t\t\tconst lastValue = this._timeline[this.length - 1] as GenericEvent;\n\t\t\tassert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\t\t\tthis._timeline.push(event);\n\t\t} else {\n\t\t\tconst index = this._search(event.time);\n\t\t\tthis._timeline.splice(index + 1, 0, event);\n\t\t}\n\t\t// if the length is more than the memory, remove the previous ones\n\t\tif (this.length > this.memory) {\n\t\t\tconst diff = this.length - this.memory;\n\t\t\tthis._timeline.splice(0, diff);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  {Object}  event  The event object to remove from the list.\n\t * @returns {Timeline} this\n\t */\n\tremove(event: GenericEvent): this {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index !== -1) {\n\t\t\tthis._timeline.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the nearest event whose time is less than or equal to the given time.\n\t * @param  time  The time to query.\n\t */\n\tget(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index !== -1) {\n\t\t\treturn this._timeline[index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Return the first event in the timeline without removing it\n\t * @returns {Object} The first event object\n\t */\n\tpeek(): GenericEvent | undefined {\n\t\treturn this._timeline[0];\n\t}\n\n\t/**\n\t * Return the first event in the timeline and remove it\n\t */\n\tshift(): GenericEvent | undefined {\n\t\treturn this._timeline.shift();\n\t}\n\n\t/**\n\t * Get the event which is scheduled after the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetAfter(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index + 1 < this._timeline.length) {\n\t\t\treturn this._timeline[index + 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Get the event before the event at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetBefore(time: number): GenericEvent | null {\n\t\tconst len = this._timeline.length;\n\t\t// if it's after the last item, return the last item\n\t\tif (len > 0 && this._timeline[len - 1].time < time) {\n\t\t\treturn this._timeline[len - 1];\n\t\t}\n\t\tconst index = this._search(time);\n\t\tif (index - 1 >= 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel events at and after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tif (this._timeline.length > 1) {\n\t\t\tlet index = this._search(after);\n\t\t\tif (index >= 0) {\n\t\t\t\tif (EQ(this._timeline[index].time, after)) {\n\t\t\t\t\t// get the first item with that time\n\t\t\t\t\tfor (let i = index; i >= 0; i--) {\n\t\t\t\t\t\tif (EQ(this._timeline[i].time, after)) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t} else if (this._timeline.length === 1) {\n\t\t\t// the first item's time\n\t\t\tif (GTE(this._timeline[0].time, after)) {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events before or equal to the given time.\n\t * @param  time  The time to cancel before.\n\t */\n\tcancelBefore(time: number): this {\n\t\tconst index = this._search(time);\n\t\tif (index >= 0) {\n\t\t\tthis._timeline = this._timeline.slice(index + 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the previous event if there is one. null otherwise\n\t * @param  event The event to find the previous one of\n\t * @return The event right before the given event\n\t */\n\tpreviousEvent(event: GenericEvent): GenericEvent | null {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index > 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Does a binary search on the timeline array and returns the\n\t * nearest event index whose time is after or equal to the given time.\n\t * If a time is searched before the first index in the timeline, -1 is returned.\n\t * If the time is after the end, the index of the last item is returned.\n\t */\n\tprotected _search(time: number, param: TimelineSearchParam = \"time\"): number {\n\t\tif (this._timeline.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tlet beginning = 0;\n\t\tconst len = this._timeline.length;\n\t\tlet end = len;\n\t\tif (len > 0 && this._timeline[len - 1][param] <= time) {\n\t\t\treturn len - 1;\n\t\t}\n\t\twhile (beginning < end) {\n\t\t\t// calculate the midpoint for roughly equal partition\n\t\t\tlet midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t\tconst event = this._timeline[midPoint];\n\t\t\tconst nextEvent = this._timeline[midPoint + 1];\n\t\t\tif (EQ(event[param], time)) {\n\t\t\t\t// choose the last one that has the same time\n\t\t\t\tfor (let i = midPoint; i < this._timeline.length; i++) {\n\t\t\t\t\tconst testEvent = this._timeline[i];\n\t\t\t\t\tif (EQ(testEvent[param], time)) {\n\t\t\t\t\t\tmidPoint = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn midPoint;\n\t\t\t} else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n\t\t\t\treturn midPoint;\n\t\t\t} else if (GT(event[param], time)) {\n\t\t\t\t// search lower\n\t\t\t\tend = midPoint;\n\t\t\t} else {\n\t\t\t\t// search upper\n\t\t\t\tbeginning = midPoint + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Internal iterator. Applies extra safety checks for\n\t * removing items from the array.\n\t */\n\tprivate _iterate(\n\t\tcallback: (event: GenericEvent) => void,\n\t\tlowerBound = 0, upperBound = this._timeline.length - 1,\n\t): void {\n\t\tthis._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n\t}\n\n\t/**\n\t * Iterate over everything in the array\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: (event: GenericEvent) => void): this {\n\t\tthis._iterate(callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or before the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBefore(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array after the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAfter(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst lowerBound = this._search(time);\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array between the startTime and endTime.\n\t * The timerange is inclusive of the startTime, but exclusive of the endTime.\n\t * range = [startTime, endTime).\n\t * @param  startTime The time to check if items are before\n\t * @param  endTime The end of the test interval.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBetween(startTime: number, endTime: number, callback: (event: GenericEvent) => void): this {\n\t\tlet lowerBound = this._search(startTime);\n\t\tlet upperBound = this._search(endTime);\n\t\tif (lowerBound !== -1 && upperBound !== -1) {\n\t\t\tif (this._timeline[lowerBound].time !== startTime) {\n\t\t\t\tlowerBound += 1;\n\t\t\t}\n\t\t\t// exclusive of the end time\n\t\t\tif (this._timeline[upperBound].time === endTime) {\n\t\t\t\tupperBound -= 1;\n\t\t\t}\n\t\t\tthis._iterate(callback, lowerBound, upperBound);\n\t\t} else if (lowerBound === -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or after the given time. Similar to\n\t * forEachAfter, but includes the item(s) at the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tlet lowerBound = this._search(time);\n\t\t// work backwards until the event time is less than time\n\t\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t\tlowerBound--;\n\t\t}\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at the given time\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n\t\t\tlet lowerBound = upperBound;\n\t\t\tfor (let i = upperBound; i >= 0; i--) {\n\t\t\t\tif (EQ(this._timeline[i].time, time)) {\n\t\t\t\t\tlowerBound = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._iterate(event => {\n\t\t\t\tcallback(event);\n\t\t\t}, lowerBound, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._timeline = [];\n\t\treturn this;\n\t}\n}\n","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n\ntype Context = import(\"./Context\").Context;\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb: (ctx: Context) => void): void {\n\tnotifyNewContext.push(cb);\n}\n\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx: Context): void {\n\t// add any additional modules\n\tnotifyNewContext.forEach(cb => cb(ctx));\n}\n\n/**\n * Array of callbacks to invoke when a new context is closed\n */\nconst notifyCloseContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb: (ctx: Context) => void): void {\n\tnotifyCloseContext.push(cb);\n}\n\nexport function closeContext(ctx: Context): void {\n\t// remove any additional modules\n\tnotifyCloseContext.forEach(cb => cb(ctx));\n}\n","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n\nexport interface EmitterEventObject {\n\t[event: string]: Array<(...args: any[]) => void>;\n}\n\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter<EventType extends string = string> extends Tone {\n\n\treadonly name: string = \"Emitter\";\n\n\t/**\n\t * Private container for the events\n\t */\n\tprivate _events?: EmitterEventObject;\n\n\t/**\n\t * Bind a callback to a specific event.\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\ton(event: EventType, callback: (...args: any[]) => void): this {\n\t\t// split the event\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (!this._events.hasOwnProperty(eventName)) {\n\t\t\t\tthis._events[eventName] = [];\n\t\t\t}\n\t\t\tthis._events[eventName].push(callback);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a callback which is only invoked once\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\tonce(event: EventType, callback: (...args: any[]) => void): this {\n\t\tconst boundCallback = (...args: any[]) => {\n\t\t\t// invoke the callback\n\t\t\tcallback(...args);\n\t\t\t// remove the event\n\t\t\tthis.off(event, boundCallback);\n\t\t};\n\t\tthis.on(event, boundCallback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove the event listener.\n\t * @param  event     The event to stop listening to.\n\t * @param  callback  The callback which was bound to the event with Emitter.on.\n\t *                   If no callback is given, all callbacks events are removed.\n\t */\n\toff(event: EventType, callback?: (...args: any[]) => void): this {\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (this._events.hasOwnProperty(eventName)) {\n\t\t\t\tif (isUndef(callback)) {\n\t\t\t\t\tthis._events[eventName] = [];\n\t\t\t\t} else {\n\t\t\t\t\tconst eventList = this._events[eventName];\n\t\t\t\t\tfor (let i = eventList.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (eventList[i] === callback) {\n\t\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke all of the callbacks bound to the event\n\t * with any arguments passed in.\n\t * @param  event  The name of the event.\n\t * @param args The arguments to pass to the functions listening.\n\t */\n\temit(event, ...args: any[]): this {\n\t\tif (this._events) {\n\t\t\tif (this._events.hasOwnProperty(event)) {\n\t\t\t\tconst eventList = this._events[event].slice(0);\n\t\t\t\tfor (let i = 0, len = eventList.length; i < len; i++) {\n\t\t\t\t\teventList[i].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add Emitter functions (on/off/emit) to the object\n\t */\n\tstatic mixin(constr: any): void {\n\t\t// instance._events = {};\n\t\t[\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n\t\t\tconst property = Object.getOwnPropertyDescriptor(Emitter.prototype, name) as PropertyDescriptor;\n\t\t\tObject.defineProperty(constr.prototype, name, property);\n\t\t});\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events = undefined;\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Emitter } from \"../util/Emitter\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\n// these are either not used in Tone.js or deprecated and not implemented.\nexport type ExcludedFromBaseAudioContext =\n\t| \"onstatechange\"\n\t| \"addEventListener\"\n\t| \"removeEventListener\"\n\t| \"listener\"\n\t| \"dispatchEvent\"\n\t| \"audioWorklet\"\n\t| \"destination\"\n\t| \"createScriptProcessor\";\n\n// the subset of the BaseAudioContext which Tone.Context implements.\nexport type BaseAudioContextSubset = Omit<\nBaseAudioContext,\nExcludedFromBaseAudioContext\n>;\n\nexport type ContextLatencyHint = AudioContextLatencyCategory;\n\nexport abstract class BaseContext\n\textends Emitter<\"statechange\" | \"tick\">\n\timplements BaseAudioContextSubset {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tabstract createAnalyser(): AnalyserNode;\n\n\tabstract createOscillator(): OscillatorNode;\n\n\tabstract createBufferSource(): AudioBufferSourceNode;\n\n\tabstract createBiquadFilter(): BiquadFilterNode;\n\n\tabstract createBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer;\n\n\tabstract createChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode;\n\n\tabstract createChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode;\n\n\tabstract createConstantSource(): ConstantSourceNode;\n\n\tabstract createConvolver(): ConvolverNode;\n\n\tabstract createDelay(_maxDelayTime?: number | undefined): DelayNode;\n\n\tabstract createDynamicsCompressor(): DynamicsCompressorNode;\n\n\tabstract createGain(): GainNode;\n\n\tabstract createIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode;\n\n\tabstract createPanner(): PannerNode;\n\n\tabstract createPeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave;\n\n\tabstract createStereoPanner(): StereoPannerNode;\n\n\tabstract createWaveShaper(): WaveShaperNode;\n\n\tabstract createMediaStreamSource(\n\t\t_stream: MediaStream\n\t): MediaStreamAudioSourceNode;\n\n\tabstract createMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode;\n\n\tabstract createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n\n\tabstract decodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer>;\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tabstract createAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode;\n\n\tabstract get rawContext(): AnyAudioContext;\n\n\tabstract addAudioWorkletModule(\n\t\t_url: string\n\t): Promise<void>;\n\n\tabstract lookAhead: number;\n\n\tabstract latencyHint: ContextLatencyHint | Seconds;\n\n\tabstract resume(): Promise<void>;\n\n\tabstract setTimeout(\n\t\t_fn: (...args: any[]) => void,\n\t\t_timeout: Seconds\n\t): number;\n\n\tabstract clearTimeout(_id: number): this;\n\n\tabstract setInterval(\n\t\t_fn: (...args: any[]) => void,\n\t\t_interval: Seconds\n\t): number;\n\n\tabstract clearInterval(_id: number): this;\n\n\tabstract getConstant(_val: number): AudioBufferSourceNode;\n\n\tabstract get currentTime(): Seconds;\n\n\tabstract get state(): AudioContextState;\n\n\tabstract get sampleRate(): number;\n\n\tabstract get listener(): Listener;\n\n\tabstract get transport(): Transport;\n\n\tabstract get draw(): Draw;\n\n\tabstract get destination(): Destination;\n\n\tabstract now(): Seconds;\n\n\tabstract immediate(): Seconds;\n\n\t/*\n\t * This is a placeholder so that JSON.stringify does not throw an error\n\t * This matches what JSON.stringify(audioContext) returns on a native\n\t * audioContext instance.\n\t */\n\ttoJSON(): Record<string, any> {\n\t\treturn {};\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { Ticker, TickerClockSource } from \"../clock/Ticker\";\nimport { Seconds } from \"../type/Units\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport {\n\tAnyAudioContext,\n\tcreateAudioContext,\n\tcreateAudioWorkletNode,\n} from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext, ContextLatencyHint } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Destination = import(\"./Destination\").Destination;\ntype Listener = import(\"./Listener\").Listener;\ntype Draw = import(\"../util/Draw\").Draw;\n\nexport interface ContextOptions {\n\tclockSource: TickerClockSource;\n\tlatencyHint: ContextLatencyHint;\n\tlookAhead: Seconds;\n\tupdateInterval: Seconds;\n\tcontext: AnyAudioContext;\n}\n\nexport interface ContextTimeoutEvent {\n\tcallback: (...args: any[]) => void;\n\tid: number;\n\ttime: Seconds;\n}\n\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n\treadonly name: string = \"Context\";\n\n\t/**\n\t * private reference to the BaseAudioContext\n\t */\n\tprotected readonly _context: AnyAudioContext;\n\n\t/**\n\t * A reliable callback method\n\t */\n\tprivate readonly _ticker: Ticker;\n\n\t/**\n\t * The default latency hint\n\t */\n\tprivate _latencyHint!: ContextLatencyHint | Seconds;\n\n\t/**\n\t * An object containing all of the constants AudioBufferSourceNodes\n\t */\n\tprivate _constants = new Map<number, AudioBufferSourceNode>();\n\n\t/**\n\t * All of the setTimeout events.\n\t */\n\tprivate _timeouts: Timeline<ContextTimeoutEvent> = new Timeline();\n\n\t/**\n\t * The timeout id counter\n\t */\n\tprivate _timeoutIds = 0;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _transport!: Transport;\n\n\t/**\n\t * A reference the Listener singleton belonging to this context\n\t */\n\tprivate _listener!: Listener;\n\n\t/**\n\t * A reference the Destination singleton belonging to this context\n\t */\n\tprivate _destination!: Destination;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _draw!: Draw;\n\n\t/**\n\t * Private indicator if the context has been initialized\n\t */\n\tprivate _initialized = false;\n\n\t/**\n\t * Indicates if the context is an OfflineAudioContext or an AudioContext\n\t */\n\treadonly isOffline: boolean = false;\n\n\tconstructor(context?: AnyAudioContext);\n\tconstructor(options?: Partial<ContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Context.getDefaults(), arguments, [\n\t\t\t\"context\",\n\t\t]);\n\n\t\tif (options.context) {\n\t\t\tthis._context = options.context;\n\t\t\t// custom context provided, latencyHint unknown (unless explicitly provided in options)\n\t\t\tthis._latencyHint = arguments[0]?.latencyHint || \"\";\n\t\t} else {\n\t\t\tthis._context = createAudioContext({\n\t\t\t\tlatencyHint: options.latencyHint,\n\t\t\t});\n\t\t\tthis._latencyHint = options.latencyHint;\n\t\t}\n\n\t\tthis._ticker = new Ticker(\n\t\t\tthis.emit.bind(this, \"tick\"),\n\t\t\toptions.clockSource,\n\t\t\toptions.updateInterval,\n\t\t\tthis._context.sampleRate\n\t\t);\n\t\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t\t// fwd events from the context\n\t\tthis._context.onstatechange = () => {\n\t\t\tthis.emit(\"statechange\", this.state);\n\t\t};\n\t\t\n\t\t// if no custom updateInterval provided, updateInterval will be derived by lookAhead setter\n\t\tthis[arguments[0]?.hasOwnProperty(\"updateInterval\") ? \"_lookAhead\" : \"lookAhead\"] = options.lookAhead;\n\t}\n\n\tstatic getDefaults(): ContextOptions {\n\t\treturn {\n\t\t\tclockSource: \"worker\",\n\t\t\tlatencyHint: \"interactive\",\n\t\t\tlookAhead: 0.1,\n\t\t\tupdateInterval: 0.05,\n\t\t} as ContextOptions;\n\t}\n\n\t/**\n\t * Finish setting up the context. **You usually do not need to do this manually.**\n\t */\n\tprivate initialize(): this {\n\t\tif (!this._initialized) {\n\t\t\t// add any additional modules\n\t\t\tinitializeContext(this);\n\t\t\tthis._initialized = true;\n\t\t}\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn this._context.createAnalyser();\n\t}\n\tcreateOscillator(): OscillatorNode {\n\t\treturn this._context.createOscillator();\n\t}\n\tcreateBufferSource(): AudioBufferSourceNode {\n\t\treturn this._context.createBufferSource();\n\t}\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn this._context.createBiquadFilter();\n\t}\n\tcreateBuffer(\n\t\tnumberOfChannels: number,\n\t\tlength: number,\n\t\tsampleRate: number\n\t): AudioBuffer {\n\t\treturn this._context.createBuffer(numberOfChannels, length, sampleRate);\n\t}\n\tcreateChannelMerger(\n\t\tnumberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn this._context.createChannelMerger(numberOfInputs);\n\t}\n\tcreateChannelSplitter(\n\t\tnumberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn this._context.createChannelSplitter(numberOfOutputs);\n\t}\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn this._context.createConstantSource();\n\t}\n\tcreateConvolver(): ConvolverNode {\n\t\treturn this._context.createConvolver();\n\t}\n\tcreateDelay(maxDelayTime?: number | undefined): DelayNode {\n\t\treturn this._context.createDelay(maxDelayTime);\n\t}\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn this._context.createDynamicsCompressor();\n\t}\n\tcreateGain(): GainNode {\n\t\treturn this._context.createGain();\n\t}\n\tcreateIIRFilter(\n\t\tfeedForward: number[] | Float32Array,\n\t\tfeedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\t// @ts-ignore\n\t\treturn this._context.createIIRFilter(feedForward, feedback);\n\t}\n\tcreatePanner(): PannerNode {\n\t\treturn this._context.createPanner();\n\t}\n\tcreatePeriodicWave(\n\t\treal: number[] | Float32Array,\n\t\timag: number[] | Float32Array,\n\t\tconstraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn this._context.createPeriodicWave(real, imag, constraints);\n\t}\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn this._context.createStereoPanner();\n\t}\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn this._context.createWaveShaper();\n\t}\n\tcreateMediaStreamSource(stream: MediaStream): MediaStreamAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamSource(stream);\n\t}\n\tcreateMediaElementSource(\n\t\telement: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaElementSource(element);\n\t}\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamDestination();\n\t}\n\tdecodeAudioData(audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn this._context.decodeAudioData(audioData);\n\t}\n\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget state(): AudioContextState {\n\t\treturn this._context.state;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget sampleRate(): number {\n\t\treturn this._context.sampleRate;\n\t}\n\n\t/**\n\t * The listener\n\t */\n\tget listener(): Listener {\n\t\tthis.initialize();\n\t\treturn this._listener;\n\t}\n\tset listener(l) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The listener cannot be set after initialization.\"\n\t\t);\n\t\tthis._listener = l;\n\t}\n\n\t/**\n\t * There is only one Transport per Context. It is created on initialization.\n\t */\n\tget transport(): Transport {\n\t\tthis.initialize();\n\t\treturn this._transport;\n\t}\n\tset transport(t: Transport) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The transport cannot be set after initialization.\"\n\t\t);\n\t\tthis._transport = t;\n\t}\n\n\t/**\n\t * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n\t */\n\tget draw(): Draw {\n\t\tthis.initialize();\n\t\treturn this._draw;\n\t}\n\tset draw(d) {\n\t\tassert(!this._initialized, \"Draw cannot be set after initialization.\");\n\t\tthis._draw = d;\n\t}\n\n\t/**\n\t * A reference to the Context's destination node.\n\t */\n\tget destination(): Destination {\n\t\tthis.initialize();\n\t\treturn this._destination;\n\t}\n\tset destination(d: Destination) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The destination cannot be set after initialization.\"\n\t\t);\n\t\tthis._destination = d;\n\t}\n\n\t//--------------------------------------------\n\t// AUDIO WORKLET\n\t//--------------------------------------------\n\n\t/**\n\t * Maps a module name to promise of the addModule method\n\t */\n\tprivate _workletPromise: null | Promise<void> = null;\n\n\t/**\n\t * Create an audio worklet node from a name and options. The module\n\t * must first be loaded using [[addAudioWorkletModule]].\n\t */\n\tcreateAudioWorkletNode(\n\t\tname: string,\n\t\toptions?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn createAudioWorkletNode(this.rawContext, name, options);\n\t}\n\n\t/**\n\t * Add an AudioWorkletProcessor module\n\t * @param url The url of the module\n\t */\n\tasync addAudioWorkletModule(url: string): Promise<void> {\n\t\tassert(\n\t\t\tisDefined(this.rawContext.audioWorklet),\n\t\t\t\"AudioWorkletNode is only available in a secure context (https or localhost)\"\n\t\t);\n\t\tif (!this._workletPromise) {\n\t\t\tthis._workletPromise = this.rawContext.audioWorklet.addModule(url);\n\t\t}\n\t\tawait this._workletPromise;\n\t}\n\n\t/**\n\t * Returns a promise which resolves when all of the worklets have been loaded on this context\n\t */\n\tprotected async workletsAreReady(): Promise<void> {\n\t\tawait this._workletPromise ? this._workletPromise : Promise.resolve();\n\t}\n\n\t//---------------------------\n\t// TICKER\n\t//---------------------------\n\n\t/**\n\t * How often the interval callback is invoked.\n\t * This number corresponds to how responsive the scheduling\n\t * can be. Setting to 0 will result in the lowest practial interval\n\t * based on context properties. context.updateInterval + context.lookAhead\n\t * gives you the total latency between scheduling an event and hearing it.\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._ticker.updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._ticker.updateInterval = interval;\n\t}\n\n\t/**\n\t * What the source of the clock is, either \"worker\" (default),\n\t * \"timeout\", or \"offline\" (none).\n\t */\n\tget clockSource(): TickerClockSource {\n\t\treturn this._ticker.type;\n\t}\n\tset clockSource(type: TickerClockSource) {\n\t\tthis._ticker.type = type;\n\t}\n\n\t/**\n\t * The amount of time into the future events are scheduled. Giving Web Audio\n\t * a short amount of time into the future to schedule events can reduce clicks and\n\t * improve performance. This value can be set to 0 to get the lowest latency.\n\t * Adjusting this value also affects the [[updateInterval]].\n\t */\n\tget lookAhead(): Seconds {\n\t\treturn this._lookAhead;\n\t}\n\tset lookAhead(time: Seconds) {\n\t\tthis._lookAhead = time;\n\t\t// if lookAhead is 0, default to .01 updateInterval\n\t\tthis.updateInterval = time ? (time / 2) : .01;\n\t}\t\n\tprivate _lookAhead!: Seconds;\n\n\t/**\n\t * The type of playback, which affects tradeoffs between audio\n\t * output latency and responsiveness.\n\t * In addition to setting the value in seconds, the latencyHint also\n\t * accepts the strings \"interactive\" (prioritizes low latency),\n\t * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t * latency and performance).\n\t * @example\n\t * // prioritize sustained playback\n\t * const context = new Tone.Context({ latencyHint: \"playback\" });\n\t * // set this context as the global Context\n\t * Tone.setContext(context);\n\t * // the global context is gettable with Tone.getContext()\n\t * console.log(Tone.getContext().latencyHint);\n\t */\n\tget latencyHint(): ContextLatencyHint | Seconds {\n\t\treturn this._latencyHint;\n\t}\n\n\t/**\n\t * The unwrapped AudioContext or OfflineAudioContext\n\t */\n\tget rawContext(): AnyAudioContext {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * The current audio context time plus a short [[lookAhead]].\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(\"now\", Tone.now());\n\t * }, 100);\n\t */\n\tnow(): Seconds {\n\t\treturn this._context.currentTime + this._lookAhead;\n\t}\n\n\t/**\n\t * The current audio context time without the [[lookAhead]].\n\t * In most cases it is better to use [[now]] instead of [[immediate]] since\n\t * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n\t * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n\t * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n\t */\n\timmediate(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\n\t/**\n\t * Starts the audio context from a suspended state. This is required\n\t * to initially start the AudioContext. See [[Tone.start]]\n\t */\n\tresume(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\treturn this._context.resume();\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\t/**\n\t * Close the context. Once closed, the context can no longer be used and\n\t * any AudioNodes created from the context will be silent.\n\t */\n\tasync close(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\tawait this._context.close();\n\t\t}\n\t\tif (this._initialized) {\n\t\t\tcloseContext(this);\n\t\t}\n\t}\n\n\t/**\n\t * **Internal** Generate a looped buffer at some constant value.\n\t */\n\tgetConstant(val: number): AudioBufferSourceNode {\n\t\tif (this._constants.has(val)) {\n\t\t\treturn this._constants.get(val) as AudioBufferSourceNode;\n\t\t} else {\n\t\t\tconst buffer = this._context.createBuffer(\n\t\t\t\t1,\n\t\t\t\t128,\n\t\t\t\tthis._context.sampleRate\n\t\t\t);\n\t\t\tconst arr = buffer.getChannelData(0);\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = val;\n\t\t\t}\n\t\t\tconst constant = this._context.createBufferSource();\n\t\t\tconstant.channelCount = 1;\n\t\t\tconstant.channelCountMode = \"explicit\";\n\t\t\tconstant.buffer = buffer;\n\t\t\tconstant.loop = true;\n\t\t\tconstant.start(0);\n\t\t\tthis._constants.set(val, constant);\n\t\t\treturn constant;\n\t\t}\n\t}\n\n\t/**\n\t * Clean up. Also closes the audio context.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._ticker.dispose();\n\t\tthis._timeouts.dispose();\n\t\tObject.keys(this._constants).map((val) =>\n\t\t\tthis._constants[val].disconnect()\n\t\t);\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// TIMEOUTS\n\t//---------------------------\n\n\t/**\n\t * The private loop which keeps track of the context scheduled timeouts\n\t * Is invoked from the clock source\n\t */\n\tprivate _timeoutLoop(): void {\n\t\tconst now = this.now();\n\t\tlet firstEvent = this._timeouts.peek();\n\t\twhile (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n\t\t\t// invoke the callback\n\t\t\tfirstEvent.callback();\n\t\t\t// shift the first event off\n\t\t\tthis._timeouts.shift();\n\t\t\t// get the next one\n\t\t\tfirstEvent = this._timeouts.peek();\n\t\t}\n\t}\n\n\t/**\n\t * A setTimeout which is guaranteed by the clock source.\n\t * Also runs in the offline context.\n\t * @param  fn       The callback to invoke\n\t * @param  timeout  The timeout in seconds\n\t * @returns ID to use when invoking Context.clearTimeout\n\t */\n\tsetTimeout(fn: (...args: any[]) => void, timeout: Seconds): number {\n\t\tthis._timeoutIds++;\n\t\tconst now = this.now();\n\t\tthis._timeouts.add({\n\t\t\tcallback: fn,\n\t\t\tid: this._timeoutIds,\n\t\t\ttime: now + timeout,\n\t\t});\n\t\treturn this._timeoutIds;\n\t}\n\n\t/**\n\t * Clears a previously scheduled timeout with Tone.context.setTimeout\n\t * @param  id  The ID returned from setTimeout\n\t */\n\tclearTimeout(id: number): this {\n\t\tthis._timeouts.forEach((event) => {\n\t\t\tif (event.id === id) {\n\t\t\t\tthis._timeouts.remove(event);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clear the function scheduled by [[setInterval]]\n\t */\n\tclearInterval(id: number): this {\n\t\treturn this.clearTimeout(id);\n\t}\n\n\t/**\n\t * Adds a repeating event to the context's callback clock\n\t */\n\tsetInterval(fn: (...args: any[]) => void, interval: Seconds): number {\n\t\tconst id = ++this._timeoutIds;\n\t\tconst intervalFn = () => {\n\t\t\tconst now = this.now();\n\t\t\tthis._timeouts.add({\n\t\t\t\tcallback: () => {\n\t\t\t\t\t// invoke the callback\n\t\t\t\t\tfn();\n\t\t\t\t\t// invoke the event to repeat it\n\t\t\t\t\tintervalFn();\n\t\t\t\t},\n\t\t\t\tid,\n\t\t\t\ttime: now + interval,\n\t\t\t});\n\t\t};\n\t\t// kick it off\n\t\tintervalFn();\n\t\treturn id;\n\t}\n}\n","import { isArray } from \"./TypeCheck\";\n\n// return an interface which excludes certain keys\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => readOnly(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\tenumerable: true,\n\t\t\twritable: false,\n\t\t});\n\t}\n}\n\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => writable(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\twritable: true,\n\t\t});\n\t}\n}\n\nexport const noOp: (...args: any[]) => any = () => {\n\t// no operation here!\n};\n\n/**\n * Recursive Partial taken from here: https://stackoverflow.com/a/51365037\n */\nexport type RecursivePartial<T> = {\n\t[P in keyof T]?:\n\tT[P] extends Array<infer U> ? Array<RecursivePartial<U>> :\n\t\tT[P] extends object ? RecursivePartial<T[P]> :\n\t\t\tT[P];\n};\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { Samples, Seconds } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n\ninterface ToneAudioBufferOptions {\n\turl?: string | AudioBuffer | ToneAudioBuffer;\n\treverse: boolean;\n\tonload: (buffer?: ToneAudioBuffer) => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n\treadonly name: string = \"ToneAudioBuffer\";\n\n\t/**\n\t * stores the loaded AudioBuffer\n\t */\n\tprivate _buffer?: AudioBuffer;\n\n\t/**\n\t * indicates if the buffer should be reversed or not\n\t */\n\tprivate _reversed!: boolean;\n\n\t/**\n\t * Callback when the buffer is loaded.\n\t */\n\tonload: (buffer: ToneAudioBuffer) => void = noOp;\n\n\t/**\n\t *\n\t * @param url The url to load, or the audio buffer to set.\n\t * @param onload A callback which is invoked after the buffer is loaded.\n\t *                           It's recommended to use `ToneAudioBuffer.on('load', callback)` instead\n\t *                           since it will give you a callback when _all_ buffers are loaded.\n\t * @param onerror The callback to invoke if there is an error\n\t */\n\tconstructor(\n\t\turl?: string | ToneAudioBuffer | AudioBuffer,\n\t\tonload?: (buffer: ToneAudioBuffer) => void,\n\t\tonerror?: (error: Error) => void\n\t);\n\tconstructor(options?: Partial<ToneAudioBufferOptions>);\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst options = optionsFromArguments(\n\t\t\tToneAudioBuffer.getDefaults(),\n\t\t\targuments,\n\t\t\t[\"url\", \"onload\", \"onerror\"]\n\t\t);\n\n\t\tthis.reverse = options.reverse;\n\t\tthis.onload = options.onload;\n\n\t\tif (isString(options.url)) {\n\t\t\t// initiate the download\n\t\t\tthis.load(options.url).catch(options.onerror);\n\t\t} else if (options.url) {\n\t\t\tthis.set(options.url);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneAudioBufferOptions {\n\t\treturn {\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\treverse: false,\n\t\t};\n\t}\n\n\t/**\n\t * The sample rate of the AudioBuffer\n\t */\n\tget sampleRate(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.sampleRate;\n\t\t} else {\n\t\t\treturn getContext().sampleRate;\n\t\t}\n\t}\n\n\t/**\n\t * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n\t */\n\tset(buffer: AudioBuffer | ToneAudioBuffer): this {\n\t\tif (buffer instanceof ToneAudioBuffer) {\n\t\t\t// if it's loaded, set it\n\t\t\tif (buffer.loaded) {\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\t// otherwise when it's loaded, invoke it's callback\n\t\t\t\tbuffer.onload = () => {\n\t\t\t\t\tthis.set(buffer);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tthis._buffer = buffer;\n\t\t}\n\t\t// reverse it initially\n\t\tif (this._reversed) {\n\t\t\tthis._reverse();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The audio buffer stored in the object.\n\t */\n\tget(): AudioBuffer | undefined {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n\t * Invokes the callback once the audio buffer loads.\n\t * @param url The url of the buffer to load. filetype support depends on the browser.\n\t * @returns A Promise which resolves with this ToneAudioBuffer\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tconst doneLoading: Promise<void> = ToneAudioBuffer.load(url).then(\n\t\t\t(audioBuffer) => {\n\t\t\t\tthis.set(audioBuffer);\n\t\t\t\t// invoke the onload method\n\t\t\t\tthis.onload(this);\n\t\t\t}\n\t\t);\n\t\tToneAudioBuffer.downloads.push(doneLoading);\n\t\ttry {\n\t\t\tawait doneLoading;\n\t\t} finally {\n\t\t\t// remove the downloaded file\n\t\t\tconst index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n\t\t\tToneAudioBuffer.downloads.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffer = undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the audio buffer from the array.\n\t * To create a multichannel AudioBuffer, pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t */\n\tfromArray(array: Float32Array | Float32Array[]): this {\n\t\tconst isMultidimensional = isArray(array) && array[0].length > 0;\n\t\tconst channels = isMultidimensional ? array.length : 1;\n\t\tconst len = isMultidimensional\n\t\t\t? (array[0] as Float32Array).length\n\t\t\t: array.length;\n\t\tconst context = getContext();\n\t\tconst buffer = context.createBuffer(channels, len, context.sampleRate);\n\t\tconst multiChannelArray: Float32Array[] =\n\t\t\t!isMultidimensional && channels === 1\n\t\t\t\t? [array as Float32Array]\n\t\t\t\t: (array as Float32Array[]);\n\n\t\tfor (let c = 0; c < channels; c++) {\n\t\t\tbuffer.copyToChannel(multiChannelArray[c], c);\n\t\t}\n\t\tthis._buffer = buffer;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sums multiple channels into 1 channel\n\t * @param chanNum Optionally only copy a single channel from the array.\n\t */\n\ttoMono(chanNum?: number): this {\n\t\tif (isNumber(chanNum)) {\n\t\t\tthis.fromArray(this.toArray(chanNum));\n\t\t} else {\n\t\t\tlet outputArray = new Float32Array(this.length as number);\n\t\t\tconst numChannels = this.numberOfChannels;\n\t\t\tfor (let channel = 0; channel < numChannels; channel++) {\n\t\t\t\tconst channelArray = this.toArray(channel) as Float32Array;\n\t\t\t\tfor (let i = 0; i < channelArray.length; i++) {\n\t\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// divide by the number of channels\n\t\t\toutputArray = outputArray.map((sample) => sample / numChannels);\n\t\t\tthis.fromArray(outputArray);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n\t * Float32Array, and multichannel buffers will return multidimensional arrays.\n\t * @param channel Optionally only copy a single channel from the array.\n\t */\n\ttoArray(channel?: number): Float32Array | Float32Array[] {\n\t\tif (isNumber(channel)) {\n\t\t\treturn this.getChannelData(channel);\n\t\t} else if (this.numberOfChannels === 1) {\n\t\t\treturn this.toArray(0);\n\t\t} else {\n\t\t\tconst ret: Float32Array[] = [];\n\t\t\tfor (let c = 0; c < this.numberOfChannels; c++) {\n\t\t\t\tret[c] = this.getChannelData(c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Float32Array representing the PCM audio data for the specific channel.\n\t * @param  channel  The channel number to return\n\t * @return The audio as a TypedArray\n\t */\n\tgetChannelData(channel: number): Float32Array {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.getChannelData(channel);\n\t\t} else {\n\t\t\treturn new Float32Array(0);\n\t\t}\n\t}\n\n\t/**\n\t * Cut a subsection of the array and return a buffer of the\n\t * subsection. Does not modify the original buffer\n\t * @param start The time to start the slice\n\t * @param end The end time to slice. If none is given will default to the end of the buffer\n\t */\n\tslice(start: Seconds, end: Seconds = this.duration): ToneAudioBuffer {\n\t\tassert(this.loaded, \"Buffer is not loaded\");\n\t\tconst startSamples = Math.floor(start * this.sampleRate);\n\t\tconst endSamples = Math.floor(end * this.sampleRate);\n\t\tassert(\n\t\t\tstartSamples < endSamples,\n\t\t\t\"The start time must be less than the end time\"\n\t\t);\n\t\tconst length = endSamples - startSamples;\n\t\tconst retBuffer = getContext().createBuffer(\n\t\t\tthis.numberOfChannels,\n\t\t\tlength,\n\t\t\tthis.sampleRate\n\t\t);\n\t\tfor (let channel = 0; channel < this.numberOfChannels; channel++) {\n\t\t\tretBuffer.copyToChannel(\n\t\t\t\tthis.getChannelData(channel).subarray(startSamples, endSamples),\n\t\t\t\tchannel\n\t\t\t);\n\t\t}\n\t\treturn new ToneAudioBuffer(retBuffer);\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tprivate _reverse(): this {\n\t\tif (this.loaded) {\n\t\t\tfor (let i = 0; i < this.numberOfChannels; i++) {\n\t\t\t\tthis.getChannelData(i).reverse();\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffer is loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this.length > 0;\n\t}\n\n\t/**\n\t * The duration of the buffer in seconds.\n\t */\n\tget duration(): Seconds {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The length of the buffer in samples\n\t */\n\tget length(): Samples {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n\t */\n\tget numberOfChannels(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tget reverse(): boolean {\n\t\treturn this._reversed;\n\t}\n\tset reverse(rev: boolean) {\n\t\tif (this._reversed !== rev) {\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// STATIC METHODS\n\t//-------------------------------------\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tstatic baseUrl = \"\";\n\n\t/**\n\t * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n\t * pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t * @return A ToneAudioBuffer created from the array\n\t */\n\tstatic fromArray(array: Float32Array | Float32Array[]): ToneAudioBuffer {\n\t\treturn new ToneAudioBuffer().fromArray(array);\n\t}\n\n\t/**\n\t * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n\t * @param  url The url to load.\n\t * @return A promise which resolves to a ToneAudioBuffer\n\t */\n\tstatic async fromUrl(url: string): Promise<ToneAudioBuffer> {\n\t\tconst buffer = new ToneAudioBuffer();\n\t\treturn await buffer.load(url);\n\t}\n\n\t/**\n\t * All of the downloads\n\t */\n\tstatic downloads: Array<Promise<void>> = [];\n\n\t/**\n\t * Loads a url using fetch and returns the AudioBuffer.\n\t */\n\tstatic async load(url: string): Promise<AudioBuffer> {\n\t\t// test if the url contains multiple extensions\n\t\tconst matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n\t\tif (matches) {\n\t\t\tconst extensions = matches[1].split(\"|\");\n\t\t\tlet extension = extensions[0];\n\t\t\tfor (const ext of extensions) {\n\t\t\t\tif (ToneAudioBuffer.supportsType(ext)) {\n\t\t\t\t\textension = ext;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\turl = url.replace(matches[0], extension);\n\t\t}\n\n\t\t// make sure there is a slash between the baseUrl and the url\n\t\tconst baseUrl =\n\t\t\tToneAudioBuffer.baseUrl === \"\" ||\n\t\t\tToneAudioBuffer.baseUrl.endsWith(\"/\")\n\t\t\t\t? ToneAudioBuffer.baseUrl\n\t\t\t\t: ToneAudioBuffer.baseUrl + \"/\";\n\n\t\t// encode special characters in file path\n\t\tconst location = document.createElement(\"a\");\n\t\tlocation.href = baseUrl + url;\n\t\tlocation.pathname = (location.pathname + location.hash)\n\t\t\t.split(\"/\")\n\t\t\t.map(encodeURIComponent)\n\t\t\t.join(\"/\");\n\n\t\tconst response = await fetch(location.href);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`could not load url: ${url}`);\n\t\t}\n\t\tconst arrayBuffer = await response.arrayBuffer();\n\n\t\tconst audioBuffer = await getContext().decodeAudioData(arrayBuffer);\n\n\t\treturn audioBuffer;\n\t}\n\n\t/**\n\t * Checks a url's extension to see if the current browser can play that file type.\n\t * @param url The url/extension to test\n\t * @return If the file extension can be played\n\t * @static\n\t * @example\n\t * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n\t * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n\t */\n\tstatic supportsType(url: string): boolean {\n\t\tconst extensions = url.split(\".\");\n\t\tconst extension = extensions[extensions.length - 1];\n\t\tconst response = document\n\t\t\t.createElement(\"audio\")\n\t\t\t.canPlayType(\"audio/\" + extension);\n\t\treturn response !== \"\";\n\t}\n\n\t/**\n\t * Returns a Promise which resolves when all of the buffers have loaded\n\t */\n\tstatic async loaded(): Promise<void> {\n\t\t// this makes sure that the function is always async\n\t\tawait Promise.resolve();\n\t\twhile (ToneAudioBuffer.downloads.length) {\n\t\t\tawait ToneAudioBuffer.downloads[0];\n\t\t}\n\t}\n}\n","import { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { Seconds } from \"../type/Units\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n\n\treadonly name: string = \"OfflineContext\";\n\n\t/**\n\t * A private reference to the duration\n\t */\n\tprivate readonly _duration: Seconds;\n\n\t/**\n\t * An artificial clock source\n\t */\n\tprivate _currentTime: Seconds = 0;\n\n\t/**\n\t * Private reference to the OfflineAudioContext.\n\t */\n\tprotected _context!: OfflineAudioContext;\n\n\treadonly isOffline: boolean = true;\n\n\t/**\n\t * @param  channels  The number of channels to render\n\t * @param  duration  The duration to render in seconds\n\t * @param sampleRate the sample rate to render at\n\t */\n\tconstructor(\n\t\tchannels: number,\n\t\tduration: Seconds, \n\t\tsampleRate: number,\n\t);\n\tconstructor(context: OfflineAudioContext);\n\tconstructor() {\n\n\t\tsuper({\n\t\t\tclockSource: \"offline\",\n\t\t\tcontext: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\targuments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n\t\t\tlookAhead: 0,\n\t\t\tupdateInterval: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\t128 / arguments[0].sampleRate : 128 / arguments[2],\n\t\t});\n\n\t\tthis._duration = isOfflineAudioContext(arguments[0]) ?\n\t\t\targuments[0].length / arguments[0].sampleRate : arguments[1];\n\t}\n\n\t/**\n\t * Override the now method to point to the internal clock time\n\t */\n\tnow(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Same as this.now()\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Render just the clock portion of the audio context.\n\t */\n\tprivate async _renderClock(asynchronous: boolean): Promise<void> {\n\t\tlet index = 0;\n\t\twhile (this._duration - this._currentTime >= 0) {\n\n\t\t\t// invoke all the callbacks on that time\n\t\t\tthis.emit(\"tick\");\n\n\t\t\t// increment the clock in block-sized chunks\n\t\t\tthis._currentTime += 128 / this.sampleRate;\n\n\t\t\t// yield once a second of audio\n\t\t\tindex++;\n\t\t\tconst yieldEvery = Math.floor(this.sampleRate / 128);\n\t\t\tif (asynchronous && index % yieldEvery === 0) {\n\t\t\t\tawait new Promise(done => setTimeout(done, 1));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Render the output of the OfflineContext\n\t * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n\t */\n\tasync render(asynchronous = true): Promise<ToneAudioBuffer> {\n\t\tawait this.workletsAreReady();\n\t\tawait this._renderClock(asynchronous);\n\t\tconst buffer = await this._context.startRendering();\n\t\treturn new ToneAudioBuffer(buffer);\n\t}\n\n\t/**\n\t * Close the context\n\t */\n\tclose(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n","import { version } from \"../version\";\nimport { AnyAudioContext, hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { BaseContext } from \"./context/BaseContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext: BaseContext = dummyContext;\n\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext(): BaseContext {\n\tif (globalContext === dummyContext && hasAudioContext) {\n\t\tsetContext(new Context());\n\t}\n\treturn globalContext;\n}\n\n/**\n * Set the default audio context\n * @param context\n * @param disposeOld Pass `true` if you don't need the old context to dispose it.\n * @category Core\n */\nexport function setContext(context: BaseContext | AnyAudioContext, disposeOld = false): void {\n\tif (disposeOld) {\n\t\tglobalContext.dispose();\n\t}\n\n\tif (isAudioContext(context)) {\n\t\tglobalContext = new Context(context);\n\t} else if (isOfflineAudioContext(context)) {\n\t\tglobalContext = new OfflineContext(context);\n\t} else {\n\t\tglobalContext = context;\n\t}\n}\n\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start(): Promise<void> {\n\treturn globalContext.resume();\n}\n\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n\tlet prefix = \"v\";\n\tif (version === \"dev\") {\n\t\tprefix = \"\";\n\t}\n\tconst printString = ` * Tone.js ${prefix}${version} * `;\n\t// eslint-disable-next-line no-console\n\tconsole.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n","import { BaseContext } from \"./BaseContext\";\nimport { Seconds } from \"../type/Units\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\nexport class DummyContext extends BaseContext {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn {} as AnalyserNode;\n\t}\n\n\tcreateOscillator(): OscillatorNode {\n\t\treturn {} as OscillatorNode;\n\t}\n\n\tcreateBufferSource() {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn {} as BiquadFilterNode;\n\t}\n\n\tcreateBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer {\n\t\treturn {} as AudioBuffer;\n\t}\n\n\tcreateChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn {} as ChannelMergerNode;\n\t}\n\n\tcreateChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn {} as ChannelSplitterNode;\n\t}\n\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn {} as ConstantSourceNode;\n\t}\n\n\tcreateConvolver(): ConvolverNode {\n\t\treturn {} as ConvolverNode;\n\t}\n\n\tcreateDelay(_maxDelayTime?: number | undefined): DelayNode {\n\t\treturn {} as DelayNode;\n\t}\n\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn {} as DynamicsCompressorNode;\n\t}\n\n\tcreateGain(): GainNode {\n\t\treturn {} as GainNode;\n\t}\n\n\tcreateIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\treturn {} as IIRFilterNode;\n\t}\n\n\tcreatePanner(): PannerNode {\n\t\treturn {} as PannerNode;\n\t}\n\n\tcreatePeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn {} as PeriodicWave;\n\t}\n\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn {} as StereoPannerNode;\n\t}\n\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn {} as WaveShaperNode;\n\t}\n\n\tcreateMediaStreamSource(_stream: MediaStream): MediaStreamAudioSourceNode {\n\t\treturn {} as MediaStreamAudioSourceNode;\n\t}\n\n\tcreateMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\treturn {} as MediaElementAudioSourceNode;\n\t}\n\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\treturn {} as MediaStreamAudioDestinationNode;\n\t}\n\n\tdecodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn Promise.resolve({} as AudioBuffer);\n\t}\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn {} as AudioWorkletNode;\n\t}\n\n\tget rawContext(): AnyAudioContext {\n\t\treturn {} as AnyAudioContext;\n\t}\n\n\tasync addAudioWorkletModule(_url: string): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tlookAhead = 0;\n\n\tlatencyHint = 0;\n\n\tresume(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tsetTimeout(_fn: (...args: any[]) => void, _timeout: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearTimeout(_id: number): this {\n\t\treturn this;\n\t}\n\n\tsetInterval(_fn: (...args: any[]) => void, _interval: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearInterval(_id: number): this {\n\t\treturn this;\n\t}\n\n\tgetConstant(_val: number): AudioBufferSourceNode {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tget currentTime(): Seconds {\n\t\treturn 0;\n\t}\n\n\tget state(): AudioContextState {\n\t\treturn {} as AudioContextState;\n\t}\n\n\tget sampleRate(): number {\n\t\treturn 0;\n\t}\n\n\tget listener(): Listener {\n\t\treturn {} as Listener;\n\t}\n\n\tget transport(): Transport {\n\t\treturn {} as Transport;\n\t}\n\n\tget draw(): Draw {\n\t\treturn {} as Draw;\n\t}\n\tset draw(_d) {}\n\n\tget destination(): Destination {\n\t\treturn {} as Destination;\n\t}\n\tset destination(_d: Destination) {}\n\n\tnow() {\n\t\treturn 0;\n\t}\n\n\timmediate() {\n\t\treturn 0;\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { Decibels, GainFactor, Hertz, Interval, MidiNote, NormalRange } from \"./Units\";\n\n/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent: NormalRange): number {\n\tconst piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n}\n\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db: Decibels): GainFactor {\n\treturn Math.pow(10, db / 20);\n}\n\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain: GainFactor): Decibels {\n\treturn 20 * (Math.log(gain) / Math.LN10);\n}\n\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval: Interval): number {\n\treturn Math.pow(2, (interval / 12));\n}\n\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4: Hertz = 440;\n\nexport function getA4(): Hertz {\n\treturn A4;\n}\n\nexport function setA4(freq: Hertz): void {\n\tA4 = freq;\n}\n\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency: Hertz): MidiNote {\n\treturn Math.round(ftomf(frequency)) as MidiNote;\n}\n\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency: Hertz): number {\n\treturn 69 + 12 * Math.log2(frequency / A4);\n}\n\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi: MidiNote): Hertz {\n\treturn A4 * Math.pow(2, (midi - 69) / 12);\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\nimport { BPM, Hertz, MidiNote, Milliseconds, Samples, Seconds, Ticks, Time } from \"./Units\";\n\nexport type TimeValue = Time | TimeBaseClass<any, any>;\n\n/**\n * The units that the TimeBase can accept. extended by other classes\n */\nexport type TimeBaseUnit = \"s\" | \"n\" | \"t\" | \"m\" | \"i\" | \"hz\" | \"tr\" | \"samples\" | \"number\";\n\nexport interface TypeFunction {\n\tregexp: RegExp;\n\tmethod: (value: string, ...args: string[]) => number;\n}\n\nexport interface TimeExpression<Type extends number> {\n\t[key: string]: {\n\t\tregexp: RegExp;\n\t\tmethod: (value: string, ...args: string[]) => Type;\n\t};\n}\n\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport abstract class TimeBaseClass<Type extends number, Unit extends string> extends Tone {\n\n\treadonly context: BaseContext;\n\n\t/**\n\t * The value of the units\n\t */\n\tprotected _val?: TimeValue;\n\n\t/**\n\t * The units of time\n\t */\n\tprotected _units?: Unit;\n\n\t/**\n\t * All of the conversion expressions\n\t */\n\tprotected _expressions: TimeExpression<Type>;\n\n\t/**\n\t * The default units\n\t */\n\treadonly defaultUnits: Unit = \"s\" as Unit;\n\n\t/**\n\t * @param context The context associated with the time value. Used to compute\n\t * Transport and context-relative timing.\n\t * @param  value  The time value as a number, string or object\n\t * @param  units  Unit values\n\t */\n\tconstructor(context: BaseContext, value?: TimeValue, units?: Unit) {\n\t\tsuper();\n\n\t\tthis._val = value;\n\t\tthis._units = units;\n\t\tthis.context = context;\n\t\tthis._expressions = this._getExpressions();\n\t}\n\n\t/**\n\t * All of the time encoding expressions\n\t */\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn {\n\t\t\thz: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\t\t},\n\t\t\ti: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._ticksToUnits(parseInt(value, 10));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)i$/i,\n\t\t\t},\n\t\t\tm: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)m$/i,\n\t\t\t},\n\t\t\tn: {\n\t\t\t\tmethod: (value, dot) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\tconst scalar = dot === \".\" ? 1.5 : 1;\n\t\t\t\t\tif (numericValue === 1) {\n\t\t\t\t\t\treturn this._beatsToUnits(this._getTimeSignature()) * scalar as Type;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._beatsToUnits(4 / numericValue) * scalar as Type;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)n(\\.?)$/i,\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._expressions[this.defaultUnits].method.call(this, value);\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)$/,\n\t\t\t},\n\t\t\ts: {\n\t\t\t\tmethod: (value): Type => {\n\t\t\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)s$/,\n\t\t\t},\n\t\t\tsamples: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn parseInt(value, 10) / this.context.sampleRate as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)samples$/,\n\t\t\t},\n\t\t\tt: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\treturn this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)t$/i,\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tmethod: (m, q, s) => {\n\t\t\t\t\tlet total = 0;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\t\t},\n\t\t};\n\t}\n\n\t//-------------------------------------\n\t// \tVALUE OF\n\t//-------------------------------------\n\n\t/**\n\t * Evaluate the time value. Returns the time in seconds.\n\t */\n\tvalueOf(): Type {\n\t\tif (this._val instanceof TimeBaseClass) {\n\t\t\tthis.fromType(this._val);\n\t\t}\n\t\tif (isUndef(this._val)) {\n\t\t\treturn this._noArg();\n\t\t} else if (isString(this._val) && isUndef(this._units)) {\n\t\t\tfor (const units in this._expressions) {\n\t\t\t\tif (this._expressions[units].regexp.test(this._val.trim())) {\n\t\t\t\t\tthis._units = units as Unit;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isObject(this._val)) {\n\t\t\tlet total = 0;\n\t\t\tfor (const typeName in this._val) {\n\t\t\t\tif (isDefined(this._val[typeName])) {\n\t\t\t\t\tconst quantity = this._val[typeName];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n\t\t\t\t\ttotal += time;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn total as Type;\n\t\t}\n\t\tif (isDefined(this._units)) {\n\t\t\tconst expr = this._expressions[this._units];\n\t\t\tconst matching = this._val.toString().trim().match(expr.regexp);\n\t\t\tif (matching) {\n\t\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t\t} else {\n\t\t\t\treturn expr.method.call(this, this._val);\n\t\t\t}\n\t\t} else if (isString(this._val)) {\n\t\t\treturn parseFloat(this._val) as Type;\n\t\t} else {\n\t\t\treturn this._val as Type;\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn 1 / freq as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn (60 / this._getBpm()) * beats as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn seconds as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn (ticks * (this._beatsToUnits(1)) / this._getPPQ()) as Type;\n\t}\n\n\t/**\n\t * With no arguments, return 'now'\n\t */\n\tprotected _noArg(): Type {\n\t\treturn this._now();\n\t}\n\n\t//-------------------------------------\n\t// \tTEMPO CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the bpm\n\t */\n\tprotected _getBpm(): BPM {\n\t\treturn this.context.transport.bpm.value;\n\t}\n\n\t/**\n\t * Return the timeSignature\n\t */\n\tprotected _getTimeSignature(): number {\n\t\treturn this.context.transport.timeSignature as number;\n\t}\n\n\t/**\n\t * Return the PPQ or 192 if Transport is not available\n\t */\n\tprotected _getPPQ(): number {\n\t\treturn this.context.transport.PPQ;\n\t}\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected abstract _now(): Type;\n\n\t//-------------------------------------\n\t// \tCONVERSION INTERFACE\n\t//-------------------------------------\n\n\t/**\n\t * Coerce a time type into this units type.\n\t * @param type Any time type units\n\t */\n\tfromType(type: TimeBaseClass<any, any>): this {\n\t\tthis._units = undefined;\n\t\tswitch (this.defaultUnits) {\n\t\t\tcase \"s\":\n\t\t\t\tthis._val = type.toSeconds();\n\t\t\t\tbreak;\n\t\t\tcase \"i\":\n\t\t\t\tthis._val = type.toTicks();\n\t\t\t\tbreak;\n\t\t\tcase \"hz\":\n\t\t\t\tthis._val = type.toFrequency();\n\t\t\t\tbreak;\n\t\t\tcase \"midi\":\n\t\t\t\tthis._val = type.toMidi();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the value in seconds\n\t */\n\tabstract toSeconds(): Seconds;\n\n\t/**\n\t * Return the value as a Midi note\n\t */\n\tabstract toMidi(): MidiNote;\n\n\t/**\n\t * Convert the value into ticks\n\t */\n\tabstract toTicks(): Ticks;\n\n\t/**\n\t * Return the value in hertz\n\t */\n\ttoFrequency(): Hertz {\n\t\treturn 1 / this.toSeconds();\n\t}\n\n\t/**\n\t * Return the time in samples\n\t */\n\ttoSamples(): Samples {\n\t\treturn this.toSeconds() * this.context.sampleRate;\n\t}\n\n\t/**\n\t * Return the time in milliseconds.\n\t */\n\ttoMilliseconds(): Milliseconds {\n\t\treturn this.toSeconds() * 1000;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass, TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { BarsBeatsSixteenths, MidiNote, Seconds, Subdivision, Ticks, Time } from \"./Units\";\n\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass<Type extends Seconds | Ticks = Seconds, Unit extends string = TimeBaseUnit>\n\textends TimeBaseClass<Type, Unit> {\n\n\treadonly name: string = \"TimeClass\";\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign(super._getExpressions(), {\n\t\t\tnow: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\treturn this._now() + new (this.constructor as typeof TimeClass)(this.context, capture).valueOf() as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^\\+(.+)/,\n\t\t\t},\n\t\t\tquantize: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\tconst quantTo = new TimeClass(this.context, capture).valueOf();\n\t\t\t\t\treturn this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n\t\t\t\t},\n\t\t\t\tregexp: /^@(.+)/,\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Quantize the time by the given subdivision. Optionally add a\n\t * percentage which will move the time value towards the ideal\n\t * quantized value by that percentage.\n\t * @param  subdiv    The subdivision to quantize to\n\t * @param  percent  Move the time value towards the quantized value by a percentage.\n\t * @example\n\t * Tone.Time(21).quantize(2); // returns 22\n\t * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n\t */\n\tquantize(subdiv: Time, percent = 1): Type {\n\t\tconst subdivision = new (this.constructor as typeof TimeClass)(this.context, subdiv).valueOf();\n\t\tconst value = this.valueOf();\n\t\tconst multiple = Math.round(value / subdivision);\n\t\tconst ideal = multiple * subdivision;\n\t\tconst diff = ideal - value;\n\t\treturn value + diff * percent as Type;\n\t}\n\n\t//-------------------------------------\n\t// CONVERSIONS\n\t//-------------------------------------\n\t/**\n\t * Convert a Time to Notation. The notation values are will be the\n\t * closest representation between 1m to 128th note.\n\t * @return {Notation}\n\t * @example\n\t * // if the Transport is at 120bpm:\n\t * Tone.Time(2).toNotation(); // returns \"1m\"\n\t */\n\ttoNotation(): Subdivision {\n\t\tconst time = this.toSeconds();\n\t\tconst testNotations: Subdivision[] = [\"1m\"];\n\t\tfor (let power = 1; power < 9; power++) {\n\t\t\tconst subdiv = Math.pow(2, power);\n\t\t\ttestNotations.push(subdiv + \"n.\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"n\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"t\" as Subdivision);\n\t\t}\n\t\ttestNotations.push(\"0\");\n\t\t// find the closets notation representation\n\t\tlet closest = testNotations[0];\n\t\tlet closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n\t\ttestNotations.forEach(notation => {\n\t\t\tconst notationSeconds = new TimeClass(this.context, notation).toSeconds();\n\t\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n\t\t\t\tclosest = notation;\n\t\t\t\tclosestSeconds = notationSeconds;\n\t\t\t}\n\t\t});\n\t\treturn closest;\n\t}\n\n\t/**\n\t * Return the time encoded as Bars:Beats:Sixteenths.\n\t */\n\ttoBarsBeatsSixteenths(): BarsBeatsSixteenths {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tlet quarters = this.valueOf() / quarterTime;\n\t\tquarters = parseFloat(quarters.toFixed(4));\n\t\tconst measures = Math.floor(quarters / this._getTimeSignature());\n\t\tlet sixteenths = (quarters % 1) * 4;\n\t\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\t\tconst sixteenthString = sixteenths.toString();\n\t\tif (sixteenthString.length > 3) {\n\t\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\t\tsixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n\t\t}\n\t\tconst progress = [measures, quarters, sixteenths];\n\t\treturn progress.join(\":\");\n\t}\n\n\t/**\n\t * Return the time in ticks.\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn quarters * this._getPPQ();\n\t}\n\n\t/**\n\t * Return the time in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn this.valueOf();\n\t}\n\n\t/**\n\t * Return the value as a midi note.\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.toFrequency());\n\t}\n\n\tprotected _now(): Type {\n\t\treturn this.context.now() as Type;\n\t}\n}\n\n/**\n * Create a TimeClass from a time string or number. The time is computed against the \n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value?: TimeValue, units?: TimeBaseUnit): TimeClass<Seconds> {\n\treturn new TimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { Frequency, Hertz, Interval, MidiNote, Note, Seconds, Ticks } from \"./Units\";\n\nexport type FrequencyUnit = TimeBaseUnit | \"midi\";\n\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass<Type extends number = Hertz> extends TimeClass<Type, FrequencyUnit> {\n\n\treadonly name: string = \"Frequency\";\n\n\treadonly defaultUnits: FrequencyUnit = \"hz\";\n\n\t/**\n\t * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n\t * to generate all the other pitch values from notes. A4's values in Hertz.\n\t */\n\tstatic get A4(): Hertz {\n\t\treturn getA4();\n\t}\n\tstatic set A4(freq: Hertz) {\n\t\tsetA4(freq);\n\t}\n\n\t//-------------------------------------\n\t// \tAUGMENT BASE EXPRESSIONS\n\t//-------------------------------------\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign({}, super._getExpressions(), {\n\t\t\tmidi: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t\t\tmethod(value): number {\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tregexp: /^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,\n\t\t\t\tmethod(pitch, octave): number {\n\t\t\t\t\tconst index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\t\t\tconst noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn noteNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(noteNumber);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t\t\tmethod(m, q, s): number {\n\t\t\t\t\tlet total = 1;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total;\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tEXPRESSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Transposes the frequency by the given number of semitones.\n\t * @return  A new transposed frequency\n\t * @example\n\t * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n\t */\n\ttranspose(interval: Interval): FrequencyClass {\n\t\treturn new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n\t}\n\n\t/**\n\t * Takes an array of semitone intervals and returns\n\t * an array of frequencies transposed by those intervals.\n\t * @return  Returns an array of Frequencies\n\t * @example\n\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n\t */\n\tharmonize(intervals: Interval[]): FrequencyClass[] {\n\t\treturn intervals.map(interval => {\n\t\t\treturn this.transpose(interval);\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Frequency(\"C4\").toMidi(); // 60\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.valueOf());\n\t}\n\n\t/**\n\t * Return the value of the frequency in Scientific Pitch Notation\n\t * @example\n\t * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n\t */\n\ttoNote(): Note {\n\t\tconst freq = this.toFrequency();\n\t\tconst log = Math.log2(freq / FrequencyClass.A4);\n\t\tlet noteNumber = Math.round(12 * log) + 57;\n\t\tconst octave = Math.floor(noteNumber / 12);\n\t\tif (octave < 0) {\n\t\t\tnoteNumber += -12 * octave;\n\t\t}\n\t\tconst noteName = scaleIndexToNote[noteNumber % 12];\n\t\treturn noteName + octave.toString() as Note;\n\t}\n\n\t/**\n\t * Return the duration of one cycle in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn 1 / super.toSeconds();\n\t}\n\n\t/**\n\t * Return the duration of one cycle in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn Math.floor(quarters * this._getPPQ());\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS HELPERS\n\t//-------------------------------------\n\n\t/**\n\t * With no arguments, return 0\n\t */\n\tprotected _noArg(): Type {\n\t\treturn 0 as Type;\n\t}\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn freq as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ())) as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn 1 / super._beatsToUnits(beats) as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn 1 / seconds as Type;\n\t}\n\n\t/**\n\t * Convert a MIDI note to frequency value.\n\t * @param  midi The midi number to convert.\n\t * @return The corresponding frequency value\n\t */\n\tstatic mtof(midi: MidiNote): Hertz {\n\t\treturn mtof(midi);\n\t}\n\n\t/**\n\t * Convert a frequency value to a MIDI note.\n\t * @param frequency The value to frequency value to convert.\n\t */\n\tstatic ftom(frequency: Hertz): MidiNote {\n\t\treturn ftom(frequency);\n\t}\n}\n\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n\n/**\n * Note to scale index. \n * @hidden\n */\nconst noteToScaleIndex = {\n\tcbbb: -3, cbb: -2, cb: -1, c:  0, \"c#\":  1, cx:  2, \"c##\":  2, \"c###\":  3, \"cx#\":  3, \"c#x\":  3,\n\tdbbb: -1, dbb:  0, db:  1, d:  2, \"d#\":  3, dx:  4, \"d##\":  4, \"d###\":  5, \"dx#\":  5, \"d#x\":  5,\n\tebbb:  1, ebb:  2, eb:  3, e:  4, \"e#\":  5, ex:  6, \"e##\":  6, \"e###\":  7, \"ex#\":  7, \"e#x\":  7,\n\tfbbb:  2, fbb:  3, fb:  4, f:  5, \"f#\":  6, fx:  7, \"f##\":  7, \"f###\":  8, \"fx#\":  8, \"f#x\":  8,\n\tgbbb:  4, gbb:  5, gb:  6, g:  7, \"g#\":  8, gx:  9, \"g##\":  9, \"g###\": 10, \"gx#\": 10, \"g#x\": 10,\n\tabbb:  6, abb:  7, ab:  8, a:  9, \"a#\": 10, ax: 11, \"a##\": 11, \"a###\": 12, \"ax#\": 12, \"a#x\": 12,\n\tbbbb:  8, bbb:  9, bb: 10, b: 11, \"b#\": 12, bx: 13, \"b##\": 13, \"b###\": 14, \"bx#\": 14, \"b#x\": 14,\n};\n\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value?: TimeValue | Frequency, units?: FrequencyUnit): FrequencyClass {\n\treturn new FrequencyClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Seconds, Ticks } from \"../type/Units\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\n\n/**\n * TransportTime is a time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass<Type extends Seconds | Ticks = Seconds> extends TimeClass<Type> {\n\n\treadonly name: string = \"TransportTime\";\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected _now(): Type {\n\t\treturn this.context.transport.seconds as Type;\n\t}\n}\n\n/**\n * TransportTime is a time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value?: TimeValue, units?: TimeBaseUnit): TransportTimeClass {\n\treturn new TransportTimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { assertUsedScheduleTime } from \"../util/Debug\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { RecursivePartial } from \"../util/Interface\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\nimport { BaseContext } from \"./BaseContext\";\n\n/**\n * A unit which process audio\n */\nexport interface ToneWithContextOptions {\n\tcontext: BaseContext;\n}\n\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport abstract class ToneWithContext<Options extends ToneWithContextOptions> extends Tone {\n\n\t/**\n\t * The context belonging to the node.\n\t */\n\treadonly context: BaseContext;\n\n\t/**\n\t * The default context to use if no AudioContext is passed in to the constructor.\n\t * Probably should not be set manually. Used internally.\n\t * @hidden\n\t */\n\treadonly defaultContext?: BaseContext;\n\n\t/**\n\t * Pass in a constructor as the first argument\n\t */\n\tconstructor(context?: BaseContext)\n\tconstructor(options?: Partial<ToneWithContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n\t\tif (this.defaultContext) {\n\t\t\tthis.context = this.defaultContext;\n\t\t} else {\n\t\t\tthis.context = options.context;\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneWithContextOptions {\n\t\treturn {\n\t\t\tcontext: getContext(),\n\t\t};\n\t}\n\n\t/**\n\t * Return the current time of the Context clock plus the lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.now());\n\t * }, 100);\n\t */\n\tnow(): Seconds {\n\t\treturn this.context.currentTime + this.context.lookAhead;\n\t}\n\n\t/**\n\t * Return the current time of the Context clock without any lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.immediate());\n\t * }, 100);\n\t */\n\timmediate(): Seconds {\n\t\treturn this.context.currentTime;\n\t}\n\n\t/**\n\t * The duration in seconds of one sample.\n\t * @example\n\t * console.log(Tone.Transport.sampleTime);\n\t */\n\tget sampleTime(): Seconds {\n\t\treturn 1 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * The number of seconds of 1 processing block (128 samples)\n\t * @example\n\t * console.log(Tone.Destination.blockTime);\n\t */\n\tget blockTime(): Seconds {\n\t\treturn 128 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * Convert the incoming time to seconds. \n\t * This is calculated against the current [[Tone.Transport]] bpm\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n\t * // ramp the tempo to 60 bpm over 30 seconds\n\t * Tone.getTransport().bpm.rampTo(60, 30);\n\t */\n\ttoSeconds(time?: Time): Seconds {\n\t\tassertUsedScheduleTime(time);\n\t\treturn new TimeClass(this.context, time).toSeconds();\n\t}\n\n\t/**\n\t * Convert the input to a frequency number\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toFrequency(\"4n\"));\n\t */\n\ttoFrequency(freq: Frequency): Hertz {\n\t\treturn new FrequencyClass(this.context, freq).toFrequency();\n\t}\n\n\t/**\n\t * Convert the input time into ticks\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toTicks(\"4n\"));\n\t */\n\ttoTicks(time?: Time | TimeClass): Ticks {\n\t\treturn new TransportTimeClass(this.context, time).toTicks();\n\t}\n\n\t//-------------------------------------\n\t// \tGET/SET\n\t//-------------------------------------\n\n\t/**\n\t * Get a subset of the properties which are in the partial props\n\t */\n\tprotected _getPartialProperties(props: Options): Partial<Options> {\n\t\tconst options = this.get();\n\t\t// remove attributes from the prop that are not in the partial\n\t\tObject.keys(options).forEach(name => {\n\t\t\tif (isUndef(props[name])) {\n\t\t\t\tdelete options[name];\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t}\n\n\t/**\n\t * Get the object's attributes.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.get());\n\t */\n\tget(): Options {\n\t\tconst defaults = getDefaultsFromInstance(this) as Options;\n\t\tObject.keys(defaults).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute)) {\n\t\t\t\tconst member = this[attribute];\n\t\t\t\tif (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n\t\t\t\t\tdefaults[attribute] = member.value;\n\t\t\t\t} else if (member instanceof ToneWithContext) {\n\t\t\t\t\tdefaults[attribute] = member._getPartialProperties(defaults[attribute]);\n\t\t\t\t\t// otherwise make sure it's a serializable type\n\t\t\t\t} else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n\t\t\t\t\tdefaults[attribute] = member;\n\t\t\t\t} else {\n\t\t\t\t\t// remove all undefined and unserializable attributes\n\t\t\t\t\tdelete defaults[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn defaults;\n\t}\n\n\t/**\n\t * Set multiple properties at once with an object.\n\t * @example\n\t * const filter = new Tone.Filter().toDestination();\n\t * // set values using an object\n\t * filter.set({\n\t * \tfrequency: \"C6\",\n\t * \ttype: \"highpass\"\n\t * });\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n\t * player.autostart = true;\n\t */\n\tset(props: RecursivePartial<Options>): this {\n\t\tObject.keys(props).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n\t\t\t\tif (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n\t\t\t\t\t// small optimization\n\t\t\t\t\tif (this[attribute].value !== props[attribute]) {\n\t\t\t\t\t\tthis[attribute].value = props[attribute];\n\t\t\t\t\t}\n\t\t\t\t} else if (this[attribute] instanceof ToneWithContext) {\n\t\t\t\t\tthis[attribute].set(props[attribute]);\n\t\t\t\t} else {\n\t\t\t\t\tthis[attribute] = props[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n\nexport type BasicPlaybackState = \"started\" | \"stopped\";\nexport type PlaybackState = BasicPlaybackState | \"paused\";\n\nexport interface StateTimelineEvent extends TimelineEvent {\n\tstate: PlaybackState;\n}\n\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline<AdditionalOptions extends Record<string, any> = Record<string, any>> extends Timeline<StateTimelineEvent & AdditionalOptions> {\n\n\treadonly name: string = \"StateTimeline\";\n\n\t/**\n\t * The initial state\n\t */\n\tprivate _initial: PlaybackState;\n\n\tconstructor(initial: PlaybackState = \"stopped\") {\n\t\tsuper();\n\t\tthis._initial = initial;\n\t\tthis.setStateAtTime(this._initial, 0);\n\t}\n\n\t/**\n\t * Returns the scheduled state scheduled before or at\n\t * the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t */\n\tgetValueAtTime(time: Seconds): PlaybackState {\n\t\tconst event = this.get(time);\n\t\tif (event !== null) {\n\t\t\treturn event.state;\n\t\t} else {\n\t\t\treturn this._initial;\n\t\t}\n\t}\n\n\t/**\n\t * Add a state to the timeline.\n\t * @param  state The name of the state to set.\n\t * @param  time  The time to query.\n\t * @param options Any additional options that are needed in the timeline.\n\t */\n\tsetStateAtTime(state: PlaybackState, time: Seconds, options?: AdditionalOptions): this {\n\t\tassertRange(time, 0);\n\t\tthis.add(Object.assign({}, options, {\n\t\t\tstate,\n\t\t\ttime,\n\t\t}));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the event before the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check before\n\t * @return  The event with the given state before the time\n\t */\n\tgetLastState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tfor (let i = index; i >= 0; i--) {\n\t\t\tconst event = this._timeline[i];\n\t\t\tif (event.state === state) {\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return the event after the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check from\n\t * @return  The event with the given state after the time\n\t */\n\tgetNextState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tif (index !== -1) {\n\t\t\tfor (let i = index; i < this._timeline.length; i++) {\n\t\t\t\tconst event = this._timeline[i];\n\t\t\t\tif (event.state === state) {\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AbstractParam } from \"../context/AbstractParam\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { Decibels, Frequency, Positive, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n\nexport interface ParamOptions<TypeName extends UnitName> extends ToneWithContextOptions {\n\tunits: TypeName;\n\tvalue?: UnitMap[TypeName];\n\tparam: AudioParam | Param<TypeName>;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n\tswappable?: boolean;\n}\n\n/**\n * the possible automation types\n */\ntype AutomationType = \"linearRampToValueAtTime\" | \"exponentialRampToValueAtTime\" | \"setValueAtTime\" | \"setTargetAtTime\" | \"cancelScheduledValues\";\n\ninterface TargetAutomationEvent {\n\ttype: \"setTargetAtTime\";\n\ttime: number;\n\tvalue: number;\n\tconstant: number;\n}\n\ninterface NormalAutomationEvent {\n\ttype: Exclude<AutomationType, \"setTargetAtTime\">;\n\ttime: number;\n\tvalue: number;\n}\n/**\n * The events on the automation\n */\nexport type AutomationEvent = NormalAutomationEvent | TargetAutomationEvent;\n\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param<TypeName extends UnitName = \"number\">\n\textends ToneWithContext<ParamOptions<TypeName>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Param\";\n\n\treadonly input: GainNode | AudioParam;\n\n\treadonly units: UnitName;\n\tconvert: boolean;\n\toverridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<AutomationEvent>;\n\n\t/**\n\t * The native parameter to control\n\t */\n\tprotected _param: AudioParam;\n\n\t/**\n\t * The default value before anything is assigned\n\t */\n\tprotected _initialValue: number;\n\n\t/**\n\t * The minimum output value\n\t */\n\tprivate _minOutput = 1e-7;\n\n\t/**\n\t * Private reference to the min and max values if passed into the constructor\n\t */\n\tprivate readonly _minValue?: number;\n\tprivate readonly _maxValue?: number;\n\n\t/**\n\t * If the underlying AudioParam can be swapped out\n\t * using the setParam method. \n\t */\n\tprotected readonly _swappable: boolean;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\tconstructor(param: AudioParam, units?: TypeName, convert?: boolean);\n\tconstructor(options: Partial<ParamOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n\n\t\tconst options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n\n\t\tassert(isDefined(options.param) &&\n\t\t\t(isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n\t\twhile (!isAudioParam(options.param)) {\n\t\t\toptions.param = options.param._param;\n\t\t}\n\n\t\tthis._swappable = isDefined(options.swappable) ? options.swappable : false;\n\t\tif (this._swappable) {\n\t\t\tthis.input = this.context.createGain();\n\t\t\t// initialize\n\t\t\tthis._param = options.param;\n\t\t\tthis.input.connect(this._param);\n\t\t} else {\n\t\t\tthis._param = this.input = options.param;\n\t\t}\n\t\tthis._events = new Timeline<AutomationEvent>(1000);\n\t\tthis._initialValue = this._param.defaultValue;\n\t\tthis.units = options.units;\n\t\tthis.convert = options.convert;\n\t\tthis._minValue = options.minValue;\n\t\tthis._maxValue = options.maxValue;\n\n\t\t// if the value is defined, set it immediately\n\t\tif (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n\t\t\tthis.setValueAtTime(options.value, 0);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ParamOptions<any> {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t} as ParamOptions<any>);\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\tconst now = this.now();\n\t\treturn this.getValueAtTime(now);\n\t}\n\tset value(value) {\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n\n\tget minValue(): number {\n\t\t// if it's not the default minValue, return it\n\t\tif (isDefined(this._minValue)) {\n\t\t\treturn this._minValue;\n\t\t} else if (this.units === \"time\" || this.units === \"frequency\" ||\n\t\t\tthis.units === \"normalRange\" || this.units === \"positive\" ||\n\t\t\tthis.units === \"transportTime\" || this.units === \"ticks\" ||\n\t\t\tthis.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n\t\t\treturn 0;\n\t\t} else if (this.units === \"audioRange\") {\n\t\t\treturn -1;\n\t\t} else if (this.units === \"decibels\") {\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n\n\tget maxValue(): number {\n\t\tif (isDefined(this._maxValue)) {\n\t\t\treturn this._maxValue;\n\t\t} else if (this.units === \"normalRange\" ||\n\t\t\tthis.units === \"audioRange\") {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n\n\t/**\n\t * Type guard based on the unit name\n\t */\n\tprivate _is<T>(arg: any, type: UnitName): arg is T {\n\t\treturn this.units === type;\n\t}\n\n\t/**\n\t * Make sure the value is always in the defined range\n\t */\n\tprivate _assertRange(value: number): number {\n\t\tif (isDefined(this.maxValue) && isDefined(this.minValue)) {\n\t\t\tassertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Convert the given value from the type specified by Param.units\n\t * into the destination value (such as Gain or Frequency).\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.convert && !this.overridden) {\n\t\t\tif (this._is<Time>(val, \"time\")) {\n\t\t\t\treturn this.toSeconds(val);\n\t\t\t} else if (this._is<Decibels>(val, \"decibels\")) {\n\t\t\t\treturn dbToGain(val);\n\t\t\t} else if (this._is<Frequency>(val, \"frequency\")) {\n\t\t\t\treturn this.toFrequency(val);\n\t\t\t} else {\n\t\t\t\treturn val as number;\n\t\t\t}\n\t\t} else if (this.overridden) {\n\t\t\t// if it's overridden, should only schedule 0s\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn val as number;\n\t\t}\n\t}\n\n\t/**\n\t * Convert the parameters value into the units specified by Param.units.\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.convert && this.units === \"decibels\") {\n\t\t\treturn gainToDb(val) as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn val as UnitMap[TypeName];\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// all docs are generated from ParamInterface.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst numericValue = this._fromType(value);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis.log(this.units, \"setValueAtTime\", value, computedTime);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis._param.setValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\tconst computedTime = Math.max(this.toSeconds(time), 0);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tconst before = this._events.get(computedTime);\n\t\tlet value = this._initialValue;\n\t\t// if it was set by\n\t\tif (before === null) {\n\t\t\tvalue = this._initialValue;\n\t\t} else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\tlet previousVal;\n\t\t\tif (previous === null) {\n\t\t\t\tpreviousVal = this._initialValue;\n\t\t\t} else {\n\t\t\t\tpreviousVal = previous.value;\n\t\t\t}\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n\t\t\t}\n\t\t} else if (after === null) {\n\t\t\tvalue = before.value;\n\t\t} else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n\t\t\tlet beforeValue = before.value;\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\t\tif (previous === null) {\n\t\t\t\t\tbeforeValue = this._initialValue;\n\t\t\t\t} else {\n\t\t\t\t\tbeforeValue = previous.value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tvalue = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t} else {\n\t\t\t\tvalue = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = before.value;\n\t\t}\n\t\treturn this._toType(value);\n\t}\n\n\tsetRampPoint(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tlet currentVal = this.getValueAtTime(time);\n\t\tthis.cancelAndHoldAtTime(time);\n\t\tif (this._fromType(currentVal) === 0) {\n\t\t\tcurrentVal = this._toType(this._minOutput);\n\t\t}\n\t\tthis.setValueAtTime(currentVal, time);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tconst numericValue = this._fromType(value);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"linearRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\t\tthis._param.linearRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tlet numericValue = this._fromType(value);\n\t\t// the value can't be 0\n\t\tnumericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n\t\tthis._assertRange(numericValue);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\t// store the event\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"exponentialRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\t\tthis._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\t\treturn this;\n\t}\n\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\trampTime = this.toSeconds(rampTime);\n\t\tconst timeConstant = Math.log(rampTime + 1) / Math.log(200);\n\t\tthis.setTargetAtTime(value, time, timeConstant);\n\t\t// at 90% start a linear ramp to the final value\n\t\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\t\tthis.linearRampToValueAtTime(value, time + rampTime);\n\t\treturn this;\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: Positive): this {\n\t\tconst numericValue = this._fromType(value);\n\t\t// The value will never be able to approach without timeConstant > 0.\n\t\tassert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n\t\tconst computedTime = this.toSeconds(startTime);\n\t\tthis._assertRange(numericValue);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n\t\tthis._events.add({\n\t\t\tconstant: timeConstant,\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setTargetAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\t\tthis._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\t\treturn this;\n\t}\n\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling = 1): this {\n\t\tduration = this.toSeconds(duration);\n\t\tstartTime = this.toSeconds(startTime);\n\t\tconst startingValue = this._fromType(values[0]) * scaling;\n\t\tthis.setValueAtTime(this._toType(startingValue), startTime);\n\t\tconst segTime = duration / (values.length - 1);\n\t\tfor (let i = 1; i < values.length; i++) {\n\t\t\tconst numericValue = this._fromType(values[i]) * scaling;\n\t\t\tthis.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tcancelScheduledValues(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n\t\tthis._events.cancel(computedTime);\n\t\tthis._param.cancelScheduledValues(computedTime);\n\t\tthis.log(this.units, \"cancelScheduledValues\", computedTime);\n\t\treturn this;\n\t}\n\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n\t\t// remove the schedule events\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n\n\t\tthis.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n\t\t\n\t\t// if there is an event at the given computedTime\n\t\t// and that even is not a \"set\"\n\t\tconst before = this._events.get(computedTime);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tif (before && EQ(before.time, computedTime)) {\n\t\t\t// remove everything after\n\t\t\tif (after) {\n\t\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t\tthis._events.cancel(after.time);\n\t\t\t} else {\n\t\t\t\tthis._param.cancelAndHoldAtTime(computedTime);\n\t\t\t\tthis._events.cancel(computedTime + this.sampleTime);\n\t\t\t}\n\t\t} else if (after) {\n\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t// cancel the next event(s)\n\t\t\tthis._events.cancel(after.time);\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tthis.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t} else if (after.type === \"exponentialRampToValueAtTime\") {\n\t\t\t\tthis.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t}\n\t\t}\n\n\t\t// set the value at the given time\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: valueAtTime,\n\t\t});\n\t\tthis._param.setValueAtTime(valueAtTime, computedTime);\n\t\treturn this;\n\t}\n\n\trampTo(value: UnitMap[TypeName], rampTime: Time = 0.1, startTime?: Time): this {\n\t\tif (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n\t\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t\t} else {\n\t\t\tthis.linearRampTo(value, rampTime, startTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n\t * The applied values will start at the context's current time and schedule\n\t * all of the events which are scheduled on this Param onto the passed in param.\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tconst now = this.context.currentTime;\n\t\t// set the param's value at the current time and schedule everything else\n\t\tparam.setValueAtTime(this.getValueAtTime(now) as number, now);\n\t\t// if the previous event was a curve, then set the rest of it\n\t\tconst previousEvent = this._events.get(now);\n\t\tif (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n\t\t\t// approx it until the next event with linear ramps\n\t\t\tconst nextEvent = this._events.getAfter(previousEvent.time);\n\t\t\t// or for 2 seconds if there is no event\n\t\t\tconst endTime = nextEvent ? nextEvent.time : now + 2;\n\t\t\tconst subdivisions = (endTime - now) / 10;\n\t\t\tfor (let i = now; i < endTime; i += subdivisions) {\n\t\t\t\tparam.linearRampToValueAtTime(this.getValueAtTime(i) as number, i);\n\t\t\t}\n\t\t}\n\t\tthis._events.forEachAfter(this.context.currentTime, event => {\n\t\t\tif (event.type === \"cancelScheduledValues\") {\n\t\t\t\tparam.cancelScheduledValues(event.time);\n\t\t\t} else if (event.type === \"setTargetAtTime\") {\n\t\t\t\tparam.setTargetAtTime(event.value, event.time, event.constant);\n\t\t\t} else {\n\t\t\t\tparam[event.type](event.value, event.time);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Replace the Param's internal AudioParam. Will apply scheduled curves \n\t * onto the parameter and replace the connections.\n\t */\n\tsetParam(param: AudioParam): this {\n\t\tassert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n\t\tconst input = this.input as GainNode;\n\t\tinput.disconnect(this._param);\n\t\tthis.apply(param);\n\t\tthis._param = param;\n\t\tinput.connect(this._param);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\treturn this;\n\t}\n\n\tget defaultValue(): UnitMap[TypeName] {\n\t\treturn this._toType(this._param.defaultValue);\n\t}\n\n\t//-------------------------------------\n\t// \tAUTOMATION CURVE CALCULATIONS\n\t// \tMIT License, copyright (c) 2014 Jordan Santell\n\t//-------------------------------------\n\n\t// Calculates the the value along the curve produced by setTargetAtTime\n\tprotected _exponentialApproach(t0: number, v0: number, v1: number, timeConstant: number, t: number): number {\n\t\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t}\n\n\t// Calculates the the value along the curve produced by linearRampToValueAtTime\n\tprotected _linearInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t}\n\n\t// Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\tprotected _exponentialInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t}\n}\n","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n\nexport type InputNode = ToneAudioNode | AudioNode | Param<any> | AudioParam;\nexport type OutputNode = ToneAudioNode | AudioNode;\n\ninterface ChannelProperties {\n\tchannelCount: number;\n\tchannelCountMode: ChannelCountMode;\n\tchannelInterpretation: ChannelInterpretation;\n}\n\n/**\n * The possible options for this node\n */\nexport type ToneAudioNodeOptions = ToneWithContextOptions;\n\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport abstract class ToneAudioNode<Options extends ToneAudioNodeOptions = ToneAudioNodeOptions>\n\textends ToneWithContext<Options> {\n\n\t/**\n\t * The name of the class\n\t */\n\tabstract readonly name: string;\n\n\t/**\n\t * The input node or nodes. If the object is a source,\n\t * it does not have any input and this.input is undefined.\n\t */\n\tabstract input: InputNode | undefined;\n\n\t/**\n\t * The output nodes. If the object is a sink,\n\t * it does not have any output and this.output is undefined.\n\t */\n\tabstract output: OutputNode | undefined;\n\n\t/**\n\t * The number of inputs feeding into the AudioNode.\n\t * For source nodes, this will be 0.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfInputs);\n\t */\n\tget numberOfInputs(): number {\n\t\tif (isDefined(this.input)) {\n\t\t\tif (isAudioParam(this.input) || this.input instanceof Param) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn this.input.numberOfInputs;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of outputs of the AudioNode.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfOutputs);\n\t */\n\tget numberOfOutputs(): number {\n\t\tif (isDefined(this.output)) {\n\t\t\treturn this.output.numberOfOutputs;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * List all of the node that must be set to match the ChannelProperties\n\t */\n\tprotected _internalChannels: OutputNode[] = [];\n\n\t//-------------------------------------\n\t// AUDIO PROPERTIES\n\t//-------------------------------------\n\n\t/**\n\t * Used to decide which nodes to get/set properties on\n\t */\n\tprivate _isAudioNode(node: any): node is AudioNode | ToneAudioNode {\n\t\treturn isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n\t}\n\n\t/**\n\t * Get all of the audio nodes (either internal or input/output) which together\n\t * make up how the class node responds to channel input/output\n\t */\n\tprivate _getInternalNodes(): OutputNode[] {\n\t\tconst nodeList = this._internalChannels.slice(0);\n\t\tif (this._isAudioNode(this.input)) {\n\t\t\tnodeList.push(this.input);\n\t\t}\n\t\tif (this._isAudioNode(this.output)) {\n\t\t\tif (this.input !== this.output) {\n\t\t\t\tnodeList.push(this.output);\n\t\t\t}\n\t\t}\n\t\treturn nodeList;\n\t}\n\n\t/**\n\t * Set the audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t * @param options\n\t */\n\tprivate _setChannelProperties(options: ChannelProperties): void {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tnodeList.forEach(node => {\n\t\t\tnode.channelCount = options.channelCount;\n\t\t\tnode.channelCountMode = options.channelCountMode;\n\t\t\tnode.channelInterpretation = options.channelInterpretation;\n\t\t});\n\t}\n\n\t/**\n\t * Get the current audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t */\n\tprivate _getChannelProperties(): ChannelProperties {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tassert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n\t\t// use the first node to get properties\n\t\t// they should all be the same\n\t\tconst node = nodeList[0];\n\t\treturn {\n\t\t\tchannelCount: node.channelCount,\n\t\t\tchannelCountMode: node.channelCountMode,\n\t\t\tchannelInterpretation: node.channelInterpretation,\n\t\t};\n\t}\n\n\t/**\n\t * channelCount is the number of channels used when up-mixing and down-mixing\n\t * connections to any inputs to the node. The default value is 2 except for\n\t * specific nodes where its value is specially determined.\n\t */\n\tget channelCount(): number {\n\t\treturn this._getChannelProperties().channelCount;\n\t}\n\tset channelCount(channelCount) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCount }));\n\t}\n\n\t/**\n\t * channelCountMode determines how channels will be counted when up-mixing and\n\t * down-mixing connections to any inputs to the node.\n\t * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n\t * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n\t * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n\t * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n\t */\n\tget channelCountMode(): ChannelCountMode {\n\t\treturn this._getChannelProperties().channelCountMode;\n\t}\n\tset channelCountMode(channelCountMode) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCountMode }));\n\t}\n\n\t/**\n\t * channelInterpretation determines how individual channels will be treated\n\t * when up-mixing and down-mixing connections to any inputs to the node.\n\t * The default value is \"speakers\".\n\t */\n\tget channelInterpretation(): ChannelInterpretation {\n\t\treturn this._getChannelProperties().channelInterpretation;\n\t}\n\tset channelInterpretation(channelInterpretation) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelInterpretation }));\n\t}\n\n\t//-------------------------------------\n\t// CONNECTIONS\n\t//-------------------------------------\n\n\t/**\n\t * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n\t * @param destination The output to connect to\n\t * @param outputNum The output to connect from\n\t * @param inputNum The input to connect to\n\t */\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C2\").start();\n\t * osc.toDestination();\n\t */\n\ttoDestination(): this {\n\t\tthis.connect(this.context.destination);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * See [[toDestination]]\n\t * @deprecated\n\t */\n\ttoMaster(): this {\n\t\twarn(\"toMaster() has been renamed toDestination()\");\n\t\treturn this.toDestination();\n\t}\n\n\t/**\n\t * disconnect the output\n\t */\n\tdisconnect(destination?: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tdisconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output of this node to the rest of the nodes in series.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n\t * player.autostart = true;\n\t * const filter = new Tone.AutoFilter(4).start();\n\t * const distortion = new Tone.Distortion(0.5);\n\t * // connect the player to the filter, distortion and then to the master output\n\t * player.chain(filter, distortion, Tone.Destination);\n\t */\n\tchain(...nodes: InputNode[]): this {\n\t\tconnectSeries(this, ...nodes);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the output of this node to the rest of the nodes in parallel.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n\t * player.autostart = true;\n\t * const pitchShift = new Tone.PitchShift(4).toDestination();\n\t * const filter = new Tone.Filter(\"G5\").toDestination();\n\t * // connect a node to the pitch shift and filter in parallel\n\t * player.fan(pitchShift, filter);\n\t */\n\tfan(...nodes: InputNode[]): this {\n\t\tnodes.forEach(node => this.connect(node));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Dispose and disconnect\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (isDefined(this.input)) {\n\t\t\tif (this.input instanceof ToneAudioNode) {\n\t\t\t\tthis.input.dispose();\n\t\t\t} else if (isAudioNode(this.input)) {\n\t\t\t\tthis.input.disconnect();\n\t\t\t}\n\t\t}\n\t\tif (isDefined(this.output)) {\n\t\t\tif (this.output instanceof ToneAudioNode) {\n\t\t\t\tthis.output.dispose();\n\t\t\t} else if (isAudioNode(this.output)) {\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t}\n\t\tthis._internalChannels = [];\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes: InputNode[]): void {\n\tconst first = nodes.shift();\n\tnodes.reduce((prev, current) => {\n\t\tif (prev instanceof ToneAudioNode) {\n\t\t\tprev.connect(current);\n\t\t} else if (isAudioNode(prev)) {\n\t\t\tconnect(prev, current);\n\t\t}\n\t\treturn current;\n\t}, first);\n}\n\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode: OutputNode, dstNode: InputNode, outputNumber = 0, inputNumber = 0): void {\n\n\tassert(isDefined(srcNode), \"Cannot connect from undefined node\");\n\tassert(isDefined(dstNode), \"Cannot connect to undefined node\");\n\n\tif (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n\t\tassert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n\t}\n\tassert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n\n\t// resolve the input of the dstNode\n\twhile ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n\t\tif (isDefined(dstNode.input)) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\twhile (srcNode instanceof ToneAudioNode) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\t// make the connection\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.connect(dstNode as AudioParam, outputNumber);\n\t} else {\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n}\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(\n\tsrcNode: OutputNode,\n\tdstNode?: InputNode,\n\toutputNumber = 0,\n\tinputNumber = 0,\n): void {\n\n\t// resolve the destination node\n\tif (isDefined(dstNode)) {\n\t\twhile (dstNode instanceof ToneAudioNode) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t// resolve the src node\n\twhile (!(isAudioNode(srcNode))) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t} else if (isAudioNode(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n}\n\n/**\n * Connect the output of one or more source nodes to a single destination node\n * @param nodes One or more source nodes followed by one destination node\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n * const player1 = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n * const filter = new Tone.Filter(\"G5\").toDestination();\n * // connect nodes to a common destination\n * fanIn(player, player1, filter);\n */\nexport function fanIn(...nodes: OutputNode[]): void {\n\tconst dstNode = nodes.pop();\n\n\tif (isDefined(dstNode)) {\n\t\tnodes.forEach(node => connect(node, dstNode));\n\t}\n}\n","import { Param } from \"../context/Param\";\nimport { UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface GainOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tgain: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain<TypeName extends \"gain\" | \"decibels\" | \"normalRange\" = \"gain\"> extends ToneAudioNode<GainOptions<TypeName>> {\n\n\treadonly name: string = \"Gain\";\n\n\t/**\n\t * The gain parameter of the gain node.\n\t * @example\n\t * const gainNode = new Tone.Gain(0).toDestination();\n\t * const osc = new Tone.Oscillator().connect(gainNode).start();\n\t * gainNode.gain.rampTo(1, 0.1);\n\t * gainNode.gain.rampTo(0, 2, \"+0.5\");\n\t */\n\treadonly gain: Param<TypeName>;\n\n\t/**\n\t * The wrapped GainNode.\n\t */\n\tprivate _gainNode: GainNode = this.context.createGain();\n\n\t// input = output\n\treadonly input: GainNode = this._gainNode;\n\treadonly output: GainNode = this._gainNode;\n\n\t/**\n\t * @param  gain The initial gain of the GainNode\n\t * @param units The units of the gain parameter.\n\t */\n\tconstructor(gain?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<GainOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n\t\tconst options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n\n\t\tthis.gain = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._gainNode.gain,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.gain,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\treadOnly(this, \"gain\");\n\t}\n\n\tstatic getDefaults(): GainOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tgain: 1,\n\t\t\tunits: \"gain\",\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\tthis.gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport {\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport { GainFactor, Seconds, Time } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\nimport { BasicPlaybackState } from \"../core/util/StateTimeline\";\n\nexport type OneShotSourceCurve = \"linear\" | \"exponential\";\n\ntype onEndedCallback = (source: OneShotSource<any>) => void;\n\nexport interface OneShotSourceOptions extends ToneAudioNodeOptions {\n\tonended: onEndedCallback;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tcurve: OneShotSourceCurve;\n}\n\n/**\n * Base class for fire-and-forget nodes\n */\nexport abstract class OneShotSource<\n\tOptions extends ToneAudioNodeOptions\n> extends ToneAudioNode<Options> {\n\t/**\n\t * The callback to invoke after the\n\t * source is done playing.\n\t */\n\tonended: onEndedCallback = noOp;\n\n\t/**\n\t * Sources do not have input nodes\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The start time\n\t */\n\tprotected _startTime = -1;\n\n\t/**\n\t * The stop time\n\t */\n\tprotected _stopTime = -1;\n\n\t/**\n\t * The id of the timeout\n\t */\n\tprivate _timeout = -1;\n\n\t/**\n\t * The public output node\n\t */\n\toutput: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output gain node.\n\t */\n\tprotected _gainNode = this.output;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tprotected _curve: OneShotSourceCurve;\n\n\tconstructor(options: OneShotSourceOptions) {\n\t\tsuper(options);\n\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t\tthis._curve = options.curve;\n\t\tthis.onended = options.onended;\n\t}\n\n\tstatic getDefaults(): OneShotSourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tcurve: \"linear\" as OneShotSourceCurve,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tonended: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Stop the source node\n\t */\n\tprotected abstract _stopSource(time: Seconds): void;\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the node\n\t */\n\tprotected abstract start(time?: Time): this;\n\t/**\n\t * Start the source at the given time\n\t * @param  time When to start the source\n\t */\n\tprotected _startGain(time: Seconds, gain: GainFactor = 1): this {\n\t\tassert(\n\t\t\tthis._startTime === -1,\n\t\t\t\"Source cannot be started more than once\"\n\t\t);\n\t\t// apply a fade in envelope\n\t\tconst fadeInTime = this.toSeconds(this._fadeIn);\n\n\t\t// record the start time\n\t\tthis._startTime = time + fadeInTime;\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\n\t\t// schedule the envelope\n\t\tif (fadeInTime > 0) {\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampToValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime + fadeInTime\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime,\n\t\t\t\t\tfadeInTime\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source node at the given time.\n\t * @param time When to stop the source\n\t */\n\tstop(time?: Time): this {\n\t\tthis.log(\"stop\", time);\n\t\tthis._stopGain(this.toSeconds(time));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the given time\n\t * @param  time When to stop the source\n\t */\n\tprotected _stopGain(time: Seconds): this {\n\t\tassert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t\t// cancel the previous stop\n\t\tthis.cancelStop();\n\n\t\t// the fadeOut time\n\t\tconst fadeOutTime = this.toSeconds(this._fadeOut);\n\n\t\t// schedule the stop callback\n\t\tthis._stopTime = this.toSeconds(time) + fadeOutTime;\n\t\tthis._stopTime = Math.max(this._stopTime, this.now());\n\t\tif (fadeOutTime > 0) {\n\t\t\t// start the fade out curve at the given time\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t\t}\n\t\t} else {\n\t\t\t// stop any ongoing ramps, and set the value to 0\n\t\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t}\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(() => {\n\t\t\t// allow additional time for the exponential curve to fully decay\n\t\t\tconst additionalTail =\n\t\t\t\tthis._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n\t\t\tthis._stopSource(this.now() + additionalTail);\n\t\t\tthis._onended();\n\t\t}, this._stopTime - this.context.currentTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the onended callback\n\t */\n\tprotected _onended(): void {\n\t\tif (this.onended !== noOp) {\n\t\t\tthis.onended(this);\n\t\t\t// overwrite onended to make sure it only is called once\n\t\t\tthis.onended = noOp;\n\t\t\t// dispose when it's ended to free up for garbage collection only in the online context\n\t\t\tif (!this.context.isOffline) {\n\t\t\t\tconst disposeCallback = () => this.dispose();\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (typeof window.requestIdleCallback !== \"undefined\") {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\twindow.requestIdleCallback(disposeCallback);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(disposeCallback, 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the playback state at the given time\n\t */\n\tgetStateAtTime = function(time: Time): BasicPlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (\n\t\t\tthis._startTime !== -1 &&\n\t\t\tcomputedTime >= this._startTime &&\n\t\t\t(this._stopTime === -1 || computedTime <= this._stopTime)\n\t\t) {\n\t\t\treturn \"started\";\n\t\t} else {\n\t\t\treturn \"stopped\";\n\t\t}\n\t};\n\n\t/**\n\t * Get the playback state at the current time\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Cancel a scheduled stop event\n\t */\n\tcancelStop(): this {\n\t\tthis.log(\"cancelStop\");\n\t\tassert(this._startTime !== -1, \"Source is not started\");\n\t\t// cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(\n\t\t\tthis._startTime + this.sampleTime\n\t\t);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.dispose();\n\t\tthis.onended = noOp;\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { Seconds, Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../source/OneShotSource\";\n\nexport interface ToneConstantSourceOptions<TypeName extends UnitName> extends OneShotSourceOptions {\n\tconvert: boolean;\n\toffset: UnitMap[TypeName];\n\tunits: TypeName;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource<TypeName extends UnitName = \"number\"> extends OneShotSource<ToneConstantSourceOptions<TypeName>> {\n\n\treadonly name: string = \"ToneConstantSource\";\n\n\t/**\n\t * The signal generator\n\t */\n\tprivate _source = this.context.createConstantSource();\n\n\t/**\n\t * The offset of the signal generator\n\t */\n\treadonly offset: Param<TypeName>;\n\n\t/**\n\t * @param  offset   The offset value\n\t */\n\tconstructor(offset: UnitMap[TypeName]);\n\tconstructor(options?: Partial<ToneConstantSourceOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n\t\tconst options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\n\t\tthis.offset = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._source.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.offset,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t}\n\n\tstatic getDefaults(): ToneConstantSourceOptions<any> {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\toffset: 1,\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the source\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._source.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._source.stop(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._source.disconnect();\n\t\tthis.offset.dispose();\n\t\treturn this;\n\t}\n}\n","import { AbstractParam } from \"../core/context/AbstractParam\";\nimport { Param } from \"../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n\nexport interface SignalOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tvalue: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal<TypeName extends UnitName = \"number\"> extends ToneAudioNode<SignalOptions<any>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Signal\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection.\n\t */\n\treadonly override: boolean = true;\n\n\t/**\n\t * The constant source node which generates the signal\n\t */\n\tprotected _constantSource: ToneConstantSource<TypeName>;\n\treadonly output: OutputNode;\n\tprotected _param: Param<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value Initial value of the signal\n\t * @param units The unit name, e.g. \"frequency\"\n\t */\n\tconstructor(value?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n\n\t\tconst options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]) as SignalOptions<TypeName>;\n\n\t\tthis.output = this._constantSource = new ToneConstantSource({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\toffset: options.value,\n\t\t\tunits: options.units,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\tthis._constantSource.start(0);\n\t\tthis.input = this._param = this._constantSource.offset;\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\t// start it only when connected to something\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\tthis._constantSource.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// just a proxy for the ConstantSourceNode's offset AudioParam\n\t// all docs are generated from AbstractParam.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.setValueAtTime(value, time);\n\t\treturn this;\n\t}\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\treturn this._param.getValueAtTime(time);\n\t}\n\tsetRampPoint(time: Time): this {\n\t\tthis._param.setRampPoint(time);\n\t\treturn this;\n\t}\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.linearRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.exponentialRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.exponentialRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.linearRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.targetRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\tthis._param.exponentialApproachValueAtTime(value, time, rampTime);\n\t\treturn this;\n\t}\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: number): this {\n\t\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\t\treturn this;\n\t}\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling?: number): this {\n\t\tthis._param.setValueCurveAtTime(values, startTime, duration, scaling);\n\t\treturn this;\n\t}\n\tcancelScheduledValues(time: Time): this {\n\t\tthis._param.cancelScheduledValues(time);\n\t\treturn this;\n\t}\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tthis._param.cancelAndHoldAtTime(time);\n\t\treturn this;\n\t}\n\trampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.rampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\treturn this._param.value;\n\t}\n\tset value(value: UnitMap[TypeName]) {\n\t\tthis._param.value = value;\n\t}\n\n\tget convert(): boolean {\n\t\treturn this._param.convert;\n\t}\n\tset convert(convert: boolean) {\n\t\tthis._param.convert = convert;\n\t}\n\n\tget units(): UnitName {\n\t\treturn this._param.units;\n\t}\n\n\tget overridden(): boolean {\n\t\treturn this._param.overridden;\n\t}\n\tset overridden(overridden: boolean) {\n\t\tthis._param.overridden = overridden;\n\t}\n\n\tget maxValue(): number {\n\t\treturn this._param.maxValue;\n\t}\n\tget minValue(): number {\n\t\treturn this._param.minValue;\n\t}\n\n\t/**\n\t * See [[Param.apply]].\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tthis._param.apply(param);\n\t\treturn this;\n\t}\n}\n\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal: OutputNode, destination: InputNode, outputNum?: number, inputNum?: number): void {\n\tif (destination instanceof Param || isAudioParam(destination) ||\n\t\t(destination instanceof Signal && destination.override)) {\n\t\t// cancel changes\n\t\tdestination.cancelScheduledValues(0);\n\t\t// reset the value\n\t\tdestination.setValueAtTime(0, 0);\n\t\t// mark the value as overridden\n\t\tif (destination instanceof Signal) {\n\t\t\tdestination.overridden = true;\n\t\t}\n\t}\n\tconnect(signal, destination, outputNum, inputNum);\n}\n","import { AutomationEvent, Param, ParamOptions } from \"../context/Param\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n\ntype TickAutomationEvent = AutomationEvent & {\n\tticks: number;\n};\n\ninterface TickParamOptions<TypeName extends UnitName> extends ParamOptions<TypeName> {\n\tmultiplier: number;\n}\n\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam<TypeName extends \"hertz\" | \"bpm\"> extends Param<TypeName> {\n\n\treadonly name: string = \"TickParam\";\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<TickAutomationEvent> = new Timeline(Infinity);\n\n\t/**\n\t * The internal holder for the multiplier value\n\t */\n\tprivate _multiplier = 1;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: number);\n\tconstructor(options: Partial<TickParamOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n\n\t\t// set the multiplier\n\t\tthis._multiplier = options.multiplier;\n\n\t\t// clear the ticks from the beginning\n\t\tthis._events.cancel(0);\n\t\t// set an initial event\n\t\tthis._events.add({\n\t\t\tticks: 0,\n\t\t\ttime: 0,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: this._fromType(options.value),\n\t\t});\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): TickParamOptions<any> {\n\t\treturn Object.assign(Param.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], time: Time, constant: number): this {\n\t\t// approximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tthis.setRampPoint(time);\n\t\tconst computedValue = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\tconst segments = Math.round(Math.max(1 / constant, 1));\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = constant * i + time;\n\t\t\tconst rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.setValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.linearRampToValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\t// aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tconst computedVal = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\t// approx 10 segments per second\n\t\tconst segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n\t\tconst segmentDur = ((time - prevEvent.time) / segments);\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = segmentDur * i + prevEvent.time;\n\t\t\tconst rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  event The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tprivate _getTicksUntilEvent(event: TickAutomationEvent | null, time: number): Ticks {\n\t\tif (event === null) {\n\t\t\tevent = {\n\t\t\t\tticks: 0,\n\t\t\t\ttime: 0,\n\t\t\t\ttype: \"setValueAtTime\",\n\t\t\t\tvalue: 0,\n\t\t\t};\n\t\t} else if (isUndef(event.ticks)) {\n\t\t\tconst previousEvent = this._events.previousEvent(event);\n\t\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t\t}\n\t\tconst val0 = this._fromType(this.getValueAtTime(event.time));\n\t\tlet val1 = this._fromType(this.getValueAtTime(time));\n\t\t// if it's right on the line, take the previous value\n\t\tconst onTheLineEvent = this._events.get(time);\n\t\tif (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n\t\t\tval1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n\t\t}\n\t\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  time The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tgetTicksAtTime(time: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst event = this._events.get(computedTime);\n\t\treturn Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n\t}\n\n\t/**\n\t * Return the elapsed time of the number of ticks from the given time\n\t * @param ticks The number of ticks to calculate\n\t * @param  time The time to get the next tick from\n\t * @return The duration of the number of ticks from the given time in seconds\n\t */\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst currentTick = this.getTicksAtTime(time);\n\t\treturn this.getTimeOfTick(currentTick + ticks) - computedTime;\n\t}\n\n\t/**\n\t * Given a tick, returns the time that tick occurs at.\n\t * @return The time that the tick occurs.\n\t */\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\tconst before = this._events.get(tick, \"ticks\");\n\t\tconst after = this._events.getAfter(tick, \"ticks\");\n\t\tif (before && before.ticks === tick) {\n\t\t\treturn before.time;\n\t\t} else if (before && after &&\n\t\t\tafter.type === \"linearRampToValueAtTime\" &&\n\t\t\tbefore.value !== after.value) {\n\t\t\tconst val0 = this._fromType(this.getValueAtTime(before.time));\n\t\t\tconst val1 = this._fromType(this.getValueAtTime(after.time));\n\t\t\tconst delta = (val1 - val0) / (after.time - before.time);\n\t\t\tconst k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\t\tconst sol1 = (-val0 + k) / delta;\n\t\t\tconst sol2 = (-val0 - k) / delta;\n\t\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t\t} else if (before) {\n\t\t\tif (before.value === 0) {\n\t\t\t\treturn Infinity;\n\t\t\t} else {\n\t\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn tick / this._initialValue;\n\t\t}\n\t}\n\n\t/**\n\t * Convert some number of ticks their the duration in seconds accounting\n\t * for any automation curves starting at the given time.\n\t * @param  ticks The number of ticks to convert to seconds.\n\t * @param  when  When along the automation timeline to convert the ticks.\n\t * @return The duration in seconds of the ticks.\n\t */\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this.getDurationOfTicks(ticks, when);\n\t}\n\n\t/**\n\t * The inverse of [[ticksToTime]]. Convert a duration in\n\t * seconds to the corresponding number of ticks accounting for any\n\t * automation curves starting at the given time.\n\t * @param  duration The time interval to convert to ticks.\n\t * @param  when When along the automation timeline to convert the ticks.\n\t * @return The duration in ticks.\n\t */\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tconst startTicks = this.getTicksAtTime(computedTime);\n\t\tconst endTicks = this.getTicksAtTime(computedTime + computedDuration);\n\t\treturn endTicks - startTicks;\n\t}\n\n\t/**\n\t * Convert from the type when the unit value is BPM\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn 1 / (60 / val / this.multiplier);\n\t\t} else {\n\t\t\treturn super._fromType(val);\n\t\t}\n\t}\n\n\t/**\n\t * Special case of type conversion where the units === \"bpm\"\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn (val / this.multiplier) * 60 as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn super._toType(val);\n\t\t}\n\t}\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\t// get and reset the current value with the new multiplier\n\t\t// might be necessary to clear all the previous values\n\t\tconst currentVal = this.value;\n\t\tthis._multiplier = m;\n\t\tthis.cancelScheduledValues(0);\n\t\tthis.setValueAtTime(currentVal, 0);\n\t}\n}\n","import { Signal, SignalOptions } from \"../../signal/Signal\";\nimport { InputNode } from \"../context/ToneAudioNode\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n\ninterface TickSignalOptions<TypeName extends UnitName> extends SignalOptions<TypeName> {\n\tvalue: UnitMap[TypeName];\n\tmultiplier: number;\n}\n\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal<TypeName extends \"hertz\" | \"bpm\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"TickSignal\";\n\n\t/**\n\t * The param which controls the output signal value\n\t */\n\tprotected _param: TickParam<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: UnitMap[TypeName]);\n\tconstructor(options: Partial<TickSignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis.input = this._param = new TickParam({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tmultiplier: options.multiplier,\n\t\t\tparam: this._constantSource.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.value,\n\t\t});\n\t}\n\n\tstatic getDefaults(): TickSignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this._param.ticksToTime(ticks, when);\n\t}\n\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\treturn this._param.timeToTicks(duration, when);\n\t}\n\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\treturn this._param.getTimeOfTick(tick);\n\t}\n\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\treturn this._param.getDurationOfTicks(ticks, time);\n\t}\n\n\tgetTicksAtTime(time: Time): Ticks {\n\t\treturn this._param.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._param.multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\tthis._param.multiplier = m;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline, StateTimelineEvent } from \"../util/StateTimeline\";\nimport { Timeline, TimelineEvent } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n\ninterface TickSourceOptions extends ToneWithContextOptions {\n\tfrequency: number;\n\tunits: \"bpm\" | \"hertz\";\n}\n\ninterface TickSourceOffsetEvent extends TimelineEvent {\n\tticks: number;\n\ttime: number;\n\tseconds: number;\n}\n\ninterface TickSourceTicksAtTimeEvent extends TimelineEvent {\n\tstate: PlaybackState;\n\ttime: number;\n\tticks: number;\n}\n\ninterface TickSourceSecondsAtTimeEvent extends TimelineEvent {\n\tstate: PlaybackState;\n\ttime: number;\n\tseconds: number;\n}\n\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource<TypeName extends \"bpm\" | \"hertz\"> extends ToneWithContext<TickSourceOptions> {\n\n\treadonly name: string = \"TickSource\";\n\n\t/**\n\t * The frequency the callback function should be invoked.\n\t */\n\treadonly frequency: TickSignal<TypeName>;\n\n\t/**\n\t * The state timeline\n\t */\n\tprivate _state: StateTimeline = new StateTimeline();\n\n\t/**\n\t * The offset values of the ticks\n\t */\n\tprivate _tickOffset: Timeline<TickSourceOffsetEvent> = new Timeline();\n\n\t/**\n\t * Memoized values of getTicksAtTime at events with state other than \"started\"\n\t */\n\tprivate _ticksAtTime: Timeline<TickSourceTicksAtTimeEvent> = new Timeline<TickSourceTicksAtTimeEvent>();\n\n\t/**\n\t * Memoized values of getSecondsAtTime at events with state other than \"started\"\n\t */\n\tprivate _secondsAtTime: Timeline<TickSourceSecondsAtTimeEvent> = new Timeline<TickSourceSecondsAtTimeEvent>();\n\n\t/**\n\t * @param frequency The initial frequency that the signal ticks at\n\t */\n\tconstructor(frequency?: number);\n\tconstructor(options?: Partial<TickSourceOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis.frequency = new TickSignal({\n\t\t\tcontext: this.context,\n\t\t\tunits: options.units as TypeName,\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\t// set the initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\t\t// add the first event\n\t\tthis.setTicksAtTime(0, 0);\n\t}\n\n\tstatic getDefaults(): TickSourceOptions {\n\t\treturn Object.assign({\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\" as const,\n\t\t}, ToneWithContext.getDefaults());\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset The number of ticks to start the source at\n\t */\n\tstart(time: Time, offset?: Ticks): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (isDefined(offset)) {\n\t\t\t\tthis.setTicksAtTime(offset, computedTime);\n\t\t\t}\n\t\t\tthis._ticksAtTime.cancel(computedTime);\n\t\t\tthis._secondsAtTime.cancel(computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t */\n\tstop(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// cancel the previous stop\n\t\tif (this._state.getValueAtTime(computedTime) === \"stopped\") {\n\t\t\tconst event = this._state.get(computedTime);\n\t\t\tif (event && event.time > 0) {\n\t\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\t\tthis._state.cancel(event.time);\n\t\t\t}\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis.setTicksAtTime(0, computedTime);\n\t\tthis._ticksAtTime.cancel(computedTime);\n\t\tthis._secondsAtTime.cancel(computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t\tthis._ticksAtTime.cancel(computedTime);\n\t\t\tthis._secondsAtTime.cancel(computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n\t * @param time When to clear the events after\n\t */\n\tcancel(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._ticksAtTime.cancel(time);\n\t\tthis._secondsAtTime.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the elapsed ticks at the given time\n\t * @param  time  When to get the tick value\n\t * @return The number of ticks\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", computedTime) as StateTimelineEvent;\n\n\t\t// get previously memoized ticks if available\n\t\tconst memoizedEvent = this._ticksAtTime.get(computedTime);\n\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time: computedTime };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = memoizedEvent ? memoizedEvent : stopEvent;\n\t\tlet elapsedTicks = memoizedEvent ? memoizedEvent.ticks : 0;\n\t\tlet eventToMemoize : TickSourceTicksAtTimeEvent | null = null;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(lastState.time, computedTime + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t\t\t// do not memoize the temporary event\n\t\t\t\tif (e.time != tmpEvent.time) {\n\t\t\t\t\teventToMemoize = { state: e.state, time: e.time, ticks: elapsedTicks };\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// memoize the ticks at the most recent event with state other than \"started\"\n\t\tif (eventToMemoize) {\n\t\t\tthis._ticksAtTime.add(eventToMemoize);\n\t\t}\n\n\t\t// return the ticks\n\t\treturn elapsedTicks;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked. Returns -1 when stopped.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this.getTicksAtTime(this.now());\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n\n\t/**\n\t * The time since ticks=0 that the TickSource has been running. Accounts\n\t * for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this.getSecondsAtTime(this.now());\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\ttime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", time) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// get previously memoized seconds if available\n\t\tconst memoizedEvent = this._secondsAtTime.get(time);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = memoizedEvent ? memoizedEvent : stopEvent;\n\t\tlet elapsedSeconds = memoizedEvent ? memoizedEvent.seconds : 0;\n\t\tlet eventToMemoize : TickSourceSecondsAtTimeEvent | null = null;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(lastState.time, time + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t\t\t// do not memoize the temporary event\n\t\t\t\tif (e.time != tmpEvent.time) {\n\t\t\t\t\teventToMemoize = { state: e.state, time: e.time, seconds: elapsedSeconds };\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// memoize the seconds at the most recent event with state other than \"started\"\n\t\tif (eventToMemoize) {\n\t\t\tthis._secondsAtTime.add(eventToMemoize);\n\t\t}\n\n\t\t// return the seconds\n\t\treturn elapsedSeconds;\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._tickOffset.add({\n\t\t\tseconds: this.frequency.getDurationOfTicks(ticks, time),\n\t\t\tticks,\n\t\t\ttime,\n\t\t});\n\t\tthis._ticksAtTime.cancel(time);\n\t\tthis._secondsAtTime.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\tconst offset = this._tickOffset.get(before) as TickSourceOffsetEvent;\n\t\tconst event = this._state.get(before) as StateTimelineEvent;\n\t\tconst startTime = Math.max(offset.time, event.time);\n\t\tconst absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\t\treturn this.frequency.getTimeOfTick(absoluteTicks);\n\t}\n\n\t/**\n\t * Invoke the callback event at all scheduled ticks between the\n\t * start time and the end time\n\t * @param  startTime  The beginning of the search range\n\t * @param  endTime    The end of the search range\n\t * @param  callback   The callback to invoke with each tick\n\t */\n\tforEachTickBetween(startTime: number, endTime: number, callback: (when: Seconds, ticks: Ticks) => void): this {\n\t\t// only iterate through the sections where it is \"started\"\n\t\tlet lastStateEvent = this._state.get(startTime);\n\t\tthis._state.forEachBetween(startTime, endTime, event => {\n\t\t\tif (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n\t\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t\t}\n\t\t\tlastStateEvent = event;\n\t\t});\n\n\t\tlet error: Error | null = null;\n\n\t\tif (lastStateEvent && lastStateEvent.state === \"started\") {\n\t\t\tconst maxStartTime = Math.max(lastStateEvent.time, startTime);\n\t\t\t// figure out the difference between the frequency ticks and the\n\t\t\tconst startTicks = this.frequency.getTicksAtTime(maxStartTime);\n\t\t\tconst ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\t\tconst diff = startTicks - ticksAtStart;\n\t\t\tlet offset = Math.ceil(diff) - diff;\n\t\t\t// guard against floating point issues\n\t\t\toffset = EQ(offset, 1) ? 0 : offset;\n\t\t\tlet nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\t\twhile (nextTickTime < endTime) {\n\t\t\t\ttry {\n\t\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t}\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._state.dispose();\n\t\tthis._tickOffset.dispose();\n\t\tthis._ticksAtTime.dispose();\n\t\tthis._secondsAtTime.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline } from \"../util/StateTimeline\";\nimport { TickSignal } from \"./TickSignal\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n\ntype ClockCallback = (time: Seconds, ticks?: Ticks) => void;\n\ninterface ClockOptions extends ToneWithContextOptions {\n\tfrequency: Hertz;\n\tcallback: ClockCallback;\n\tunits: \"hertz\" | \"bpm\";\n}\n\ntype ClockEvent = \"start\" | \"stop\" | \"pause\";\n\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock<TypeName extends \"bpm\" | \"hertz\" = \"hertz\">\n\textends ToneWithContext<ClockOptions> implements Emitter<ClockEvent> {\n\n\treadonly name: string = \"Clock\";\n\n\t/**\n\t * The callback function to invoke at the scheduled tick.\n\t */\n\tcallback: ClockCallback = noOp;\n\n\t/**\n\t * The tick counter\n\t */\n\tprivate _tickSource: TickSource<TypeName>;\n\n\t/**\n\t * The last time the loop callback was invoked\n\t */\n\tprivate _lastUpdate = 0;\n\n\t/**\n\t * Keep track of the playback state\n\t */\n\tprivate _state: StateTimeline = new StateTimeline(\"stopped\");\n\n\t/**\n\t * Context bound reference to the _loop method\n\t * This is necessary to remove the event in the end.\n\t */\n\tprivate _boundLoop: () => void = this._loop.bind(this);\n\n\t/**\n\t * The rate the callback function should be invoked.\n\t */\n\tfrequency: TickSignal<TypeName>;\n\n\t/**\n\t * @param callback The callback to be invoked with the time of the audio event\n\t * @param frequency The rate of the callback\n\t */\n\tconstructor(callback?: ClockCallback, frequency?: Frequency);\n\tconstructor(options: Partial<ClockOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n\t\tconst options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._tickSource = new TickSource({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tunits: options.units,\n\t\t});\n\t\tthis._lastUpdate = 0;\n\t\tthis.frequency = this._tickSource.frequency;\n\t\treadOnly(this, \"frequency\");\n\n\t\t// add an initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\n\t\t// bind a callback to the worker thread\n\t\tthis.context.on(\"tick\", this._boundLoop);\n\t}\n\n\tstatic getDefaults(): ClockOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tcallback: noOp as ClockCallback,\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\",\n\t\t}) as ClockOptions;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset  Where the tick counter starts counting from.\n\t */\n\tstart(time?: Time, offset?: Ticks): this {\n\t\t// make sure the context is running\n\t\tassertContextRunning(this.context);\n\t\t// start the loop\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis._tickSource.start(computedTime, offset);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"start\", computedTime, offset);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t * @example\n\t * const clock = new Tone.Clock(time => {\n\t * \tconsole.log(time);\n\t * }, 1);\n\t * clock.start();\n\t * // stop the clock after 10 seconds\n\t * clock.stop(\"+10\");\n\t */\n\tstop(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"stop\", computedTime);\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis._tickSource.stop(computedTime);\n\t\tif (computedTime < this._lastUpdate) {\n\t\t\tthis.emit(\"stop\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t\tthis._tickSource.pause(computedTime);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"pause\", computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked.\n\t */\n\tget ticks(): Ticks {\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis._tickSource.ticks = t;\n\t}\n\n\t/**\n\t * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._tickSource.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tthis._tickSource.seconds = s;\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._tickSource.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\tthis._tickSource.setTicksAtTime(ticks, time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\treturn this._tickSource.getTimeOfTick(tick, before);\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn this._tickSource.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the next tick\n\t * @param  offset The tick number.\n\t */\n\tnextTickTime(offset: Ticks, when: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst currentTick = this.getTicksAtTime(computedTime);\n\t\treturn this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n\t}\n\n\t/**\n\t * The scheduling loop.\n\t */\n\tprivate _loop(): void {\n\n\t\tconst startTime = this._lastUpdate;\n\t\tconst endTime = this.now();\n\t\tthis._lastUpdate = endTime;\n\t\tthis.log(\"loop\", startTime, endTime);\n\n\t\tif (startTime !== endTime) {\n\t\t\t// the state change events\n\t\t\tthis._state.forEachBetween(startTime, endTime, e => {\n\t\t\t\tswitch (e.state) {\n\t\t\t\t\tcase \"started\":\n\t\t\t\t\t\tconst offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stopped\":\n\t\t\t\t\t\tif (e.time !== 0) {\n\t\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"paused\":\n\t\t\t\t\t\tthis.emit(\"pause\", e.time);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// the tick callbacks\n\t\t\tthis._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n\t\t\t\tthis.callback(time, ticks);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t * @example\n\t * const clock = new Tone.Clock();\n\t * clock.start(\"+0.1\");\n\t * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(computedTime);\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.context.off(\"tick\", this._boundLoop);\n\t\tthis._tickSource.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\tonce!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\toff!: (event: ClockEvent, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Clock);\n","import { Param } from \"../context/Param\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\nexport interface DelayOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst delay = new Tone.Delay(0.1).toDestination();\n * \t// connect the signal to both the delay and the destination\n * \tconst pulse = new Tone.PulseOscillator().connect(delay).toDestination();\n * \t// start and stop the pulse\n * \tpulse.start(0).stop(0.01);\n * }, 0.5, 1);\n */\nexport class Delay extends ToneAudioNode<DelayOptions> {\n\n\treadonly name: string = \"Delay\";\n\n\t/**\n\t * Private holder of the max delay time\n\t */\n\tprivate _maxDelay: Seconds;\n\n\t/**\n\t * The amount of time the incoming signal is delayed.\n\t * @example\n\t * const delay = new Tone.Delay().toDestination();\n\t * // modulate the delayTime between 0.1 and 1 seconds\n\t * const delayLFO = new Tone.LFO(0.5, 0.1, 1).start().connect(delay.delayTime);\n\t * const pulse = new Tone.PulseOscillator().connect(delay).start();\n\t * // the change in delayTime causes the pitch to go up and down\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * Private reference to the internal DelayNode\n\t */\n\tprivate _delayNode: DelayNode;\n\treadonly input: DelayNode;\n\treadonly output: DelayNode;\n\n\t/**\n\t * @param delayTime The delay applied to the incoming signal.\n\t * @param maxDelay The maximum delay time.\n\t */\n\tconstructor(delayTime?: Time, maxDelay?: Time);\n\tconstructor(options?: Partial<DelayOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n\n\t\tconst options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n\n\t\tconst maxDelayInSeconds = this.toSeconds(options.maxDelay);\n\t\tthis._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n\n\t\tthis._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n\n\t\tthis.delayTime = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._delayNode.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.delayTime,\n\t\t\tminValue: 0,\n\t\t\tmaxValue: this.maxDelay,\n\t\t});\n\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): DelayOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The maximum delay time. This cannot be changed after\n\t * the value is passed into the constructor.\n\t */\n\tget maxDelay(): Seconds {\n\t\treturn this._maxDelay;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.disconnect();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { getContext, setContext } from \"../Global\";\nimport { Seconds } from \"../type/Units\";\nimport { OfflineContext } from \"./OfflineContext\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n\n/**\n * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n * The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n * The callback function also passes in an offline instance of [[Context]] which can be used\n * to schedule events along the Transport. \n * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n * @param  duration     the amount of time to record for.\n * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.\n * @example\n * // render 2 seconds of the oscillator\n * Tone.Offline(() => {\n * \t// only nodes created in this callback will be recorded\n * \tconst oscillator = new Tone.Oscillator().toDestination().start(0);\n * }, 2).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @example\n * // can also schedule events along the Transport\n * // using the passed in Offline Transport\n * Tone.Offline(({ transport }) => {\n * \tconst osc = new Tone.Oscillator().toDestination();\n * \ttransport.schedule(time => {\n * \t\tosc.start(time).stop(time + 0.1);\n * \t}, 1);\n * \t// make sure to start the transport\n * \ttransport.start(0.2);\n * }, 4).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @category Core\n */\nexport async function Offline(\n\tcallback: (context: OfflineContext) => Promise<void> | void,\n\tduration: Seconds,\n\tchannels = 2,\n\tsampleRate: number = getContext().sampleRate,\n): Promise<ToneAudioBuffer> {\n\t// set the OfflineAudioContext based on the current context\n\tconst originalContext = getContext();\n\n\tconst context = new OfflineContext(channels, duration, sampleRate);\n\tsetContext(context);\n\n\t// invoke the callback/scheduling\n\tawait callback(context);\n\n\t// then render the audio\n\tconst bufferPromise = context.render();\n\n\t// return the original AudioContext\n\tsetContext(originalContext);\n\n\t// await the rendering\n\tconst buffer = await bufferPromise;\n\n\t// return the audio\n\treturn new ToneAudioBuffer(buffer);\n}\n","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n\nexport interface ToneAudioBuffersUrlMap {\n\t[name: string]: string | AudioBuffer | ToneAudioBuffer;\n\t[name: number]: string | AudioBuffer | ToneAudioBuffer;\n}\n\ninterface ToneAudioBuffersOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tonload: () => void;\n\tonerror?: (error: Error) => void;\n\tbaseUrl: string;\n}\n\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffers\";\n\n\t/**\n\t * All of the buffers\n\t */\n\tprivate _buffers: Map<string, ToneAudioBuffer> = new Map();\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tbaseUrl: string;\n\n\t/**\n\t * Keep track of the number of loaded buffers\n\t */\n\tprivate _loadingCount = 0;\n\n\t/**\n\t * @param  urls  An object literal or array of urls to load.\n\t * @param onload  The callback to invoke when the buffers are loaded.\n\t * @param baseUrl A prefix url to add before all the urls\n\t */\n\tconstructor(\n\t\turls?: ToneAudioBuffersUrlMap,\n\t\tonload?: () => void,\n\t\tbaseUrl?: string,\n\t);\n\tconstructor(options?: Partial<ToneAudioBuffersOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\t\tconst options = optionsFromArguments(\n\t\t\tToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\",\n\t\t);\n\n\t\tthis.baseUrl = options.baseUrl;\n\t\t// add each one\n\t\tObject.keys(options.urls).forEach(name => {\n\t\t\tthis._loadingCount++;\n\t\t\tconst url = options.urls[name];\n\t\t\tthis.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n\t\t});\n\n\t}\n\n\tstatic getDefaults(): ToneAudioBuffersOptions {\n\t\treturn {\n\t\t\tbaseUrl: \"\",\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\turls: {},\n\t\t};\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param  name  The key or index of the buffer.\n\t */\n\thas(name: string | number): boolean {\n\t\treturn this._buffers.has(name.toString());\n\t}\n\n\t/**\n\t * Get a buffer by name. If an array was loaded,\n\t * then use the array index.\n\t * @param  name  The key or index of the buffer.\n\t */\n\tget(name: string | number): ToneAudioBuffer {\n\t\tassert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n\t\treturn this._buffers.get(name.toString()) as ToneAudioBuffer;\n\t}\n\n\t/**\n\t * A buffer was loaded. decrement the counter.\n\t */\n\tprivate _bufferLoaded(callback: () => void): void {\n\t\tthis._loadingCount--;\n\t\tif (this._loadingCount === 0 && callback) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n\t}\n\n\t/**\n\t * Add a buffer by name and url to the Buffers\n\t * @param  name      A unique name to give the buffer\n\t * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t * @param  onerror  Invoked if the buffer can't be loaded\n\t */\n\tadd(\n\t\tname: string | number,\n\t\turl: string | AudioBuffer | ToneAudioBuffer,\n\t\tcallback: () => void = noOp,\n\t\tonerror: (e: Error) => void = noOp,\n\t): this {\n\t\tif (isString(url)) {\n\t\t\t// don't include the baseUrl if the url is a base64 encoded sound\n\t\t\tif (this.baseUrl && url.trim().substring(0, 11).toLowerCase() === \"data:audio/\") {\n\t\t\t\tthis.baseUrl = \"\";\n\t\t\t}\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n\t\t} else {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n\t\t}\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.forEach(buffer => buffer.dispose());\n\t\tthis._buffers.clear();\n\t\treturn this;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass, FrequencyUnit } from \"./Frequency\";\nimport { TimeValue } from \"./TimeBase\";\nimport { Hertz, Interval, MidiNote, Seconds, Ticks } from \"./Units\";\n\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nexport class MidiClass extends FrequencyClass<MidiNote> {\n\n\treadonly name: string = \"MidiClass\";\n\n\treadonly defaultUnits = \"midi\";\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): MidiNote {\n\t\treturn ftom(super._frequencyToUnits(freq));\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): MidiNote {\n\t\treturn ftom(super._ticksToUnits(ticks));\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): MidiNote {\n\t\treturn ftom(super._beatsToUnits(beats));\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): MidiNote {\n\t\treturn ftom(super._secondsToUnits(seconds));\n\t}\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Midi(60).toMidi(); // 60\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn this.valueOf();\n\t}\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Midi(60).toFrequency(); // 261.6255653005986\n\t */\n\ttoFrequency(): Hertz {\n\t\treturn mtof(this.toMidi());\n\t}\n\n\t/**\n\t * Transposes the frequency by the given number of semitones.\n\t * @return A new transposed MidiClass\n\t * @example\n\t * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n\t */\n\ttranspose(interval: Interval): MidiClass {\n\t\treturn new MidiClass(this.context, this.toMidi() + interval);\n\t}\n}\n\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value?: TimeValue, units?: FrequencyUnit): MidiClass {\n\treturn new MidiClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\nimport { TransportTimeClass } from \"./TransportTime\";\nimport { Seconds, Ticks } from \"./Units\";\n\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass<Ticks> {\n\n\treadonly name: string = \"Ticks\";\n\n\treadonly defaultUnits: TimeBaseUnit = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t */\n\tprotected _now(): Ticks {\n\t\treturn this.context.transport.ticks;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Ticks {\n\t\treturn this._getPPQ() * beats;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Ticks {\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Ticks {\n\t\treturn ticks;\n\t}\n\n\t/**\n\t * Return the time in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\treturn this.valueOf() as Ticks;\n\t}\n\n\t/**\n\t * Return the time in seconds\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t}\n}\n\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value?: TimeValue, units?: TimeBaseUnit): TicksClass {\n\treturn new TicksClass(getContext(), value, units);\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n\ninterface DrawEvent extends TimelineEvent {\n\tcallback: () => void;\n}\n\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext<ToneWithContextOptions> {\n\n\treadonly name: string = \"Draw\";\n\n\t/**\n\t * The duration after which events are not invoked.\n\t */\n\texpiration: Seconds = 0.25;\n\n\t/**\n\t * The amount of time before the scheduled time\n\t * that the callback can be invoked. Default is\n\t * half the time of an animation frame (0.008 seconds).\n\t */\n\tanticipation: Seconds = 0.008;\n\n\t/**\n\t * All of the events.\n\t */\n\tprivate _events: Timeline<DrawEvent> = new Timeline();\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _boundDrawLoop = this._drawLoop.bind(this);\n\n\t/**\n\t * The animation frame id\n\t */\n\tprivate _animationFrame = -1;\n\n\t/**\n\t * Schedule a function at the given time to be invoked\n\t * on the nearest animation frame.\n\t * @param  callback  Callback is invoked at the given time.\n\t * @param  time      The time relative to the AudioContext time to invoke the callback.\n\t * @example\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tTone.Draw.schedule(() => console.log(time), time);\n\t * }, 1);\n\t * Tone.Transport.start();\n\t */\n\tschedule(callback: () => void, time: Time): this {\n\t\tthis._events.add({\n\t\t\tcallback,\n\t\t\ttime: this.toSeconds(time),\n\t\t});\n\t\t// start the draw loop on the first event\n\t\tif (this._events.length === 1) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events scheduled after the given time\n\t * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._events.cancel(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _drawLoop(): void {\n\t\tconst now = this.context.currentTime;\n\t\twhile (this._events.length && (this._events.peek() as DrawEvent).time - this.anticipation <= now) {\n\t\t\tconst event = this._events.shift();\n\t\t\tif (event && now - event.time <= this.expiration) {\n\t\t\t\tevent.callback();\n\t\t\t}\n\t\t}\n\t\tif (this._events.length > 0) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\tcancelAnimationFrame(this._animationFrame);\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.draw = new Draw({ context });\n});\n\nonContextClose(context => {\n\tcontext.draw.dispose();\n});\n","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n\n/**\n * An IntervalTimeline event must have a time and duration\n */\nexport interface IntervalTimelineEvent {\n\ttime: number;\n\tduration: number;\n\t[propName: string]: any;\n}\n\ntype IteratorCallback = (event: IntervalTimelineEvent) => void;\n\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n\n\treadonly name: string = \"IntervalTimeline\";\n\n\t/**\n\t * The root node of the inteval tree\n\t */\n\tprivate _root: IntervalNode | null = null;\n\n\t/**\n\t * Keep track of the length of the timeline.\n\t */\n\tprivate _length = 0;\n\n\t/**\n\t * The event to add to the timeline. All events must\n\t * have a time and duration value\n\t * @param  event  The event to add to the timeline\n\t */\n\tadd(event: IntervalTimelineEvent): this {\n\t\tassert(isDefined(event.time), \"Events must have a time property\");\n\t\tassert(isDefined(event.duration), \"Events must have a duration parameter\");\n\n\t\tevent.time = event.time.valueOf();\n\t\tlet node: IntervalNode | null = new IntervalNode(event.time, event.time + event.duration, event);\n\t\tif (this._root === null) {\n\t\t\tthis._root = node;\n\t\t} else {\n\t\t\tthis._root.insert(node);\n\t\t}\n\t\tthis._length++;\n\t\t// Restructure tree to be balanced\n\t\twhile (node !== null) {\n\t\t\tnode.updateHeight();\n\t\t\tnode.updateMax();\n\t\t\tthis._rebalance(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  event  The event to remove from the timeline\n\t */\n\tremove(event: IntervalTimelineEvent): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(event.time, results);\n\t\t\tfor (const node of results) {\n\t\t\t\tif (node.event === event) {\n\t\t\t\t\tthis._removeNode(node);\n\t\t\t\t\tthis._length--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t * @readOnly\n\t */\n\tget length(): number {\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Remove events whose time time is after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tthis.forEachFrom(after, event => this.remove(event));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the root node as the given node\n\t */\n\tprivate _setRoot(node: IntervalNode | null): void {\n\t\tthis._root = node;\n\t\tif (this._root !== null) {\n\t\t\tthis._root.parent = null;\n\t\t}\n\t}\n\n\t/**\n\t * Replace the references to the node in the node's parent\n\t * with the replacement node.\n\t */\n\tprivate _replaceNodeInParent(node: IntervalNode, replacement: IntervalNode | null): void {\n\t\tif (node.parent !== null) {\n\t\t\tif (node.isLeftChild()) {\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t\tthis._rebalance(node.parent);\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t}\n\n\t/**\n\t * Remove the node from the tree and replace it with\n\t * a successor which follows the schema.\n\t */\n\tprivate _removeNode(node: IntervalNode): void {\n\t\tif (node.left === null && node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, null);\n\t\t} else if (node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, node.left);\n\t\t} else if (node.left === null) {\n\t\t\tthis._replaceNodeInParent(node, node.right);\n\t\t} else {\n\t\t\tconst balance = node.getBalance();\n\t\t\tlet replacement: IntervalNode;\n\t\t\tlet temp: IntervalNode | null = null;\n\t\t\tif (balance > 0) {\n\t\t\t\tif (node.left.right === null) {\n\t\t\t\t\treplacement = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\ttemp = replacement;\n\t\t\t\t} else {\n\t\t\t\t\treplacement = node.left.right;\n\t\t\t\t\twhile (replacement.right !== null) {\n\t\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t\t}\n\t\t\t\t\tif (replacement.parent) {\n\t\t\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (node.right.left === null) {\n\t\t\t\treplacement = node.right;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.right.left;\n\t\t\t\twhile (replacement.left !== null) {\n\t\t\t\t\treplacement = replacement.left;\n\t\t\t\t}\n\t\t\t\tif (replacement.parent) {\n\t\t\t\t\treplacement.parent.left = replacement.right;\n\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node.parent !== null) {\n\t\t\t\tif (node.isLeftChild()) {\n\t\t\t\t\tnode.parent.left = replacement;\n\t\t\t\t} else {\n\t\t\t\t\tnode.parent.right = replacement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setRoot(replacement);\n\t\t\t}\n\t\t\tif (temp) {\n\t\t\t\tthis._rebalance(temp);\n\t\t\t}\n\t\t}\n\t\tnode.dispose();\n\t}\n\n\t/**\n\t * Rotate the tree to the left\n\t */\n\tprivate _rotateLeft(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.right the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.right;\n\t\tif (pivotNode) {\n\t\t\tnode.right = pivotNode.left;\n\t\t\tpivotNode.left = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Rotate the tree to the right\n\t */\n\tprivate _rotateRight(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.left the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.left;\n\t\tif (pivotNode) {\n\t\t\tnode.left = pivotNode.right;\n\t\t\tpivotNode.right = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Balance the BST\n\t */\n\tprivate _rebalance(node: IntervalNode): void {\n\t\tconst balance = node.getBalance();\n\t\tif (balance > 1 && node.left) {\n\t\t\tif (node.left.getBalance() < 0) {\n\t\t\t\tthis._rotateLeft(node.left);\n\t\t\t} else {\n\t\t\t\tthis._rotateRight(node);\n\t\t\t}\n\t\t} else if (balance < -1 && node.right) {\n\t\t\tif (node.right.getBalance() > 0) {\n\t\t\t\tthis._rotateRight(node.right);\n\t\t\t} else {\n\t\t\t\tthis._rotateLeft(node);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get an event whose time and duration span the give time. Will\n\t * return the match whose \"time\" value is closest to the given time.\n\t * @return  The event which spans the desired time\n\t */\n\tget(time: number): IntervalTimelineEvent | null {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tif (results.length > 0) {\n\t\t\t\tlet max = results[0];\n\t\t\t\tfor (let i = 1; i < results.length; i++) {\n\t\t\t\t\tif (results[i].low > max.low) {\n\t\t\t\t\t\tmax = results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn max.event;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Iterate over everything in the timeline.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst allNodes: IntervalNode[] = [];\n\t\t\tthis._root.traverse(node => allNodes.push(node));\n\t\t\tallNodes.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the given time\n\t * overlaps with the time and duration time of the event.\n\t * @param  time The time to check if items are overlapping\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the time is greater\n\t * than or equal to the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.searchAfter(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._root !== null) {\n\t\t\tthis._root.traverse(node => node.dispose());\n\t\t}\n\t\tthis._root = null;\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n\n\t// the event container\n\tevent: IntervalTimelineEvent | null;\n\t// the low value\n\tlow: number;\n\t// the high value\n\thigh: number;\n\t// the high value for this and all child nodes\n\tmax: number;\n\t// the nodes to the left\n\tprivate _left: IntervalNode | null = null;\n\t// the nodes to the right\n\tprivate _right: IntervalNode | null = null;\n\t// the parent node\n\tparent: IntervalNode | null = null;\n\t// the number of child nodes\n\theight = 0;\n\n\tconstructor(low: number, high: number, event: IntervalTimelineEvent) {\n\t\tthis.event = event;\n\t\t// the low value\n\t\tthis.low = low;\n\t\t// the high value\n\t\tthis.high = high;\n\t\t// the high value for this and all child nodes\n\t\tthis.max = this.high;\n\t}\n\n\t/**\n\t * Insert a node into the correct spot in the tree\n\t */\n\tinsert(node: IntervalNode): void {\n\t\tif (node.low <= this.low) {\n\t\t\tif (this.left === null) {\n\t\t\t\tthis.left = node;\n\t\t\t} else {\n\t\t\t\tthis.left.insert(node);\n\t\t\t}\n\t\t} else if (this.right === null) {\n\t\t\tthis.right = node;\n\t\t} else {\n\t\t\tthis.right.insert(node);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which overlap\n\t * with the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearch(point: number, results: IntervalNode[]): void {\n\t\t// If p is to the right of the rightmost point of any interval\n\t\t// in this node and all children, there won't be any matches.\n\t\tif (point > this.max) {\n\t\t\treturn;\n\t\t}\n\t\t// Search left children\n\t\tif (this.left !== null) {\n\t\t\tthis.left.search(point, results);\n\t\t}\n\t\t// Check this node\n\t\tif (this.low <= point && this.high > point) {\n\t\t\tresults.push(this);\n\t\t}\n\t\t// If p is to the left of the time of this interval,\n\t\t// then it can't be in any child to the right.\n\t\tif (this.low > point) {\n\t\t\treturn;\n\t\t}\n\t\t// Search right children\n\t\tif (this.right !== null) {\n\t\t\tthis.right.search(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which are less\n\t * than the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearchAfter(point: number, results: IntervalNode[]): void {\n\t\t// Check this node\n\t\tif (this.low >= point) {\n\t\t\tresults.push(this);\n\t\t\tif (this.left !== null) {\n\t\t\t\tthis.left.searchAfter(point, results);\n\t\t\t}\n\t\t}\n\t\t// search the right side\n\t\tif (this.right !== null) {\n\t\t\tthis.right.searchAfter(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Invoke the callback on this element and both it's branches\n\t * @param  {Function}  callback\n\t */\n\ttraverse(callback: (self: IntervalNode) => void): void {\n\t\tcallback(this);\n\t\tif (this.left !== null) {\n\t\t\tthis.left.traverse(callback);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.right.traverse(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateHeight(): void {\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tthis.height = this.right.height + 1;\n\t\t} else if (this.left !== null) {\n\t\t\tthis.height = this.left.height + 1;\n\t\t} else {\n\t\t\tthis.height = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateMax(): void {\n\t\tthis.max = this.high;\n\t\tif (this.left !== null) {\n\t\t\tthis.max = Math.max(this.max, this.left.max);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.max = Math.max(this.max, this.right.max);\n\t\t}\n\t}\n\n\t/**\n\t * The balance is how the leafs are distributed on the node\n\t * @return  Negative numbers are balanced to the right\n\t */\n\tgetBalance(): number {\n\t\tlet balance = 0;\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tbalance = this.left.height - this.right.height;\n\t\t} else if (this.left !== null) {\n\t\t\tbalance = this.left.height + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tbalance = -(this.right.height + 1);\n\t\t}\n\t\treturn balance;\n\t}\n\n\t/**\n\t * @returns true if this node is the left child of its parent\n\t */\n\tisLeftChild(): boolean {\n\t\treturn this.parent !== null && this.parent.left === this;\n\t}\n\n\t/**\n\t * get/set the left node\n\t */\n\tget left(): IntervalNode | null {\n\t\treturn this._left;\n\t}\n\n\tset left(node: IntervalNode | null) {\n\t\tthis._left = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * get/set the right node\n\t */\n\tget right(): IntervalNode | null {\n\t\treturn this._right;\n\t}\n\n\tset right(node: IntervalNode | null) {\n\t\tthis._right = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * null out references.\n\t */\n\tdispose(): void {\n\t\tthis.parent = null;\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis.event = null;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface VolumeOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode<VolumeOptions> {\n\n\treadonly name: string = \"Volume\";\n\n\t/**\n\t * the output node\n\t */\n\toutput: Gain<\"decibels\">;\n\n\t/**\n\t * Input and output are the same\n\t */\n\tinput: Gain<\"decibels\">;\n\n\t/**\n\t * The unmuted volume\n\t */\n\tprivate _unmutedVolume: Decibels;\n\n\t/**\n\t * The volume control in decibels.\n\t * @example\n\t * const vol = new Tone.Volume().toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * vol.volume.value = -20;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume the initial volume in decibels\n\t */\n\tconstructor(volume?: Decibels);\n\tconstructor(options?: Partial<VolumeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n\t\tconst options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.volume,\n\t\t\tunits: \"decibels\",\n\t\t});\n\t\tthis.volume = this.output.gain;\n\t\treadOnly(this, \"volume\");\n\t\tthis._unmutedVolume = options.volume;\n\n\t\t// set the mute initially\n\t\tthis.mute = options.mute;\n\t}\n\n\tstatic getDefaults(): VolumeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const vol = new Tone.Volume(-12).toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * // mute the output\n\t * vol.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this.volume.value === -Infinity;\n\t}\n\tset mute(mute: boolean) {\n\t\tif (!this.mute && mute) {\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t// maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute) {\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Decibels } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { Param } from \"./Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface DestinationOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.getDestination());\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode<DestinationOptions> {\n\n\treadonly name: string = \"Destination\";\n\n\tinput: Volume = new Volume({ context: this.context });\n\toutput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The volume of the master output in decibels. -Infinity is silent, and 0 is no change. \n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * osc.start();\n\t * // ramp the volume down to silent over 10 seconds\n\t * Tone.getDestination().volume.rampTo(-Infinity, 10);\n\t */\n\tvolume: Param<\"decibels\"> = this.input.volume;\n\n\tconstructor(options: Partial<DestinationOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Destination.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Destination.getDefaults(), arguments);\n\n\t\tconnectSeries(this.input, this.output, this.context.rawContext.destination);\n\n\t\tthis.mute = options.mute;\n\t\tthis._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n\t}\n\n\tstatic getDefaults(): DestinationOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const oscillator = new Tone.Oscillator().start().toDestination();\n\t * setTimeout(() => {\n\t * \t// mute the output\n\t * \tTone.Destination.mute = true;\n\t * }, 1000);\n\t */\n\tget mute(): boolean {\n\t\treturn this.input.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis.input.mute = mute;\n\t}\n\n\t/**\n\t * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t * chained in the master effects chain.\n\t * @param args All arguments will be connected in a row and the Master will be routed through it.\n\t * @example\n\t * // route all audio through a filter and compressor\n\t * const lowpass = new Tone.Filter(800, \"lowpass\");\n\t * const compressor = new Tone.Compressor(-18);\n\t * Tone.Destination.chain(lowpass, compressor);\n\t */\n\tchain(...args: Array<AudioNode | ToneAudioNode>): this {\n\t\tthis.input.disconnect();\n\t\targs.unshift(this.input);\n\t\targs.push(this.output);\n\t\tconnectSeries(...args);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The maximum number of channels the system can output\n\t * @example\n\t * console.log(Tone.Destination.maxChannelCount);\n\t */\n\tget maxChannelCount(): number {\n\t\treturn this.context.rawContext.destination.maxChannelCount;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.destination = new Destination({ context });\n});\n\nonContextClose(context => {\n\tcontext.destination.dispose();\n});\n","import { Timeline, TimelineEvent } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\n\ninterface TimelineValueEvent<T> extends TimelineEvent {\n\tvalue: T;\n}\n\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue<Type> extends Tone {\n\n\treadonly name: string = \"TimelineValue\";\n\n\t/**\n\t * The timeline which stores the values\n\t */\n\tprivate _timeline: Timeline<TimelineValueEvent<Type>> = new Timeline({ memory: 10 })\n\n\t/**\n\t * Hold the value to return if there is no scheduled values\n\t */\n\tprivate _initialValue: Type;\n\n\t/**\n\t * @param initialValue The value to return if there is no scheduled values\n\t */\n\tconstructor(initialValue: Type) {\n\n\t\tsuper();\n\t\tthis._initialValue = initialValue;\n\t}\n\n\t/**\n\t * Set the value at the given time\n\t */\n\tset(value: Type, time: Seconds): this {\n\t\tthis._timeline.add({\n\t\t\tvalue, time\n\t\t});\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value at the given time\n\t */\n\tget(time: Seconds): Type {\n\t\tconst event = this._timeline.get(time);\n\t\tif (event) {\n\t\t\treturn event.value;\n\t\t} else {\n\t\t\treturn this._initialValue;\n\t\t}\n\t}\n}\n","import { Seconds, Ticks } from \"../type/Units\";\nimport { noOp } from \"../util/Interface\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\nexport interface TransportEventOptions {\n\tcallback: (time: number) => void;\n\tonce: boolean;\n\ttime: Ticks;\n}\n\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n\n\t/**\n\t * Reference to the Transport that created it\n\t */\n\tprotected transport: Transport;\n\n\t/**\n\t * The unique id of the event\n\t */\n\tid: number = TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t */\n\ttime: Ticks;\n\n\t/**\n\t * The callback to invoke\n\t */\n\tprivate callback?: (time: Seconds) => void;\n\n\t/**\n\t * If the event should be removed after being invoked.\n\t */\n\tprivate _once: boolean;\n\n\t/**\n\t * The remaining value between the passed in time, and Math.floor(time).\n\t * This value is later added back when scheduling to get sub-tick precision. \n\t */\n\tprotected _remainderTime = 0;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportEventOptions>) {\n\n\t\tconst options: TransportEventOptions = Object.assign(TransportEvent.getDefaults(), opts);\n\n\t\tthis.transport = transport;\n\t\tthis.callback = options.callback;\n\t\tthis._once = options.once;\n\t\tthis.time = Math.floor(options.time);\n\t\tthis._remainderTime = options.time - this.time;\n\t}\n\n\tstatic getDefaults(): TransportEventOptions {\n\t\treturn {\n\t\t\tcallback: noOp,\n\t\t\tonce: false,\n\t\t\ttime: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Current ID counter\n\t */\n\tprivate static _eventId = 0;\n\n\t/**\n\t * Get the time and remainder time.\n\t */\n\tprotected get floatTime(): number {\n\t\treturn this.time + this._remainderTime;\n\t}\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\tif (this.callback) {\n\t\t\tconst tickDuration = this.transport.bpm.getDurationOfTicks(1, time);\n\t\t\tthis.callback(time + this._remainderTime * tickDuration);\n\t\t\tif (this._once) {\n\t\t\t\tthis.transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tthis.callback = undefined;\n\t\treturn this;\n\t}\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { TransportEvent, TransportEventOptions } from \"./TransportEvent\";\nimport { GT, LT } from \"../util/Math\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\ninterface TransportRepeatEventOptions extends TransportEventOptions {\n\tinterval: Ticks;\n\tduration: Ticks;\n}\n\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n\n\t/**\n\t * When the event should stop repeating\n\t */\n\tprivate duration: Ticks;\n\n\t/**\n\t * The interval of the repeated event\n\t */\n\tprivate _interval: Ticks;\n\n\t/**\n\t * The ID of the current timeline event\n\t */\n\tprivate _currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t */\n\tprivate _nextId = -1;\n\n\t/**\n\t * The time of the next event\n\t */\n\tprivate _nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t */\n\tprivate _boundRestart = this._restart.bind(this);\n\n\t/**\n\t * The audio context belonging to this event\n\t */\n\tprotected context: BaseContext;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportRepeatEventOptions>) {\n\n\t\tsuper(transport, opts);\n\n\t\tconst options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n\n\t\tthis.duration = options.duration;\n\t\tthis._interval = options.interval;\n\t\tthis._nextTick = options.time;\n\t\tthis.transport.on(\"start\", this._boundRestart);\n\t\tthis.transport.on(\"loopStart\", this._boundRestart);\n\t\tthis.transport.on(\"ticks\", this._boundRestart);\n\t\tthis.context = this.transport.context;\n\t\tthis._restart();\n\t}\n\n\tstatic getDefaults(): TransportRepeatEventOptions {\n\t\treturn Object.assign({}, TransportEvent.getDefaults(), {\n\t\t\tduration: Infinity,\n\t\t\tinterval: 1,\n\t\t\tonce: false,\n\t\t});\n\t}\n\n\t/**\n\t * Invoke the callback. Returns the tick time which\n\t * the next event should be scheduled at.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\t// create more events if necessary\n\t\tthis._createEvents(time);\n\t\t// call the super class\n\t\tsuper.invoke(time);\n\t}\n\n\t/**\n\t * Create an event on the transport on the nextTick\n\t */\n\tprivate _createEvent(): number {\n\t\tif (LT(this._nextTick, this.floatTime + this.duration)) {\n\t\t\treturn this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t */\n\tprivate _createEvents(time: Seconds): void {\n\t\t// schedule the next event\n\t\t// const ticks = this.transport.getTicksAtTime(time);\n\t\t// if the next tick is within the bounds set by \"duration\"\n\t\tif (LT(this._nextTick + this._interval, this.floatTime + this.duration)) {\n\t\t\tthis._nextTick += this._interval;\n\t\t\tthis._currentId = this._nextId;\n\t\t\tthis._nextId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\t}\n\t}\n\n\t/**\n\t * Re-compute the events when the transport time has changed from a start/ticks/loopStart event\n\t */\n\tprivate _restart(time?: Time): void {\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\t// start at the first event\n\t\tthis._nextTick = this.floatTime;\n\t\tconst ticks = this.transport.getTicksAtTime(time);\n\t\tif (GT(ticks, this.time)) {\n\t\t\t// the event is not being scheduled from the beginning and should be offset\n\t\t\tthis._nextTick = this.floatTime + Math.ceil((ticks - this.floatTime) / this._interval) * this._interval;\n\t\t}\n\t\tthis._currentId = this._createEvent();\n\t\tthis._nextTick += this._interval;\n\t\tthis._nextId = this._createEvent();\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\tthis.transport.off(\"start\", this._boundRestart);\n\t\tthis.transport.off(\"loopStart\", this._boundRestart);\n\t\tthis.transport.off(\"ticks\", this._boundRestart);\n\t\treturn this;\n\t}\n}\n","import { TimeClass } from \"../../core/type/Time\";\nimport { PlaybackState } from \"../../core/util/StateTimeline\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { Signal } from \"../../signal/Signal\";\nimport {\n\tonContextClose,\n\tonContextInit,\n} from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport {\n\tToneWithContext,\n\tToneWithContextOptions,\n} from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport {\n\tBarsBeatsSixteenths,\n\tBPM,\n\tNormalRange,\n\tSeconds,\n\tSubdivision,\n\tTicks,\n\tTime,\n\tTimeSignature,\n\tTransportTime,\n} from \"../type/Units\";\nimport { enterScheduledCallback } from \"../util/Debug\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TickParam } from \"./TickParam\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n\ninterface TransportOptions extends ToneWithContextOptions {\n\tbpm: BPM;\n\tswing: NormalRange;\n\tswingSubdivision: Subdivision;\n\ttimeSignature: number;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tppq: number;\n}\n\ntype TransportEventNames =\n\t| \"start\"\n\t| \"stop\"\n\t| \"pause\"\n\t| \"loop\"\n\t| \"loopEnd\"\n\t| \"loopStart\"\n\t| \"ticks\";\n\ninterface SyncedSignalEvent {\n\tsignal: Signal;\n\tinitial: number;\n\tratio: Gain;\n}\n\ntype TransportCallback = (time: Seconds) => void;\n\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport\n\textends ToneWithContext<TransportOptions>\n\timplements Emitter<TransportEventNames> {\n\treadonly name: string = \"Transport\";\n\n\t//-------------------------------------\n\t// \tLOOPING\n\t//-------------------------------------\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tprivate _loop: TimelineValue<boolean> = new TimelineValue(false);\n\n\t/**\n\t * The loop start position in ticks\n\t */\n\tprivate _loopStart: Ticks = 0;\n\n\t/**\n\t * The loop end position in ticks\n\t */\n\tprivate _loopEnd: Ticks = 0;\n\n\t//-------------------------------------\n\t// \tCLOCK/TEMPO\n\t//-------------------------------------\n\n\t/**\n\t * Pulses per quarter is the number of ticks per quarter note.\n\t */\n\tprivate _ppq: number;\n\n\t/**\n\t * watches the main oscillator for timing ticks\n\t * initially starts at 120bpm\n\t */\n\tprivate _clock: Clock<\"bpm\">;\n\n\t/**\n\t * The Beats Per Minute of the Transport.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * Tone.Transport.bpm.value = 80;\n\t * // start/stop the oscillator every quarter note\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"4n\");\n\t * Tone.Transport.start();\n\t * // ramp the bpm to 120 over 10 seconds\n\t * Tone.Transport.bpm.rampTo(120, 10);\n\t */\n\tbpm: TickParam<\"bpm\">;\n\n\t/**\n\t * The time signature, or more accurately the numerator\n\t * of the time signature over a denominator of 4.\n\t */\n\tprivate _timeSignature: number;\n\n\t//-------------------------------------\n\t// \tTIMELINE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * All the events in an object to keep track by ID\n\t */\n\tprivate _scheduledEvents = {};\n\n\t/**\n\t * The scheduled events.\n\t */\n\tprivate _timeline: Timeline<TransportEvent> = new Timeline();\n\n\t/**\n\t * Repeated events\n\t */\n\tprivate _repeatedEvents: IntervalTimeline = new IntervalTimeline();\n\n\t/**\n\t * All of the synced Signals\n\t */\n\tprivate _syncedSignals: SyncedSignalEvent[] = [];\n\n\t//-------------------------------------\n\t// \tSWING\n\t//-------------------------------------\n\n\t/**\n\t * The subdivision of the swing\n\t */\n\tprivate _swingTicks: Ticks;\n\n\t/**\n\t * The swing amount\n\t */\n\tprivate _swingAmount: NormalRange = 0;\n\n\tconstructor(options?: Partial<TransportOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Transport.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(\n\t\t\tTransport.getDefaults(),\n\t\t\targuments\n\t\t);\n\n\t\t// CLOCK/TEMPO\n\t\tthis._ppq = options.ppq;\n\t\tthis._clock = new Clock({\n\t\t\tcallback: this._processTick.bind(this),\n\t\t\tcontext: this.context,\n\t\t\tfrequency: 0,\n\t\t\tunits: \"bpm\",\n\t\t});\n\t\tthis._bindClockEvents();\n\t\tthis.bpm = this._clock.frequency as unknown as TickParam<\"bpm\">;\n\t\tthis._clock.frequency.multiplier = options.ppq;\n\t\tthis.bpm.setValueAtTime(options.bpm, 0);\n\t\treadOnly(this, \"bpm\");\n\t\tthis._timeSignature = options.timeSignature;\n\n\t\t// SWING\n\t\tthis._swingTicks = options.ppq / 2; // 8n\n\t}\n\n\tstatic getDefaults(): TransportOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tbpm: 120,\n\t\t\tloopEnd: \"4m\" as Subdivision,\n\t\t\tloopStart: 0,\n\t\t\tppq: 192,\n\t\t\tswing: 0,\n\t\t\tswingSubdivision: \"8n\" as Subdivision,\n\t\t\ttimeSignature: 4,\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tTICKS\n\t//-------------------------------------\n\n\t/**\n\t * called on every tick\n\t * @param  tickTime clock relative tick time\n\t */\n\tprivate _processTick(tickTime: Seconds, ticks: Ticks): void {\n\t\t// do the loop test\n\t\tif (this._loop.get(tickTime)) {\n\t\t\tif (ticks >= this._loopEnd) {\n\t\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\t\tticks = this._loopStart;\n\t\t\t\tthis.emit(\n\t\t\t\t\t\"loopStart\",\n\t\t\t\t\ttickTime,\n\t\t\t\t\tthis._clock.getSecondsAtTime(tickTime)\n\t\t\t\t);\n\t\t\t\tthis.emit(\"loop\", tickTime);\n\t\t\t}\n\t\t}\n\t\t// handle swing\n\t\tif (\n\t\t\tthis._swingAmount > 0 &&\n\t\t\tticks % this._ppq !== 0 && // not on a downbeat\n\t\t\tticks % (this._swingTicks * 2) !== 0\n\t\t) {\n\t\t\t// add some swing\n\t\t\tconst progress =\n\t\t\t\t(ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\t\tconst amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t\t\ttickTime +=\n\t\t\t\tnew TicksClass(\n\t\t\t\t\tthis.context,\n\t\t\t\t\t(this._swingTicks * 2) / 3\n\t\t\t\t).toSeconds() * amount;\n\t\t}\n\t\t// invoke the timeline events scheduled on this tick\n\t\tenterScheduledCallback(true);\n\t\tthis._timeline.forEachAtTime(ticks, (event) => event.invoke(tickTime));\n\t\tenterScheduledCallback(false);\n\t}\n\n\t//-------------------------------------\n\t// \tSCHEDULABLE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * Schedule an event along the timeline.\n\t * @param callback The callback to be invoked at the time.\n\t * @param time The time to invoke the callback at.\n\t * @return The id of the event which can be used for canceling the event.\n\t * @example\n\t * // schedule an event on the 16th measure\n\t * Tone.Transport.schedule((time) => {\n\t * \t// invoked on measure 16\n\t * \tconsole.log(\"measure 16!\");\n\t * }, \"16:0:0\");\n\t */\n\tschedule(\n\t\tcallback: TransportCallback,\n\t\ttime: TransportTime | TransportTimeClass\n\t): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Schedule a repeated event along the timeline. The event will fire\n\t * at the `interval` starting at the `startTime` and for the specified\n\t * `duration`.\n\t * @param  callback   The callback to invoke.\n\t * @param  interval   The duration between successive callbacks. Must be a positive number.\n\t * @param  startTime  When along the timeline the events should start being invoked.\n\t * @param  duration How long the event should repeat.\n\t * @return  The ID of the scheduled event. Use this to cancel the event.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // a callback invoked every eighth note after the first measure\n\t * Tone.Transport.scheduleRepeat((time) => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"8n\", \"1m\");\n\t */\n\tscheduleRepeat(\n\t\tcallback: TransportCallback,\n\t\tinterval: Time | TimeClass,\n\t\tstartTime?: TransportTime | TransportTimeClass,\n\t\tduration: Time = Infinity\n\t): number {\n\t\tconst event = new TransportRepeatEvent(this, {\n\t\t\tcallback,\n\t\t\tduration: new TimeClass(this.context, duration).toTicks(),\n\t\t\tinterval: new TimeClass(this.context, interval).toTicks(),\n\t\t\ttime: new TransportTimeClass(this.context, startTime).toTicks(),\n\t\t});\n\t\t// kick it off if the Transport is started\n\t\t// @ts-ignore\n\t\treturn this._addEvent(event, this._repeatedEvents);\n\t}\n\n\t/**\n\t * Schedule an event that will be removed after it is invoked.\n\t * @param callback The callback to invoke once.\n\t * @param time The time the callback should be invoked.\n\t * @returns The ID of the scheduled event.\n\t */\n\tscheduleOnce(\n\t\tcallback: TransportCallback,\n\t\ttime: TransportTime | TransportTimeClass\n\t): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\tonce: true,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Clear the passed in event id from the timeline\n\t * @param eventId The id of the event.\n\t */\n\tclear(eventId: number): this {\n\t\tif (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t\tconst item = this._scheduledEvents[eventId.toString()];\n\t\t\titem.timeline.remove(item.event);\n\t\t\titem.event.dispose();\n\t\t\tdelete this._scheduledEvents[eventId.toString()];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add an event to the correct timeline. Keep track of the\n\t * timeline it was added to.\n\t * @returns the event id which was just added\n\t */\n\tprivate _addEvent(event: TransportEvent, timeline: Timeline<TransportEvent>): number {\n\t\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\tevent,\n\t\t\ttimeline,\n\t\t};\n\t\ttimeline.add(event);\n\t\treturn event.id;\n\t}\n\n\t/**\n\t * Remove scheduled events from the timeline after\n\t * the given time. Repeated events will be removed\n\t * if their startTime is after the given time\n\t * @param after Clear all events after this time.\n\t */\n\tcancel(after: TransportTime = 0): this {\n\t\tconst computedAfter = this.toTicks(after);\n\t\tthis._timeline.forEachFrom(computedAfter, (event) =>\n\t\t\tthis.clear(event.id)\n\t\t);\n\t\tthis._repeatedEvents.forEachFrom(computedAfter, (event) =>\n\t\t\tthis.clear(event.id)\n\t\t);\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSTART/STOP/PAUSE\n\t//-------------------------------------\n\n\t/**\n\t * Bind start/stop/pause events from the clock and emit them.\n\t */\n\tprivate _bindClockEvents(): void {\n\t\tthis._clock.on(\"start\", (time, offset) => {\n\t\t\toffset = new TicksClass(this.context, offset).toSeconds();\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t});\n\n\t\tthis._clock.on(\"stop\", (time) => {\n\t\t\tthis.emit(\"stop\", time);\n\t\t});\n\n\t\tthis._clock.on(\"pause\", (time) => {\n\t\t\tthis.emit(\"pause\", time);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the transport and all sources synced to the transport.\n\t * @param  time The time when the transport should start.\n\t * @param  offset The timeline offset to start the transport.\n\t * @example\n\t * // start the transport in one second starting at beginning of the 5th measure.\n\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t */\n\tstart(time?: Time, offset?: TransportTime): this {\n\t\t// start the context\n\t\tthis.context.resume();\n\t\tlet offsetTicks;\n\t\tif (isDefined(offset)) {\n\t\t\toffsetTicks = this.toTicks(offset);\n\t\t}\n\t\t// start the clock\n\t\tthis._clock.start(time, offsetTicks);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the transport and all sources synced to the transport.\n\t * @param time The time when the transport should stop.\n\t * @example\n\t * Tone.Transport.stop();\n\t */\n\tstop(time?: Time): this {\n\t\tthis._clock.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the transport and all sources synced to the transport.\n\t */\n\tpause(time?: Time): this {\n\t\tthis._clock.pause(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Toggle the current state of the transport. If it is\n\t * started, it will stop it, otherwise it will start the Transport.\n\t * @param  time The time of the event\n\t */\n\ttoggle(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._clock.getStateAtTime(time) !== \"started\") {\n\t\t\tthis.start(time);\n\t\t} else {\n\t\t\tthis.stop(time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSETTERS/GETTERS\n\t//-------------------------------------\n\n\t/**\n\t * The time signature as just the numerator over 4.\n\t * For example 4/4 would be just 4 and 6/8 would be 3.\n\t * @example\n\t * // common time\n\t * Tone.Transport.timeSignature = 4;\n\t * // 7/8\n\t * Tone.Transport.timeSignature = [7, 8];\n\t * // this will be reduced to a single number\n\t * Tone.Transport.timeSignature; // returns 3.5\n\t */\n\tget timeSignature(): TimeSignature {\n\t\treturn this._timeSignature;\n\t}\n\tset timeSignature(timeSig: TimeSignature) {\n\t\tif (isArray(timeSig)) {\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the starting position of the loop.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n\t}\n\tset loopStart(startPosition: Time) {\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the ending position of the loop.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n\t}\n\tset loopEnd(endPosition: Time) {\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop.get(this.now());\n\t}\n\tset loop(loop) {\n\t\tthis._loop.set(loop, this.now());\n\t}\n\n\t/**\n\t * Set the loop start and stop at the same time.\n\t * @example\n\t * // loop over the first measure\n\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t * Tone.Transport.loop = true;\n\t */\n\tsetLoopPoints(\n\t\tstartPosition: TransportTime,\n\t\tendPosition: TransportTime\n\t): this {\n\t\tthis.loopStart = startPosition;\n\t\tthis.loopEnd = endPosition;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n\t */\n\tget swing(): NormalRange {\n\t\treturn this._swingAmount;\n\t}\n\tset swing(amount: NormalRange) {\n\t\t// scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n\n\t/**\n\t * Set the subdivision which the swing will be applied to.\n\t * The default value is an 8th note. Value must be less\n\t * than a quarter note.\n\t */\n\tget swingSubdivision(): Subdivision {\n\t\treturn new TicksClass(this.context, this._swingTicks).toNotation();\n\t}\n\tset swingSubdivision(subdivision: Subdivision) {\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n\n\t/**\n\t * The Transport's position in Bars:Beats:Sixteenths.\n\t * Setting the value will jump to that position right away.\n\t */\n\tget position(): BarsBeatsSixteenths | Time {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\treturn new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n\t}\n\tset position(progress: Time) {\n\t\tconst ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's position in seconds\n\t * Setting the value will jump to that position right away.\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._clock.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.frequency.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's loop position as a normalized value. Always\n\t * returns 0 if the transport if loop is not true.\n\t */\n\tget progress(): NormalRange {\n\t\tif (this.loop) {\n\t\t\tconst now = this.now();\n\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (\n\t\t\t\t(ticks - this._loopStart) / (this._loopEnd - this._loopStart)\n\t\t\t);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The transports current tick position.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this._clock.ticks;\n\t}\n\tset ticks(t: Ticks) {\n\t\tif (this._clock.ticks !== t) {\n\t\t\tconst now = this.now();\n\t\t\t// stop everything synced to the transport\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\t\t// schedule to start on the next tick, #573\n\t\t\t\tconst remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);\n\t\t\t\tconst time = now + remainingTick;\n\t\t\t\tthis.emit(\"stop\", time);\n\t\t\t\tthis._clock.setTicksAtTime(t, time);\n\t\t\t\t// restart it with the new time\n\t\t\t\tthis.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n\t\t\t} else {\n\t\t\t\tthis.emit(\"ticks\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn this._clock.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._clock.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Pulses Per Quarter note. This is the smallest resolution\n\t * the Transport timing supports. This should be set once\n\t * on initialization and not set again. Changing this value\n\t * after other objects have been created can cause problems.\n\t */\n\tget PPQ(): number {\n\t\treturn this._clock.frequency.multiplier;\n\t}\n\tset PPQ(ppq: number) {\n\t\tthis._clock.frequency.multiplier = ppq;\n\t}\n\n\t//-------------------------------------\n\t// \tSYNCING\n\t//-------------------------------------\n\n\t/**\n\t * Returns the time aligned to the next subdivision\n\t * of the Transport. If the Transport is not started,\n\t * it will return 0.\n\t * Note: this will not work precisely during tempo ramps.\n\t * @param  subdivision  The subdivision to quantize to\n\t * @return  The context time of the next subdivision.\n\t * @example\n\t * // the transport must be started, otherwise returns 0\n\t * Tone.Transport.start();\n\t * Tone.Transport.nextSubdivision(\"4n\");\n\t */\n\tnextSubdivision(subdivision?: Time): Seconds {\n\t\tsubdivision = this.toTicks(subdivision);\n\t\tif (this.state !== \"started\") {\n\t\t\t// if the transport's not started, return 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tconst now = this.now();\n\t\t\t// the remainder of the current ticks and the subdivision\n\t\t\tconst transportPos = this.getTicksAtTime(now);\n\t\t\tconst remainingTicks = subdivision - (transportPos % subdivision);\n\t\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t\t}\n\t}\n\n\t/**\n\t * Attaches the signal to the tempo control signal so that\n\t * any changes in the tempo will change the signal in the same\n\t * ratio.\n\t *\n\t * @param signal\n\t * @param ratio Optionally pass in the ratio between the two signals.\n\t * \t\t\tOtherwise it will be computed based on their current values.\n\t */\n\tsyncSignal(signal: Signal<any>, ratio?: number): this {\n\t\tif (!ratio) {\n\t\t\t// get the sync ratio\n\t\t\tconst now = this.now();\n\t\t\tif (signal.getValueAtTime(now) !== 0) {\n\t\t\t\tconst bpm = this.bpm.getValueAtTime(now);\n\t\t\t\tconst computedFreq = 1 / (60 / bpm / this.PPQ);\n\t\t\t\tratio = signal.getValueAtTime(now) / computedFreq;\n\t\t\t} else {\n\t\t\t\tratio = 0;\n\t\t\t}\n\t\t}\n\t\tconst ratioSignal = new Gain(ratio);\n\t\t// @ts-ignore\n\t\tthis.bpm.connect(ratioSignal);\n\t\t// @ts-ignore\n\t\tratioSignal.connect(signal._param);\n\t\tthis._syncedSignals.push({\n\t\t\tinitial: signal.value,\n\t\t\tratio: ratioSignal,\n\t\t\tsignal,\n\t\t});\n\t\tsignal.value = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsyncs a previously synced signal from the transport's control.\n\t * See Transport.syncSignal.\n\t */\n\tunsyncSignal(signal: Signal<any>): this {\n\t\tfor (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t\tconst syncedSignal = this._syncedSignals[i];\n\t\t\tif (syncedSignal.signal === signal) {\n\t\t\t\tsyncedSignal.ratio.dispose();\n\t\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._clock.dispose();\n\t\twritable(this, \"bpm\");\n\t\tthis._timeline.dispose();\n\t\tthis._repeatedEvents.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (\n\t\tevent: TransportEventNames,\n\t\tcallback: (...args: any[]) => void\n\t) => this;\n\tonce!: (\n\t\tevent: TransportEventNames,\n\t\tcallback: (...args: any[]) => void\n\t) => this;\n\toff!: (\n\t\tevent: TransportEventNames,\n\t\tcallback?: ((...args: any[]) => void) | undefined\n\t) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Transport);\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit((context) => {\n\tcontext.transport = new Transport({ context });\n});\n\nonContextClose((context) => {\n\tcontext.transport.dispose();\n});\n","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { Param } from \"../core/context/Param\";\nimport {\n\tOutputNode,\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport { Decibels, Seconds, Time } from \"../core/type/Units\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport {\n\tBasicPlaybackState,\n\tStateTimeline,\n\tStateTimelineEvent,\n} from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n\ntype onStopCallback = (source: Source<any>) => void;\n\nexport interface SourceOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n\tonstop: onStopCallback;\n}\n\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport abstract class Source<\n\tOptions extends SourceOptions\n> extends ToneAudioNode<Options> {\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The output note\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * Sources have no inputs\n\t */\n\tinput = undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const source = new Tone.PWMOscillator().toDestination();\n\t * source.volume.value = -6;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * The callback to invoke when the source is stopped.\n\t */\n\tonstop: onStopCallback;\n\n\t/**\n\t * Keep track of the scheduled state.\n\t */\n\tprotected _state: StateTimeline<{\n\t\tduration?: Seconds;\n\t\toffset?: Seconds;\n\t\t/**\n\t\t * Either the buffer is explicitly scheduled to end using the stop method,\n\t\t * or it's implicitly ended when the buffer is over.\n\t\t */\n\t\timplicitEnd?: boolean;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The synced `start` callback function from the transport\n\t */\n\tprotected _synced = false;\n\n\t/**\n\t * Keep track of all of the scheduled event ids\n\t */\n\tprivate _scheduled: number[] = [];\n\n\t/**\n\t * Placeholder functions for syncing/unsyncing to transport\n\t */\n\tprivate _syncedStart: (time: Seconds, offset: Seconds) => void = noOp;\n\tprivate _syncedStop: (time: Seconds) => void = noOp;\n\n\tconstructor(options: SourceOptions) {\n\t\tsuper(options);\n\t\tthis._state.memory = 100;\n\t\tthis._state.increasing = true;\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tmute: options.mute,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis.onstop = options.onstop;\n\t}\n\n\tstatic getDefaults(): SourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tonstop: noOp,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n\t * \tplayer.start();\n\t * \tconsole.log(player.state);\n\t * }).toDestination();\n\t */\n\tget state(): BasicPlaybackState {\n\t\tif (this._synced) {\n\t\t\tif (this.context.transport.state === \"started\") {\n\t\t\t\treturn this._state.getValueAtTime(\n\t\t\t\t\tthis.context.transport.seconds\n\t\t\t\t) as BasicPlaybackState;\n\t\t\t} else {\n\t\t\t\treturn \"stopped\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now()) as BasicPlaybackState;\n\t\t}\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // mute the output\n\t * osc.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t// overwrite these functions\n\tprotected abstract _start(time: Time, offset?: Time, duration?: Time): void;\n\tprotected abstract _stop(time: Time): void;\n\tprotected abstract _restart(\n\t\ttime: Seconds,\n\t\toffset?: Time,\n\t\tduration?: Time\n\t): void;\n\n\t/**\n\t * Ensure that the scheduled time is not before the current time.\n\t * Should only be used when scheduled unsynced.\n\t */\n\tprivate _clampToCurrentTime(time: Seconds): Seconds {\n\t\tif (this._synced) {\n\t\t\treturn time;\n\t\t} else {\n\t\t\treturn Math.max(time, this.context.currentTime);\n\t\t}\n\t}\n\n\t/**\n\t * Start the source at the specified time. If no time is given,\n\t * start the source now.\n\t * @param  time When the source should be started.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tlet computedTime =\n\t\t\tisUndef(time) && this._synced\n\t\t\t\t? this.context.transport.seconds\n\t\t\t\t: this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\t// if it's started, stop it and restart it\n\t\tif (\n\t\t\t!this._synced &&\n\t\t\tthis._state.getValueAtTime(computedTime) === \"started\"\n\t\t) {\n\t\t\t// time should be strictly greater than the previous start time\n\t\t\tassert(\n\t\t\t\tGT(\n\t\t\t\t\tcomputedTime,\n\t\t\t\t\t(this._state.get(computedTime) as StateTimelineEvent).time\n\t\t\t\t),\n\t\t\t\t\"Start time must be strictly greater than previous start time\"\n\t\t\t);\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis.log(\"restart\", computedTime);\n\t\t\tthis.restart(computedTime, offset, duration);\n\t\t} else {\n\t\t\tthis.log(\"start\", computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (this._synced) {\n\t\t\t\t// add the offset time to the event\n\t\t\t\tconst event = this._state.get(computedTime);\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.offset = this.toSeconds(defaultArg(offset, 0));\n\t\t\t\t\tevent.duration = duration\n\t\t\t\t\t\t? this.toSeconds(duration)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t}\n\t\t\t\tconst sched = this.context.transport.schedule((t) => {\n\t\t\t\t\tthis._start(t, offset, duration);\n\t\t\t\t}, computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\n\t\t\t\t// if the transport is already started\n\t\t\t\t// and the time is greater than where the transport is\n\t\t\t\tif (\n\t\t\t\t\tthis.context.transport.state === \"started\" &&\n\t\t\t\t\tthis.context.transport.getSecondsAtTime(this.immediate()) >\n\t\t\t\t\t\tcomputedTime\n\t\t\t\t) {\n\t\t\t\t\tthis._syncedStart(\n\t\t\t\t\t\tthis.now(),\n\t\t\t\t\t\tthis.context.transport.seconds\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tassertContextRunning(this.context);\n\t\t\t\tthis._start(computedTime, offset, duration);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the specified time. If no time is given,\n\t * stop the source now.\n\t * @param  time When the source should be stopped.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start();\n\t * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n\t */\n\tstop(time?: Time): this {\n\t\tlet computedTime =\n\t\t\tisUndef(time) && this._synced\n\t\t\t\t? this.context.transport.seconds\n\t\t\t\t: this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\tif (\n\t\t\tthis._state.getValueAtTime(computedTime) === \"started\" ||\n\t\t\tisDefined(this._state.getNextState(\"started\", computedTime))\n\t\t) {\n\t\t\tthis.log(\"stop\", computedTime);\n\t\t\tif (!this._synced) {\n\t\t\t\tthis._stop(computedTime);\n\t\t\t} else {\n\t\t\t\tconst sched = this.context.transport.schedule(\n\t\t\t\t\tthis._stop.bind(this),\n\t\t\t\t\tcomputedTime\n\t\t\t\t);\n\t\t\t\tthis._scheduled.push(sched);\n\t\t\t}\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restart the source.\n\t */\n\trestart(time?: Time, offset?: Time, duration?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === \"started\") {\n\t\t\tthis._state.cancel(time);\n\t\t\tthis._restart(time, offset, duration);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the source to the Transport so that all subsequent\n\t * calls to `start` and `stop` are synced to the TransportTime\n\t * instead of the AudioContext time.\n\t *\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t * osc.sync().start(0).stop(0.3);\n\t * // start the transport.\n\t * Tone.Transport.start();\n\t * // set it to loop once a second\n\t * Tone.Transport.loop = true;\n\t * Tone.Transport.loopEnd = 1;\n\t */\n\tsync(): this {\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tthis._syncedStart = (time, offset) => {\n\t\t\t\tif (GT(offset, 0)) {\n\t\t\t\t\t// get the playback state at that time\n\t\t\t\t\tconst stateEvent = this._state.get(offset);\n\t\t\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\t\t\tif (\n\t\t\t\t\t\tstateEvent &&\n\t\t\t\t\t\tstateEvent.state === \"started\" &&\n\t\t\t\t\t\tstateEvent.time !== offset\n\t\t\t\t\t) {\n\t\t\t\t\t\t// get the offset\n\t\t\t\t\t\tconst startOffset =\n\t\t\t\t\t\t\toffset - this.toSeconds(stateEvent.time);\n\t\t\t\t\t\tlet duration: number | undefined;\n\t\t\t\t\t\tif (stateEvent.duration) {\n\t\t\t\t\t\t\tduration =\n\t\t\t\t\t\t\t\tthis.toSeconds(stateEvent.duration) -\n\t\t\t\t\t\t\t\tstartOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._start(\n\t\t\t\t\t\t\ttime,\n\t\t\t\t\t\t\tthis.toSeconds(stateEvent.offset) + startOffset,\n\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._syncedStop = (time) => {\n\t\t\t\tconst seconds = this.context.transport.getSecondsAtTime(\n\t\t\t\t\tMath.max(time - this.sampleTime, 0)\n\t\t\t\t);\n\t\t\t\tif (this._state.getValueAtTime(seconds) === \"started\") {\n\t\t\t\t\tthis._stop(time);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.context.transport.on(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"loopStart\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"loopEnd\", this._syncedStop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the source to the Transport. See Source.sync\n\t */\n\tunsync(): this {\n\t\tif (this._synced) {\n\t\t\tthis.context.transport.off(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"loopEnd\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.off(\"loopStart\", this._syncedStart);\n\t\t}\n\t\tthis._synced = false;\n\t\t// clear all of the scheduled ids\n\t\tthis._scheduled.forEach((id) => this.context.transport.clear(id));\n\t\tthis._scheduled = [];\n\t\tthis._state.cancel(0);\n\t\t// stop it also\n\t\tthis._stop(0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.onstop = noOp;\n\t\tthis.unsync();\n\t\tthis._volume.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { GainFactor, Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource, OneShotSourceCurve, OneShotSourceOptions } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n\nexport type ToneBufferSourceCurve = OneShotSourceCurve;\n\nexport interface ToneBufferSourceOptions extends OneShotSourceOptions {\n\turl: string | AudioBuffer | ToneAudioBuffer;\n\tcurve: ToneBufferSourceCurve;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tloop: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource<ToneBufferSourceOptions> {\n\n\treadonly name: string = \"ToneBufferSource\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _source = this.context.createBufferSource();\n\tprotected _internalChannels = [this._source];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly playbackRate: Param<\"positive\">;\n\n\t/**\n\t * The private instance of the buffer object\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * indicators if the source has started/stopped\n\t */\n\tprivate _sourceStarted = false;\n\tprivate _sourceStopped = false;\n\n\t/**\n\t * @param url The buffer to play or url to load\n\t * @param onload The callback to invoke when the buffer is done playing.\n\t */\n\tconstructor(url?: ToneAudioBuffer | AudioBuffer | string, onload?: () => void);\n\tconstructor(options?: Partial<ToneBufferSourceOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\t\tthis._source.onended = () => this._stopSource();\n\n\t\t/**\n\t\t * The playbackRate of the buffer\n\t\t */\n\t\tthis.playbackRate = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._source.playbackRate,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.playbackRate,\n\t\t});\n\n\t\t// set some values initially\n\t\tthis.loop = options.loop;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n\n\t\tthis._internalChannels.push(this._source);\n\t}\n\n\tstatic getDefaults(): ToneBufferSourceOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\turl: new ToneAudioBuffer(),\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(t: Time) {\n\t\tthis._fadeIn = t;\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(t: Time) {\n\t\tthis._fadeOut = t;\n\t}\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tget curve(): ToneBufferSourceCurve {\n\t\treturn this._curve;\n\t}\n\tset curve(t) {\n\t\tthis._curve = t;\n\t}\n\n\t/**\n\t * Start the buffer\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t * @param  gain  The gain to play the buffer back at.\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time, gain: GainFactor = 1): this {\n\t\tassert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\t\tconst computedTime = this.toSeconds(time);\n\n\t\t// apply the gain envelope\n\t\tthis._startGain(computedTime, gain);\n\n\t\t// if it's a loop the default offset is the loopstart point\n\t\tif (this.loop) {\n\t\t\toffset = defaultArg(offset, this.loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\t\t// make sure the offset is not less than 0\n\t\tlet computedOffset = Math.max(this.toSeconds(offset), 0);\n\n\t\t// start the buffer source\n\t\tif (this.loop) {\n\t\t\t// modify the offset if it's greater than the loop time\n\t\t\tconst loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\t\tconst loopStart = this.toSeconds(this.loopStart);\n\t\t\tconst loopDuration = loopEnd - loopStart;\n\t\t\t// move the offset back\n\t\t\tif (GTE(computedOffset, loopEnd)) {\n\t\t\t\tcomputedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n\t\t\t}\n\t\t\t// when the offset is very close to the duration, set it to 0\n\t\t\tif (EQ(computedOffset, this.buffer.duration)) {\n\t\t\t\tcomputedOffset = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// this.buffer.loaded would have return false if the AudioBuffer was undefined\n\t\tthis._source.buffer = this.buffer.get() as AudioBuffer;\n\t\tthis._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\tif (LT(computedOffset, this.buffer.duration)) {\n\t\t\tthis._sourceStarted = true;\n\t\t\tthis._source.start(computedTime, computedOffset);\n\t\t}\n\n\t\t// if a duration is given, schedule a stop\n\t\tif (isDefined(duration)) {\n\t\t\tlet computedDur = this.toSeconds(duration);\n\t\t\t// make sure it's never negative\n\t\t\tcomputedDur = Math.max(computedDur, 0);\n\t\t\tthis.stop(computedTime + computedDur);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tif (!this._sourceStopped && this._sourceStarted) {\n\t\t\tthis._sourceStopped = true;\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._onended();\n\t\t}\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._source.loopStart;\n\t}\n\tset loopStart(loopStart: Time) {\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._source.loopEnd;\n\t}\n\tset loopEnd(loopEnd: Time) {\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer: ToneAudioBuffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t */\n\tget loop(): boolean {\n\t\treturn this._source.loop;\n\t}\n\tset loop(loop: boolean) {\n\t\tthis._source.loop = loop;\n\t\tif (this._sourceStarted) {\n\t\t\tthis.cancelStop();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._buffer.dispose();\n\t\tthis.playbackRate.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { Positive, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source, SourceOptions } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n\nexport type NoiseType = \"white\" | \"brown\" | \"pink\";\n\nexport interface NoiseOptions extends SourceOptions {\n\ttype: NoiseType;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nexport class Noise extends Source<NoiseOptions> {\n\n\treadonly name: string = \"Noise\";\n\n\t/**\n\t * Private reference to the source\n\t */\n\tprivate _source: ToneBufferSource | null = null;\n\n\t/**\n\t * private reference to the type\n\t */\n\tprivate _type!: NoiseType;\n\n\t/**\n\t * The playback rate of the noise. Affects\n\t * the \"frequency\" of the noise.\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * @param type the noise type (white|pink|brown)\n\t */\n\tconstructor(type?: NoiseType);\n\tconstructor(options?: Partial<NoiseOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n\t\tconst options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.type = options.type;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): NoiseOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tplaybackRate: 1,\n\t\t\ttype: \"white\" as NoiseType,\n\t\t});\n\t}\n\n\t/**\n\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n\t * @example\n\t * const noise = new Tone.Noise().toDestination().start();\n\t * noise.type = \"brown\";\n\t */\n\tget type(): NoiseType {\n\t\treturn this._type;\n\t}\n\tset type(type: NoiseType) {\n\t\tassert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n\t\tif (this._type !== type) {\n\t\t\tthis._type = type;\n\t\t\t// if it's playing, stop and restart it\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst now = this.now();\n\t\t\t\tthis._stop(now);\n\t\t\t\tthis._start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The playback rate of the noise. Affects\n\t * the \"frequency\" of the noise.\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate: Positive) {\n\t\tthis._playbackRate = rate;\n\t\tif (this._source) {\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n\n\t/**\n\t * internal start method\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst buffer = _noiseBuffers[this._type];\n\t\tthis._source = new ToneBufferSource({\n\t\t\turl: buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this._fadeIn,\n\t\t\tfadeOut: this._fadeOut,\n\t\t\tloop: true,\n\t\t\tonended: () => this.onstop(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\t\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t}\n\n\t/**\n\t * internal stop method\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tif (this._source) {\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._source = null;\n\t\t}\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(time) {\n\t\tthis._fadeIn = time;\n\t\tif (this._source) {\n\t\t\tthis._source.fadeIn = this._fadeIn;\n\t\t}\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(time) {\n\t\tthis._fadeOut = time;\n\t\tif (this._source) {\n\t\t\tthis._source.fadeOut = this._fadeOut;\n\t\t}\n\t}\n\n\tprotected _restart(time?: Time): void {\n\t\t// TODO could be optimized by cancelling the buffer source 'stop'\n\t\tthis._stop(time);\n\t\tthis._start(time);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._source) {\n\t\t\tthis._source.disconnect();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n\n// Noise buffer stats\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\n\n/**\n * The cached noise buffers\n */\ninterface NoiseCache {\n\t[key: string]: ToneAudioBuffer | null;\n}\n\n/**\n * Cache the noise buffers\n */\nconst _noiseCache: NoiseCache = {\n\tbrown: null,\n\tpink: null,\n\twhite: null,\n};\n\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nconst _noiseBuffers = {\n\tget brown(): ToneAudioBuffer {\n\t\tif (!_noiseCache.brown) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tlet lastOut = 0.0;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tconst white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t},\n\n\tget pink(): ToneAudioBuffer {\n\t\tif (!_noiseCache.pink) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tlet b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tconst white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t},\n\n\tget white(): ToneAudioBuffer {\n\t\tif (!_noiseCache.white) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t},\n};\n","import { connect, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels } from \"../core/type/Units\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Param } from \"../core/context/Param\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n\nexport interface UserMediaOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input. \n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia().connect(meter);\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * \tconsole.log(\"mic open\");\n * \t// print the incoming mic levels in decibels\n * \tsetInterval(() => console.log(meter.getValue()), 100);\n * }).catch(e => {\n * \t// promise is rejected when the user doesn't have or allow mic access\n * \tconsole.log(\"mic not open\");\n * });\n * @category Source\n */\n\nexport class UserMedia extends ToneAudioNode<UserMediaOptions> {\n\n\treadonly name: string = \"UserMedia\";\n\n\treadonly input: undefined;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The MediaStreamNode\n\t */\n\tprivate _mediaStream?: MediaStreamAudioSourceNode;\n\n\t/**\n\t * The media stream created by getUserMedia.\n\t */\n\tprivate _stream?: MediaStream;\n\n\t/**\n\t * The open device\n\t */\n\tprivate _device?: MediaDeviceInfo;\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume of the output in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume The level of the input in decibels\n\t */\n\tconstructor(volume?: Decibels);\n\tconstructor(options?: Partial<UserMediaOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]));\n\t\tconst options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis.mute = options.mute;\n\t}\n\n\tstatic getDefaults(): UserMediaOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0\n\t\t});\n\t}\n\n\t/**\n\t * Open the media stream. If a string is passed in, it is assumed\n\t * to be the label or id of the stream, if a number is passed in,\n\t * it is the input number of the stream.\n\t * @param  labelOrId The label or id of the audio input media device.\n\t *                   With no argument, the default stream is opened.\n\t * @return The promise is resolved when the stream is open.\n\t */\n\tasync open(labelOrId?: string | number): Promise<this> {\n\t\tassert(UserMedia.supported, \"UserMedia is not supported\");\n\t\t// close the previous stream\n\t\tif (this.state === \"started\") {\n\t\t\tthis.close();\n\t\t}\n\t\tconst devices = await UserMedia.enumerateDevices();\n\t\tif (isNumber(labelOrId)) {\n\t\t\tthis._device = devices[labelOrId];\n\t\t} else {\n\t\t\tthis._device = devices.find((device) => {\n\t\t\t\treturn device.label === labelOrId || device.deviceId === labelOrId;\n\t\t\t});\n\t\t\t// didn't find a matching device\n\t\t\tif (!this._device && devices.length > 0) {\n\t\t\t\tthis._device = devices[0];\n\t\t\t}\n\t\t\tassert(isDefined(this._device), `No matching device ${labelOrId}`);\n\t\t}\n\t\t// do getUserMedia\n\t\tconst constraints = {\n\t\t\taudio: {\n\t\t\t\techoCancellation: false,\n\t\t\t\tsampleRate: this.context.sampleRate,\n\t\t\t\tnoiseSuppression: false,\n\t\t\t\tmozNoiseSuppression: false,\n\t\t\t}\n\t\t};\n\t\tif (this._device) {\n\t\t\t// @ts-ignore\n\t\t\tconstraints.audio.deviceId = this._device.deviceId;\n\t\t}\n\t\tconst stream = await navigator.mediaDevices.getUserMedia(constraints);\n\t\t// start a new source only if the previous one is closed\n\t\tif (!this._stream) {\n\t\t\tthis._stream = stream;\n\t\t\t// Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\tconst mediaStreamNode = this.context.createMediaStreamSource(stream);\n\t\t\t// Connect the MediaStreamSourceNode to a gate gain node\n\t\t\tconnect(mediaStreamNode, this.output);\n\t\t\tthis._mediaStream = mediaStreamNode;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Close the media stream\n\t */\n\tclose(): this {\n\t\tif (this._stream && this._mediaStream) {\n\t\t\tthis._stream.getAudioTracks().forEach((track) => {\n\t\t\t\ttrack.stop();\n\t\t\t});\n\t\t\tthis._stream = undefined;\n\t\t\t// remove the old media stream\n\t\t\tthis._mediaStream.disconnect();\n\t\t\tthis._mediaStream = undefined;\n\t\t}\n\t\tthis._device = undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a promise which resolves with the list of audio input devices available.\n\t * @return The promise that is resolved with the devices\n\t * @example\n\t * Tone.UserMedia.enumerateDevices().then((devices) => {\n\t * \t// print the device labels\n\t * \tconsole.log(devices.map(device => device.label));\n\t * });\n\t */\n\tstatic async enumerateDevices(): Promise<MediaDeviceInfo[]> {\n\t\tconst allDevices = await navigator.mediaDevices.enumerateDevices();\n\t\treturn allDevices.filter(device => {\n\t\t\treturn device.kind === \"audioinput\";\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, \"started\" when the microphone is open\n\t * and \"stopped\" when the mic is closed.\n\t */\n\tget state() {\n\t\treturn this._stream && this._stream.active ? \"started\" : \"stopped\";\n\t}\n\n\t/**\n\t * Returns an identifier for the represented device that is\n\t * persisted across sessions. It is un-guessable by other applications and\n\t * unique to the origin of the calling application. It is reset when the\n\t * user clears cookies (for Private Browsing, a different identifier is\n\t * used that is not persisted across sessions). Returns undefined when the\n\t * device is not open.\n\t */\n\tget deviceId(): string | undefined {\n\t\tif (this._device) {\n\t\t\treturn this._device.deviceId;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a group identifier. Two devices have the\n\t * same group identifier if they belong to the same physical device.\n\t * Returns null  when the device is not open.\n\t */\n\tget groupId(): string | undefined {\n\t\tif (this._device) {\n\t\t\treturn this._device.groupId;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a label describing this device (for example \"Built-in Microphone\").\n\t * Returns undefined when the device is not open or label is not available\n\t * because of permissions.\n\t */\n\tget label(): string | undefined {\n\t\tif (this._device) {\n\t\t\treturn this._device.label;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const mic = new Tone.UserMedia();\n\t * mic.open().then(() => {\n\t * \t// promise resolves when input is available\n\t * });\n\t * // mute the output\n\t * mic.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.close();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n\n\t/**\n\t * If getUserMedia is supported by the browser.\n\t */\n\tstatic get supported(): boolean {\n\t\treturn isDefined(navigator.mediaDevices) &&\n\t\t\tisDefined(navigator.mediaDevices.getUserMedia);\n\t}\n}\n","import { AudioRange, Cents, Degrees, Frequency, Positive } from \"../../core/type/Units\";\nimport { Omit } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { SourceOptions } from \"../Source\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n\n/**\n * The common interface of all Oscillators\n */\nexport interface ToneOscillatorInterface {\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * osc.type = \"sine2\";\n\t * console.log(osc.baseType); // \"sine\"\n\t */\n\tbaseType: OscillatorType | \"pulse\" | \"pwm\";\n\n\t/**\n\t * The oscillator's type. Also capable of setting the first x number of partials of the oscillator. \n\t * For example: \"sine4\" would set be the first 4 partials of the sine wave and \"triangle8\" would \n\t * set the first 8 partials of the triangle wave.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator().toDestination().start();\n\t * \tosc.type = \"sine2\";\n\t * }, 0.1, 1);\n\t */\n\ttype: ExtendedToneOscillatorType;\n\n\t/**\n\t * The frequency value of the oscillator\n\t * @example\n\t * const osc = new Tone.FMOscillator(\"Bb4\").toDestination().start();\n\t * osc.frequency.rampTo(\"D2\", 3);\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune value in cents (100th of a semitone).\n\t * @example\n\t * const osc = new Tone.PulseOscillator(\"F3\").toDestination().start();\n\t * // pitch it 1 octave = 12 semitones = 1200 cents\n\t * osc.detune.setValueAtTime(-1200, Tone.now());\n\t * osc.detune.setValueAtTime(1200, Tone.now() + 0.5);\n\t * osc.detune.linearRampToValueAtTime(0, Tone.now() + 1);\n\t * osc.stop(Tone.now() + 1.5);\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The phase is the starting position within the oscillator's cycle. For example\n\t * a phase of 180 would start halfway through the oscillator's cycle. \n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator({\n\t * \t\tfrequency: 20,\n\t * \t\tphase: 90\n\t * \t}).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\tphase: Degrees;\n\n\t/**\n\t * The partials describes the relative amplitude of each of the harmonics of the oscillator. \n\t * The first value in the array is the first harmonic (i.e. the fundamental frequency), the \n\t * second harmonic is an octave up, the third harmonic is an octave and a fifth, etc. The resulting\n\t * oscillator output is composed of a sine tone at the relative amplitude at each of the harmonic intervals. \n\t * \n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @example\n\t * const osc = new Tone.Oscillator(\"F3\").toDestination().start();\n\t * setInterval(() => {\n\t * \t// generate 8 random partials\n\t * \tosc.partials = new Array(8).fill(0).map(() => Math.random());\n\t * }, 1000);\n\t */\n\tpartials: number[];\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials.\n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is\n\t * not settable, but equals the length of the partials array. A square wave wave\n\t * is composed of only odd harmonics up through the harmonic series. Partial count\n\t * can limit the number of harmonics which are used to generate the waveform.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C3\", \"square\").toDestination().start();\n\t * osc.partialCount = 1;\n\t * setInterval(() => {\n\t * \tosc.partialCount++;\n\t * \tconsole.log(osc.partialCount);\n\t * }, 500);\n\t */\n\tpartialCount?: number;\n\n\t/**\n\t * Returns an array of values which represents the waveform.\n\t * @param length The length of the waveform to return\n\t */\n\tasArray(length: number): Promise<Float32Array>;\n}\n\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport async function generateWaveform(instance: any, length: number): Promise<Float32Array> {\n\tconst duration = length / instance.context.sampleRate;\n\tconst context = new OfflineContext(1, duration, instance.context.sampleRate);\n\tconst clone = new instance.constructor(Object.assign(instance.get(), {\n\t\t// should do 2 iterations\n\t\tfrequency: 2 / duration,\n\t\t// zero out the detune\n\t\tdetune: 0,\n\t\tcontext\n\t})).toDestination();\n\tclone.start(0);\n\tconst buffer = await context.render();\n\treturn buffer.getChannelData(0);\n}\n\n/**\n * Oscillators with partials\n */\ntype SineWithPartials =\n\t\"sine1\" | \"sine2\" | \"sine3\" | \"sine4\" | \"sine5\" | \"sine6\" | \"sine7\" | \"sine8\" | \"sine9\" |\n\t\"sine10\" | \"sine11\" | \"sine12\" | \"sine13\" | \"sine14\" | \"sine15\" | \"sine16\" | \"sine17\" | \"sine18\" | \"sine19\" |\n\t\"sine20\" | \"sine21\" | \"sine22\" | \"sine23\" | \"sine24\" | \"sine25\" | \"sine26\" | \"sine27\" | \"sine28\" | \"sine29\" |\n\t\"sine30\" | \"sine31\" | \"sine32\";\n\ntype SquareWithPartials =\n\t\"square1\" | \"square2\" | \"square3\" | \"square4\" | \"square5\" | \"square6\" | \"square7\" | \"square8\" | \"square9\" |\n\t\"square10\" | \"square11\" | \"square12\" | \"square13\" | \"square14\" | \"square15\" | \"square16\" | \"square17\" | \"square18\" | \"square19\" |\n\t\"square20\" | \"square21\" | \"square22\" | \"square23\" | \"square24\" | \"square25\" | \"square26\" | \"square27\" | \"square28\" | \"square29\" |\n\t\"square30\" | \"square31\" | \"square32\";\n\ntype SawtoothWithPartials =\n\t\"sawtooth1\" | \"sawtooth2\" | \"sawtooth3\" | \"sawtooth4\" | \"sawtooth5\" | \"sawtooth6\" | \"sawtooth7\" | \"sawtooth8\" | \"sawtooth9\" |\n\t\"sawtooth10\" | \"sawtooth11\" | \"sawtooth12\" | \"sawtooth13\" | \"sawtooth14\" | \"sawtooth15\" | \"sawtooth16\" | \"sawtooth17\" | \"sawtooth18\" | \"sawtooth19\" |\n\t\"sawtooth20\" | \"sawtooth21\" | \"sawtooth22\" | \"sawtooth23\" | \"sawtooth24\" | \"sawtooth25\" | \"sawtooth26\" | \"sawtooth27\" | \"sawtooth28\" | \"sawtooth29\" |\n\t\"sawtooth30\" | \"sawtooth31\" | \"sawtooth32\";\n\ntype TriangleWithPartials =\n\t\"triangle1\" | \"triangle2\" | \"triangle3\" | \"triangle4\" | \"triangle5\" | \"triangle6\" | \"triangle7\" | \"triangle8\" | \"triangle9\" |\n\t\"triangle10\" | \"triangle11\" | \"triangle12\" | \"triangle13\" | \"triangle14\" | \"triangle15\" | \"triangle16\" | \"triangle17\" | \"triangle18\" | \"triangle19\" |\n\t\"triangle20\" | \"triangle21\" | \"triangle22\" | \"triangle23\" | \"triangle24\" | \"triangle25\" | \"triangle26\" | \"triangle27\" | \"triangle28\" | \"triangle29\" |\n\t\"triangle30\" | \"triangle31\" | \"triangle32\";\n\ntype TypeWithPartials = SineWithPartials | SquareWithPartials | TriangleWithPartials | SawtoothWithPartials;\n\ninterface BaseOscillatorOptions extends SourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tphase: Degrees;\n}\n\nexport type NonCustomOscillatorType = Exclude<OscillatorType, \"custom\">;\n\ntype AllNonCustomOscillatorType = NonCustomOscillatorType | TypeWithPartials;\n\nexport type ToneOscillatorType = AllNonCustomOscillatorType | \"custom\";\n\nexport type ExtendedToneOscillatorType = ToneOscillatorType | \"pwm\" | \"pulse\";\n\n/**\n * Oscillator Interfaces\n */\ninterface ToneCustomOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface ToneTypeOscillatorOptions extends BaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface TonePartialOscillatorOptions extends BaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type ToneOscillatorConstructorOptions = ToneCustomOscillatorOptions | ToneTypeOscillatorOptions | TonePartialOscillatorOptions;\n\nexport interface ToneOscillatorOptions extends BaseOscillatorOptions {\n\ttype: ToneOscillatorType;\n\tpartialCount: number;\n\tpartials: number[];\n}\n\n/**\n * FMOscillator Interface\n */\ninterface FMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface FMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface FMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FMConstructorOptions = FMTypeOscillatorOptions | FMCustomOscillatorOptions | FMPartialsOscillatorOptions;\n\nexport interface FMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\n/**\n * AMOscillator Interface\n */\ninterface AMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface AMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface AMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface AMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type AMConstructorOptions = AMCustomOscillatorOptions | AMTypeOscillatorOptions | AMPartialsOscillatorOptions;\n\nexport interface AMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n/**\n * FatOscillator\n */\ninterface FatBaseOscillatorOptions extends BaseOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\ninterface FatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface FatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FatConstructorOptions = FatCustomOscillatorOptions | FatTypeOscillatorOptions | FatPartialsOscillatorOptions;\n\nexport interface FatOscillatorOptions extends ToneOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\n/**\n * Pulse Oscillator\n */\nexport interface PulseOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pulse\";\n\twidth: AudioRange;\n}\n\n/**\n * PWM Oscillator\n */\nexport interface PWMOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pwm\";\n\tmodulationFrequency: Frequency;\n}\n\n/**\n * OMNI OSCILLATOR\n */\n\n/**\n * FM Oscillators with partials\n */\ntype FMSineWithPartials =\n\t\"fmsine1\" | \"fmsine2\" | \"fmsine3\" | \"fmsine4\" | \"fmsine5\" | \"fmsine6\" | \"fmsine7\" | \"fmsine8\" | \"fmsine9\" |\n\t\"fmsine10\" | \"fmsine11\" | \"fmsine12\" | \"fmsine13\" | \"fmsine14\" | \"fmsine15\" | \"fmsine16\" | \"fmsine17\" | \"fmsine18\" | \"fmsine19\" |\n\t\"fmsine20\" | \"fmsine21\" | \"fmsine22\" | \"fmsine23\" | \"fmsine24\" | \"fmsine25\" | \"fmsine26\" | \"fmsine27\" | \"fmsine28\" | \"fmsine29\" |\n\t\"fmsine30\" | \"fmsine31\" | \"fmsine32\";\n\ntype FMSquareWithPartials =\n\t\"fmsquare1\" | \"fmsquare2\" | \"fmsquare3\" | \"fmsquare4\" | \"fmsquare5\" | \"fmsquare6\" | \"fmsquare7\" | \"fmsquare8\" | \"fmsquare9\" |\n\t\"fmsquare10\" | \"fmsquare11\" | \"fmsquare12\" | \"fmsquare13\" | \"fmsquare14\" | \"fmsquare15\" | \"fmsquare16\" | \"fmsquare17\" | \"fmsquare18\" | \"fmsquare19\" |\n\t\"fmsquare20\" | \"fmsquare21\" | \"fmsquare22\" | \"fmsquare23\" | \"fmsquare24\" | \"fmsquare25\" | \"fmsquare26\" | \"fmsquare27\" | \"fmsquare28\" | \"fmsquare29\" |\n\t\"fmsquare30\" | \"fmsquare31\" | \"fmsquare32\";\n\ntype FMSawtoothWithPartials =\n\t\"fmsawtooth1\" | \"fmsawtooth2\" | \"fmsawtooth3\" | \"fmsawtooth4\" | \"fmsawtooth5\" | \"fmsawtooth6\" | \"fmsawtooth7\" | \"fmsawtooth8\" | \"fmsawtooth9\" |\n\t\"fmsawtooth10\" | \"fmsawtooth11\" | \"fmsawtooth12\" | \"fmsawtooth13\" | \"fmsawtooth14\" | \"fmsawtooth15\" | \"fmsawtooth16\" | \"fmsawtooth17\" | \"fmsawtooth18\" | \"fmsawtooth19\" |\n\t\"fmsawtooth20\" | \"fmsawtooth21\" | \"fmsawtooth22\" | \"fmsawtooth23\" | \"fmsawtooth24\" | \"fmsawtooth25\" | \"fmsawtooth26\" | \"fmsawtooth27\" | \"fmsawtooth28\" | \"fmsawtooth29\" |\n\t\"fmsawtooth30\" | \"fmsawtooth31\" | \"fmsawtooth32\";\n\ntype FMTriangleWithPartials =\n\t\"fmtriangle1\" | \"fmtriangle2\" | \"fmtriangle3\" | \"fmtriangle4\" | \"fmtriangle5\" | \"fmtriangle6\" | \"fmtriangle7\" | \"fmtriangle8\" | \"fmtriangle9\" |\n\t\"fmtriangle10\" | \"fmtriangle11\" | \"fmtriangle12\" | \"fmtriangle13\" | \"fmtriangle14\" | \"fmtriangle15\" | \"fmtriangle16\" | \"fmtriangle17\" | \"fmtriangle18\" | \"fmtriangle19\" |\n\t\"fmtriangle20\" | \"fmtriangle21\" | \"fmtriangle22\" | \"fmtriangle23\" | \"fmtriangle24\" | \"fmtriangle25\" | \"fmtriangle26\" | \"fmtriangle27\" | \"fmtriangle28\" | \"fmtriangle29\" |\n\t\"fmtriangle30\" | \"fmtriangle31\" | \"fmtriangle32\";\n\ntype FMTypeWithPartials = FMSineWithPartials | FMSquareWithPartials | FMSawtoothWithPartials | FMTriangleWithPartials;\n\n/**\n * AM Oscillators with partials\n */\ntype AMSineWithPartials =\n\t\"amsine1\" | \"amsine2\" | \"amsine3\" | \"amsine4\" | \"amsine5\" | \"amsine6\" | \"amsine7\" | \"amsine8\" | \"amsine9\" |\n\t\"amsine10\" | \"amsine11\" | \"amsine12\" | \"amsine13\" | \"amsine14\" | \"amsine15\" | \"amsine16\" | \"amsine17\" | \"amsine18\" | \"amsine19\" |\n\t\"amsine20\" | \"amsine21\" | \"amsine22\" | \"amsine23\" | \"amsine24\" | \"amsine25\" | \"amsine26\" | \"amsine27\" | \"amsine28\" | \"amsine29\" |\n\t\"amsine30\" | \"amsine31\" | \"amsine32\";\n\ntype AMSquareWithPartials =\n\t\"amsquare1\" | \"amsquare2\" | \"amsquare3\" | \"amsquare4\" | \"amsquare5\" | \"amsquare6\" | \"amsquare7\" | \"amsquare8\" | \"amsquare9\" |\n\t\"amsquare10\" | \"amsquare11\" | \"amsquare12\" | \"amsquare13\" | \"amsquare14\" | \"amsquare15\" | \"amsquare16\" | \"amsquare17\" | \"amsquare18\" | \"amsquare19\" |\n\t\"amsquare20\" | \"amsquare21\" | \"amsquare22\" | \"amsquare23\" | \"amsquare24\" | \"amsquare25\" | \"amsquare26\" | \"amsquare27\" | \"amsquare28\" | \"amsquare29\" |\n\t\"amsquare30\" | \"amsquare31\" | \"amsquare32\";\n\ntype AMSawtoothWithPartials =\n\t\"amsawtooth1\" | \"amsawtooth2\" | \"amsawtooth3\" | \"amsawtooth4\" | \"amsawtooth5\" | \"amsawtooth6\" | \"amsawtooth7\" | \"amsawtooth8\" | \"amsawtooth9\" |\n\t\"amsawtooth10\" | \"amsawtooth11\" | \"amsawtooth12\" | \"amsawtooth13\" | \"amsawtooth14\" | \"amsawtooth15\" | \"amsawtooth16\" | \"amsawtooth17\" | \"amsawtooth18\" | \"amsawtooth19\" |\n\t\"amsawtooth20\" | \"amsawtooth21\" | \"amsawtooth22\" | \"amsawtooth23\" | \"amsawtooth24\" | \"amsawtooth25\" | \"amsawtooth26\" | \"amsawtooth27\" | \"amsawtooth28\" | \"amsawtooth29\" |\n\t\"amsawtooth30\" | \"amsawtooth31\" | \"amsawtooth32\";\n\ntype AMTriangleWithPartials =\n\t\"amtriangle1\" | \"amtriangle2\" | \"amtriangle3\" | \"amtriangle4\" | \"amtriangle5\" | \"amtriangle6\" | \"amtriangle7\" | \"amtriangle8\" | \"amtriangle9\" |\n\t\"amtriangle10\" | \"amtriangle11\" | \"amtriangle12\" | \"amtriangle13\" | \"amtriangle14\" | \"amtriangle15\" | \"amtriangle16\" | \"amtriangle17\" | \"amtriangle18\" | \"amtriangle19\" |\n\t\"amtriangle20\" | \"amtriangle21\" | \"amtriangle22\" | \"amtriangle23\" | \"amtriangle24\" | \"amtriangle25\" | \"amtriangle26\" | \"amtriangle27\" | \"amtriangle28\" | \"amtriangle29\" |\n\t\"amtriangle30\" | \"amtriangle31\" | \"amtriangle32\";\n\ntype AMTypeWithPartials = AMSineWithPartials | AMSquareWithPartials | AMSawtoothWithPartials | AMTriangleWithPartials;\n\n/**\n * Fat Oscillators with partials\n */\ntype FatSineWithPartials =\n\t\"fatsine1\" | \"fatsine2\" | \"fatsine3\" | \"fatsine4\" | \"fatsine5\" | \"fatsine6\" | \"fatsine7\" | \"fatsine8\" | \"fatsine9\" |\n\t\"fatsine10\" | \"fatsine11\" | \"fatsine12\" | \"fatsine13\" | \"fatsine14\" | \"fatsine15\" | \"fatsine16\" | \"fatsine17\" | \"fatsine18\" | \"fatsine19\" |\n\t\"fatsine20\" | \"fatsine21\" | \"fatsine22\" | \"fatsine23\" | \"fatsine24\" | \"fatsine25\" | \"fatsine26\" | \"fatsine27\" | \"fatsine28\" | \"fatsine29\" |\n\t\"fatsine30\" | \"fatsine31\" | \"fatsine32\";\n\ntype FatSquareWithPartials =\n\t\"fatsquare1\" | \"fatsquare2\" | \"fatsquare3\" | \"fatsquare4\" | \"fatsquare5\" | \"fatsquare6\" | \"fatsquare7\" | \"fatsquare8\" | \"fatsquare9\" |\n\t\"fatsquare10\" | \"fatsquare11\" | \"fatsquare12\" | \"fatsquare13\" | \"fatsquare14\" | \"fatsquare15\" | \"fatsquare16\" | \"fatsquare17\" | \"fatsquare18\" | \"fatsquare19\" |\n\t\"fatsquare20\" | \"fatsquare21\" | \"fatsquare22\" | \"fatsquare23\" | \"fatsquare24\" | \"fatsquare25\" | \"fatsquare26\" | \"fatsquare27\" | \"fatsquare28\" | \"fatsquare29\" |\n\t\"fatsquare30\" | \"fatsquare31\" | \"fatsquare32\";\n\ntype FatSawtoothWithPartials =\n\t\"fatsawtooth1\" | \"fatsawtooth2\" | \"fatsawtooth3\" | \"fatsawtooth4\" | \"fatsawtooth5\" | \"fatsawtooth6\" | \"fatsawtooth7\" | \"fatsawtooth8\" | \"fatsawtooth9\" |\n\t\"fatsawtooth10\" | \"fatsawtooth11\" | \"fatsawtooth12\" | \"fatsawtooth13\" | \"fatsawtooth14\" | \"fatsawtooth15\" | \"fatsawtooth16\" | \"fatsawtooth17\" | \"fatsawtooth18\" | \"fatsawtooth19\" |\n\t\"fatsawtooth20\" | \"fatsawtooth21\" | \"fatsawtooth22\" | \"fatsawtooth23\" | \"fatsawtooth24\" | \"fatsawtooth25\" | \"fatsawtooth26\" | \"fatsawtooth27\" | \"fatsawtooth28\" | \"fatsawtooth29\" |\n\t\"fatsawtooth30\" | \"fatsawtooth31\" | \"fatsawtooth32\";\n\ntype FatTriangleWithPartials =\n\t\"fattriangle1\" | \"fattriangle2\" | \"fattriangle3\" | \"fattriangle4\" | \"fattriangle5\" | \"fattriangle6\" | \"fattriangle7\" | \"fattriangle8\" | \"fattriangle9\" |\n\t\"fattriangle10\" | \"fattriangle11\" | \"fattriangle12\" | \"fattriangle13\" | \"fattriangle14\" | \"fattriangle15\" | \"fattriangle16\" | \"fattriangle17\" | \"fattriangle18\" | \"fattriangle19\" |\n\t\"fattriangle20\" | \"fattriangle21\" | \"fattriangle22\" | \"fattriangle23\" | \"fattriangle24\" | \"fattriangle25\" | \"fattriangle26\" | \"fattriangle27\" | \"fattriangle28\" | \"fattriangle29\" |\n\t\"fattriangle30\" | \"fattriangle31\" | \"fattriangle32\";\n\ntype FatTypeWithPartials = FatSineWithPartials | FatSquareWithPartials | FatSawtoothWithPartials | FatTriangleWithPartials;\n\n/**\n * Omni FM\n */\ninterface OmniFMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: FMTypeWithPartials;\n}\n\n/**\n * Omni AM\n */\ninterface OmniAMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amcustom\";\n\tpartials: number[];\n}\n\ninterface OmniAMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniAMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: AMTypeWithPartials;\n}\n\n/**\n * Omni Fat\n */\ninterface OmniFatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: FatTypeWithPartials;\n}\n\nexport type OmniOscillatorType =\n\t\"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials |\n\t\"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials |\n\t\"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials |\n\tTypeWithPartials | OscillatorType | \"pulse\" | \"pwm\";\n\nexport type OmniOscillatorOptions =\n\tPulseOscillatorOptions | PWMOscillatorOptions |\n\tOmniFatCustomOscillatorOptions | OmniFatTypeOscillatorOptions | OmniFatPartialsOscillatorOptions |\n\tOmniFMCustomOscillatorOptions | OmniFMTypeOscillatorOptions | OmniFMPartialsOscillatorOptions |\n\tOmniAMCustomOscillatorOptions | OmniAMTypeOscillatorOptions | OmniAMPartialsOscillatorOptions |\n\tToneOscillatorConstructorOptions;\n\ntype OmitSourceOptions<T extends BaseOscillatorOptions> = Omit<T, \"frequency\" | \"detune\" | \"context\">;\n\n/**\n * The settable options for the omni oscillator inside of the source which excludes certain attributes that are defined by the parent class\n */\nexport type OmniOscillatorSynthOptions =\n\tOmitSourceOptions<PulseOscillatorOptions> | OmitSourceOptions<PWMOscillatorOptions> |\n\tOmitSourceOptions<OmniFatCustomOscillatorOptions> | OmitSourceOptions<OmniFatTypeOscillatorOptions> | OmitSourceOptions<OmniFatPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniFMCustomOscillatorOptions> | OmitSourceOptions<OmniFMTypeOscillatorOptions> | OmitSourceOptions<OmniFMPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniAMCustomOscillatorOptions> | OmitSourceOptions<OmniAMTypeOscillatorOptions> | OmitSourceOptions<OmniAMPartialsOscillatorOptions> |\n\tOmitSourceOptions<ToneCustomOscillatorOptions> | OmitSourceOptions<ToneTypeOscillatorOptions> | OmitSourceOptions<TonePartialOscillatorOptions>\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { Cents, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface ToneOscillatorNodeOptions extends OneShotSourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\ttype: OscillatorType;\n}\n\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource<ToneOscillatorNodeOptions> {\n\n\treadonly name: string = \"ToneOscillatorNode\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _oscillator = this.context.createOscillator();\n\tprotected _internalChannels = [this._oscillator];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly frequency: Param<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator\n\t */\n\treadonly detune: Param<\"cents\">;\n\n\t/**\n\t * @param  frequency   The frequency value\n\t * @param  type  The basic oscillator type\n\t */\n\tconstructor(\n\t\tfrequency: Frequency,\n\t\ttype: OscillatorType,\n\t);\n\tconstructor(options?: Partial<ToneOscillatorNodeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tconnect(this._oscillator, this._gainNode);\n\n\t\tthis.type = options.type;\n\n\t\tthis.frequency = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.frequency,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis.detune = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.detune,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): ToneOscillatorNodeOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\ttype: \"sine\" as OscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * Start the oscillator node at the given time\n\t * @param  time When to start the oscillator\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._oscillator.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\t/**\n\t * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n\t * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n\t */\n\tsetPeriodicWave(periodicWave: PeriodicWave): this {\n\t\tthis._oscillator.setPeriodicWave(periodicWave);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n\t */\n\tget type(): OscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type: OscillatorType) {\n\t\tthis._oscillator.type = type;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._oscillator.disconnect();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Degrees, Frequency, Radians, Time } from \"../../core/type/Units\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport {\n\tgenerateWaveform, ToneOscillatorConstructorOptions, ToneOscillatorInterface,\n\tToneOscillatorOptions, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\nexport { ToneOscillatorOptions, ToneOscillatorType } from \"./OscillatorInterface\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source<ToneOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"Oscillator\";\n\n\t/**\n\t * the main oscillator\n\t */\n\tprivate _oscillator: ToneOscillatorNode | null = null;\n\n\t/**\n\t * The frequency control.\n\t */\n\tfrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune control signal.\n\t */\n\tdetune: Signal<\"cents\">;\n\n\t/**\n\t * the periodic wave\n\t */\n\tprivate _wave?: PeriodicWave;\n\n\t/**\n\t * The partials of the oscillator\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to limit or extend the periodic wave by\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * the phase of the oscillator between 0 - 360\n\t */\n\tprivate _phase!: Radians;\n\n\t/**\n\t * the type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * @param frequency Starting frequency\n\t * @param type The oscillator type. Read more about type below.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType);\n\tconstructor(options?: Partial<ToneOscillatorConstructorOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal<\"frequency\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\tthis.detune = new Signal<\"cents\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, \"detune\");\n\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\t\tthis._type = options.type;\n\n\t\tif (options.partialCount && options.type !== \"custom\") {\n\t\t\tthis._type = this.baseType + options.partialCount.toString() as ToneOscillatorType;\n\t\t}\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): ToneOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tpartialCount: 0,\n\t\t\tpartials: [],\n\t\t\tphase: 0,\n\t\t\ttype: \"sine\" as const,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// new oscillator with previous values\n\t\tconst oscillator = new ToneOscillatorNode({\n\t\t\tcontext: this.context,\n\t\t\tonended: () => this.onstop(this),\n\t\t});\n\t\tthis._oscillator = oscillator;\n\t\tif (this._wave) {\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t} else {\n\t\t\tthis._oscillator.type = this._type as OscillatorType;\n\t\t}\n\t\t// connect the control signal to the oscillator frequency & detune\n\t\tthis._oscillator.connect(this.output);\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\n\t\t// start the oscillator\n\t\tthis._oscillator.start(computedTime);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.stop(computedTime);\n\t\t}\n\t}\n\n\t/**\n\t * Restart the oscillator. Does not stop the oscillator, but instead\n\t * just cancels any scheduled 'stop' from being invoked.\n\t */\n\tprotected _restart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"restart\", computedTime);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.cancelStop();\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t * will also affect the oscillators frequency.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * osc.frequency.value = 440;\n\t * // the ratio between the bpm and the frequency will be maintained\n\t * osc.syncFrequency();\n\t * // double the tempo\n\t * Tone.Transport.bpm.value *= 2;\n\t * // the frequency of the oscillator is doubled to 880\n\t */\n\tsyncFrequency(): this {\n\t\tthis.context.transport.syncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the oscillator's frequency from the Transport.\n\t * See Oscillator.syncFrequency\n\t */\n\tunsyncFrequency(): this {\n\t\tthis.context.transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cache the periodic waves to avoid having to redo computations\n\t */\n\tprivate static _periodicWaveCache: Array<{\n\t\tpartials: number[];\n\t\tphase: number;\n\t\ttype: string;\n\t\tpartialCount: number;\n\t\treal: Float32Array;\n\t\timag: Float32Array;\n\t\twave: PeriodicWave;\n\t}> = [];\n\n\t/**\n\t * Get a cached periodic wave. Avoids having to recompute\n\t * the oscillator values when they have already been computed\n\t * with the same values.\n\t */\n\tprivate _getCachedPeriodicWave(): { real: Float32Array; imag: Float32Array; partials: number[]; wave: PeriodicWave } | undefined {\n\t\tif (this._type === \"custom\") {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.phase === this._phase &&\n\t\t\t\t\tdeepEquals(description.partials, this._partials);\n\t\t\t});\n\t\t\treturn oscProps;\n\t\t} else {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.type === this._type &&\n\t\t\t\t\tdescription.phase === this._phase;\n\t\t\t});\n\t\t\tthis._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n\t\t\treturn oscProps;\n\t\t}\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type) {\n\t\tthis._type = type;\n\t\tconst isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n\t\tif (this._phase === 0 && isBasicType) {\n\t\t\tthis._wave = undefined;\n\t\t\tthis._partialCount = 0;\n\t\t\t// just go with the basic approach\n\t\t\tif (this._oscillator !== null) {\n\t\t\t\t// already tested that it's a basic type\n\t\t\t\tthis._oscillator.type = type as OscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// first check if the value is cached\n\t\t\tconst cache = this._getCachedPeriodicWave();\n\t\t\tif (isDefined(cache)) {\n\t\t\t\tconst { partials, wave } = cache;\n\t\t\t\tthis._wave = wave;\n\t\t\t\tthis._partials = partials;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [real, imag] = this._getRealImaginary(type, this._phase);\n\t\t\t\tconst periodicWave = this.context.createPeriodicWave(real, imag);\n\t\t\t\tthis._wave = periodicWave;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t\t// set the cache\n\t\t\t\tOscillator._periodicWaveCache.push({\n\t\t\t\t\timag,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tpartials: this._partials,\n\t\t\t\t\tphase: this._phase,\n\t\t\t\t\treal,\n\t\t\t\t\ttype: this._type,\n\t\t\t\t\twave: this._wave,\n\t\t\t\t});\n\t\t\t\tif (Oscillator._periodicWaveCache.length > 100) {\n\t\t\t\t\tOscillator._periodicWaveCache.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn (this._type as string).replace(this.partialCount.toString(), \"\") as OscillatorType;\n\t}\n\tset baseType(baseType) {\n\t\tif (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n\t\t\tthis.type = baseType + this.partialCount as ToneOscillatorType;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._partialCount;\n\t}\n\tset partialCount(p) {\n\t\tassertRange(p, 0);\n\t\tlet type = this._type;\n\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial) {\n\t\t\ttype = partial[1] as OscillatorType;\n\t\t}\n\t\tif (this._type !== \"custom\") {\n\t\t\tif (p === 0) {\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString() as ToneOscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// extend or shorten the partials array\n\t\t\tconst fullPartials = new Float32Array(p);\n\t\t\t// copy over the partials array\n\t\t\tthis._partials.forEach((v, i) => fullPartials[i] = v);\n\t\t\tthis._partials = Array.from(fullPartials);\n\t\t\tthis.type = this._type;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the real and imaginary components based\n\t * on the oscillator type.\n\t * @returns [real: Float32Array, imaginary: Float32Array]\n\t */\n\tprivate _getRealImaginary(type: ToneOscillatorType, phase: Radians): Float32Array[] {\n\t\tconst fftSize = 4096;\n\t\tlet periodicWaveSize = fftSize / 2;\n\n\t\tconst real = new Float32Array(periodicWaveSize);\n\t\tconst imag = new Float32Array(periodicWaveSize);\n\n\t\tlet partialCount = 1;\n\t\tif (type === \"custom\") {\n\t\t\tpartialCount = this._partials.length + 1;\n\t\t\tthis._partialCount = this._partials.length;\n\t\t\tperiodicWaveSize = partialCount;\n\t\t\t// if the partial count is 0, don't bother doing any computation\n\t\t\tif (this._partials.length === 0) {\n\t\t\t\treturn [real, imag];\n\t\t\t}\n\t\t} else {\n\t\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t\tif (partial) {\n\t\t\t\tpartialCount = parseInt(partial[2], 10) + 1;\n\t\t\t\tthis._partialCount = parseInt(partial[2], 10);\n\t\t\t\ttype = partial[1] as ToneOscillatorType;\n\t\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\t\tperiodicWaveSize = partialCount;\n\t\t\t} else {\n\t\t\t\tthis._partialCount = 0;\n\t\t\t}\n\t\t\tthis._partials = [];\n\t\t}\n\n\t\tfor (let n = 1; n < periodicWaveSize; ++n) {\n\t\t\tconst piFactor = 2 / (n * Math.PI);\n\t\t\tlet b;\n\t\t\tswitch (type) {\n\t\t\t\tcase \"sine\":\n\t\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"square\":\n\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sawtooth\":\n\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"triangle\":\n\t\t\t\t\tif (n & 1) {\n\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"custom\":\n\t\t\t\t\tb = this._partials[n - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(\"Oscillator: invalid type: \" + type);\n\t\t\t}\n\t\t\tif (b !== 0) {\n\t\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t\t} else {\n\t\t\t\treal[n] = 0;\n\t\t\t\timag[n] = 0;\n\t\t\t}\n\t\t}\n\t\treturn [real, imag];\n\t}\n\n\t/**\n\t * Compute the inverse FFT for a given phase.\n\t */\n\tprivate _inverseFFT(real: Float32Array, imag: Float32Array, phase: Radians): number {\n\t\tlet sum = 0;\n\t\tconst len = real.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t}\n\t\treturn sum;\n\t}\n\n\t/**\n\t * Returns the initial value of the oscillator when stopped.\n\t * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n\t */\n\tgetInitialValue(): AudioRange {\n\t\tconst [real, imag] = this._getRealImaginary(this._type, 0);\n\t\tlet maxValue = 0;\n\t\tconst twoPi = Math.PI * 2;\n\t\tconst testPositions = 32;\n\t\t// check for peaks in 16 places\n\t\tfor (let i = 0; i < testPositions; i++) {\n\t\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n\t\t}\n\t\treturn clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._partials.slice(0, this.partialCount);\n\t}\n\tset partials(partials) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis.type = \"custom\";\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase * (180 / Math.PI);\n\t}\n\tset phase(phase) {\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t// reset the type\n\t\tthis.type = this._type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._oscillator !== null) {\n\t\t\tthis._oscillator.dispose();\n\t\t}\n\t\tthis._wave = undefined;\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n\nexport type SignalOperatorOptions = ToneAudioNodeOptions;\n\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport abstract class SignalOperator<Options extends SignalOperatorOptions> extends ToneAudioNode<Options> {\n\n\tconstructor(options?: Partial<Options>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport type WaveShaperMappingFn = (value: number, index?: number) => number;\n\ntype WaveShaperMapping = WaveShaperMappingFn | number[] | Float32Array;\n\ninterface WaveShaperOptions extends ToneAudioNodeOptions {\n\tmapping?: WaveShaperMapping;\n\tlength: number;\n\tcurve?: number[] | Float32Array;\n}\n\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator<WaveShaperOptions> {\n\n\treadonly name: string = \"WaveShaper\";\n\n\t/**\n\t * the waveshaper node\n\t */\n\tprivate _shaper: WaveShaperNode = this.context.createWaveShaper();\n\n\t/**\n\t * The input to the waveshaper node.\n\t */\n\tinput = this._shaper;\n\n\t/**\n\t * The output from the waveshaper node\n\t */\n\toutput = this._shaper;\n\n\t/**\n\t * @param mapping The function used to define the values.\n\t *                The mapping function should take two arguments:\n\t *                the first is the value at the current position\n\t *                and the second is the array position.\n\t *                If the argument is an array, that array will be\n\t *                set as the wave shaping function. The input\n\t *                signal is an AudioRange [-1, 1] value and the output\n\t *                signal can take on any numerical values.\n\t *\n\t * @param bufferLen The length of the WaveShaperNode buffer.\n\t */\n\tconstructor(mapping?: WaveShaperMapping, length?: number);\n\tconstructor(options?: Partial<WaveShaperOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n\t\tconst options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n\n\t\tif (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n\t\t\tthis.curve = Float32Array.from(options.mapping);\n\t\t} else if (isFunction(options.mapping)) {\n\t\t\tthis.setMap(options.mapping, options.length);\n\t\t}\n\t}\n\n\tstatic getDefaults(): WaveShaperOptions {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tlength: 1024,\n\t\t});\n\t}\n\n\t/**\n\t * Uses a mapping function to set the value of the curve.\n\t * @param mapping The function used to define the values.\n\t *                The mapping function take two arguments:\n\t *                the first is the value at the current position\n\t *                which goes from -1 to 1 over the number of elements\n\t *                in the curve array. The second argument is the array position.\n\t * @example\n\t * const shaper = new Tone.WaveShaper();\n\t * // map the input signal from [-1, 1] to [0, 10]\n\t * shaper.setMap((val, index) => (val + 1) * 5);\n\t */\n\tsetMap(mapping: WaveShaperMappingFn, length = 1024): this {\n\t\tconst array = new Float32Array(length);\n\t\tfor (let i = 0, len = length; i < len; i++) {\n\t\t\tconst normalized = (i / (len - 1)) * 2 - 1;\n\t\t\tarray[i] = mapping(normalized, i);\n\t\t}\n\t\tthis.curve = array;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The array to set as the waveshaper curve. For linear curves\n\t * array length does not make much difference, but for complex curves\n\t * longer arrays will provide smoother interpolation.\n\t */\n\tget curve(): Float32Array | null {\n\t\treturn this._shaper.curve;\n\t}\n\n\tset curve(mapping: Float32Array | null) {\n\t\tthis._shaper.curve = mapping;\n\t}\n\n\t/**\n\t * Specifies what type of oversampling (if any) should be used when\n\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\n\tset oversample(oversampling: OverSampleType) {\n\t\tconst isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n\t\tassert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"AudioToGain\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => (x + 1) / 2,\n\t});\n\n\t/**\n\t * The AudioRange input [-1, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The GainRange output [0, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\nimport { InputNode, OutputNode } from \"../core/context/ToneAudioNode\";\n\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply<TypeName extends \"number\" | \"positive\" = \"number\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"Multiply\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection\n\t */\n\treadonly override = false;\n\n\t/**\n\t * the input gain node\n\t */\n\tprivate _mult: Gain;\n\n\t/**\n\t * The multiplicand input.\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The product of the input and [[factor]]\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The multiplication factor. Can be set directly or a signal can be connected to it.\n\t */\n\tfactor: Param<TypeName>;\n\n\t/**\n\t * @param value Constant value to multiple\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._mult = this.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\n\t\tthis.factor = this._param = this._mult.gain as unknown as Param<TypeName>;\n\t\tthis.factor.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tAMConstructorOptions, AMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType,\n\tToneOscillatorInterface,\n\tToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { AMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source<AMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"AMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * convert the -1,1 output to 0,1\n\t */\n\tprivate _modulationScale = new AudioToGain({ context: this.context });\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const amOsc = new Tone.AMOscillator(\"D2\").toDestination().start();\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tamOsc.harmonicity.setValueAtTime(1, time);\n\t * \tamOsc.harmonicity.setValueAtTime(0.5, time + 0.5);\n\t * \tamOsc.harmonicity.setValueAtTime(1.5, time + 1);\n\t * \tamOsc.harmonicity.setValueAtTime(1, time + 2);\n\t * \tamOsc.harmonicity.linearRampToValueAtTime(2, time + 4);\n\t * }, 4);\n\t * Tone.Transport.start();\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode = new Gain({\n\t\tcontext: this.context,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<AMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\t\tthis.frequency = this._carrier.frequency,\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\n\t\treadOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): AMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Seconds): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Seconds): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t}\n\n\t/**\n\t * The type of the carrier oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationScale.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFMConstructorOptions, FMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { FMOscillatorOptions } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source<FMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const fmOsc = new Tone.FMOscillator(\"D2\").toDestination().start();\n\t * // pitch the modulator an octave below carrier\n\t * fmOsc.harmonicity.value = 0.5;\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t */\n\treadonly modulationIndex: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<FMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: 0,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\tthis.modulationIndex = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.modulationIndex,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t\tthis.detune.connect(this._modulator.detune);\n\n\t\treadOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): FMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationIndex: 2,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t\treturn this;\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis.modulationIndex.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { AudioRange, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PulseOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\n\nexport { PulseOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source<PulseOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PulseOscillator\";\n\n\t/**\n\t * The width of the pulse.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst pulse = new Tone.PulseOscillator(20, 0.8).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly width: Signal<\"audioRange\">;\n\n\t/**\n\t * gate the width amount\n\t */\n\tprivate _widthGate: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * the sawtooth oscillator\n\t */\n\tprivate _triangle: Oscillator;\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune in cents.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * Threshold the signal to turn it into a square\n\t */\n\tprivate _thresh = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: val => val <= 0 ? -1 : 1,\n\t});\n\n\t/**\n\t * @param frequency The frequency of the oscillator\n\t * @param width The width of the pulse\n\t */\n\tconstructor(frequency?: Frequency, width?: AudioRange);\n\tconstructor(options?: Partial<PulseOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n\t\tconst options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: options.width,\n\t\t});\n\n\t\tthis._triangle = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: \"triangle\",\n\t\t});\n\t\tthis.frequency = this._triangle.frequency;\n\t\tthis.detune = this._triangle.detune;\n\n\t\t// connections\n\t\tthis._triangle.chain(this._thresh, this.output);\n\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\treadOnly(this, [\"width\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PulseOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tphase: 0,\n\t\t\ttype: \"pulse\" as const,\n\t\t\twidth: 0.2,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.start(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.stop(time);\n\t\t// the width is still connected to the output.\n\t\t// that needs to be stopped also\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._triangle.restart(time);\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._triangle.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._triangle.phase = phase;\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pulse\".\n\t */\n\tget type(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pulse\".\n\t */\n\tget baseType(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * *Internal use* The carrier oscillator type is fed through the \n\t * waveshaper node to create the pulse. Using different carrier oscillators\n\t * changes oscillator's behavior. \n\t */\n\tset carrierType(type: \"triangle\" | \"sine\") {\n\t\tthis._triangle.type = type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up method.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._triangle.dispose();\n\t\tthis.width.dispose();\n\t\tthis._widthGate.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFatConstructorOptions, FatOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n\nexport { FatOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source<FatOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FatOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The array of oscillators\n\t */\n\tprivate _oscillators: Oscillator[] = [];\n\n\t/**\n\t * The total spread of the oscillators\n\t */\n\tprivate _spread: Cents;\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * The phase of the oscillators\n\t */\n\tprivate _phase: Degrees;\n\n\t/**\n\t * The partials array\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to use\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * @param frequency The oscillator's frequency.\n\t * @param type The type of the oscillator.\n\t * @param spread The detune spread between the oscillators.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, spread?: Cents);\n\tconstructor(options?: Partial<FatConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n\t\tconst options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\tthis._spread = options.spread;\n\t\tthis._type = options.type;\n\t\tthis._phase = options.phase;\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\n\t\t// set the count initially\n\t\tthis.count = options.count;\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): FatOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tcount: 3,\n\t\t\tspread: 20,\n\t\t\ttype: \"sawtooth\",\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.start(time));\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.stop(time));\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._forEach(osc => osc.restart(time));\n\t}\n\n\t/**\n\t * Iterate over all of the oscillators\n\t */\n\tprivate _forEach(iterator: (osc: Oscillator, index: number) => void): void {\n\t\tfor (let i = 0; i < this._oscillators.length; i++) {\n\t\t\titerator(this._oscillators[i], i);\n\t\t}\n\t}\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._type = type;\n\t\tthis._forEach(osc => osc.type = type);\n\t}\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator().toDestination().start();\n\t * fatOsc.spread = 70;\n\t */\n\tget spread(): Cents {\n\t\treturn this._spread;\n\t}\n\tset spread(spread: Cents) {\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1) {\n\t\t\tconst start = -spread / 2;\n\t\t\tconst step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach((osc, i) => osc.detune.value = start + step * i);\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators. Must be an integer greater than 1.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n\t * // use 4 sawtooth oscillators\n\t * fatOsc.count = 4;\n\t */\n\tget count(): number {\n\t\treturn this._oscillators.length;\n\t}\n\tset count(count: number) {\n\t\tassertRange(count, 1);\n\t\tif (this._oscillators.length !== count) {\n\t\t\t// dispose the previous oscillators\n\t\t\tthis._forEach(osc => osc.dispose());\n\t\t\tthis._oscillators = [];\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst osc = new Oscillator({\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t\tvolume: -6 - count * 1.1,\n\t\t\t\t\ttype: this._type as NonCustomOscillatorType,\n\t\t\t\t\tphase: this._phase + (i / count) * 360,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tonstop: i === 0 ? () => this.onstop(this) : noOp,\n\t\t\t\t});\n\t\t\t\tif (this.type === \"custom\") {\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t}\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.detune.overridden = false;\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t// set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._forEach(osc => osc.start());\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._phase = phase;\n\t\tthis._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._oscillators[0].baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._forEach(osc => osc.baseType = baseType);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._oscillators[0].partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis._type = \"custom\";\n\t\t\tthis._forEach(osc => osc.partials = partials);\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillators[0].partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(osc => osc.partialCount = partialCount);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._forEach(osc => osc.dispose());\n\t\treturn this;\n\t}\n}\n","import { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PWMOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n\nexport { PWMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source<PWMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PWMOscillator\";\n\n\treadonly sourceType = \"pwm\";\n\n\t/**\n\t * the pulse oscillator\n\t */\n\tprivate _pulse: PulseOscillator;\n\t/**\n\t * the modulator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Scale the oscillator so it doesn't go silent\n\t * at the extreme values.\n\t */\n\tprivate _scale: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: 2,\n\t});\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The width modulation rate of the oscillator.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.PWMOscillator(20, 2).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly modulationFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param {Frequency} frequency The starting frequency of the oscillator.\n\t * @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n\t */\n\tconstructor(frequency?: Frequency, modulationFrequency?: Frequency);\n\tconstructor(options?: Partial<PWMOscillatorOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n\t\tconst options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n\n\t\tthis._pulse = new PulseOscillator({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.modulationFrequency,\n\t\t});\n\t\t// change the pulse oscillator type\n\t\tthis._pulse.carrierType = \"sine\";\n\n\t\tthis.modulationFrequency = this._pulse.frequency;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t});\n\n\t\tthis.frequency = this._modulator.frequency;\n\t\tthis.detune = this._modulator.detune;\n\n\t\t// connections\n\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\tthis._pulse.connect(this.output);\n\t\treadOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PWMOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tmodulationFrequency: 0.4,\n\t\t\tphase: 0,\n\t\t\ttype: \"pwm\" as const,\n\t\t});\n\t}\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.start(time);\n\t\tthis._pulse.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.stop(time);\n\t\tthis._pulse.stop(time);\n\t}\n\n\t/**\n\t * restart the oscillator\n\t */\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._pulse.restart(time);\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pwm\".\n\t */\n\tget type(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pwm\".\n\t */\n\tget baseType(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._modulator.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._pulse.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._modulator.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tgenerateWaveform,\n\tOmniOscillatorOptions, \n\tOmniOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\n\nexport { OmniOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * All of the oscillator types that OmniOscillator can take on\n */\ntype AnyOscillator = Oscillator | PWMOscillator | PulseOscillator | FatOscillator | AMOscillator | FMOscillator;\n\n/**\n * All of the Oscillator constructor types mapped to their name.\n */\ninterface OmniOscillatorSource {\n\t\"fm\": FMOscillator;\n\t\"am\": AMOscillator;\n\t\"pwm\": PWMOscillator;\n\t\"pulse\": PulseOscillator;\n\t\"oscillator\": Oscillator;\n\t\"fat\": FatOscillator;\n}\n\n/**\n * The available oscillator types.\n */\nexport type OmniOscSourceType = keyof OmniOscillatorSource;\n\n// Conditional Types\ntype IsAmOrFmOscillator<Osc, Ret> = Osc extends AMOscillator ? Ret : Osc extends FMOscillator ? Ret : undefined;\ntype IsFatOscillator<Osc, Ret> = Osc extends FatOscillator ? Ret : undefined;\ntype IsPWMOscillator<Osc, Ret> = Osc extends PWMOscillator ? Ret : undefined;\ntype IsPulseOscillator<Osc, Ret> = Osc extends PulseOscillator ? Ret : undefined;\ntype IsFMOscillator<Osc, Ret> = Osc extends FMOscillator ? Ret : undefined;\n\ntype AnyOscillatorConstructor = new (...args: any[]) => AnyOscillator;\n\nconst OmniOscillatorSourceMap: {\n\t[key in OmniOscSourceType]: AnyOscillatorConstructor\n} = {\n\tam: AMOscillator,\n\tfat: FatOscillator,\n\tfm: FMOscillator,\n\toscillator: Oscillator,\n\tpulse: PulseOscillator,\n\tpwm: PWMOscillator,\n};\n\n/**\n * OmniOscillator aggregates all of the oscillator types into one. \n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator<OscType extends AnyOscillator>\n\textends Source<OmniOscillatorOptions>\n\timplements Omit<ToneOscillatorInterface, \"type\"> {\n\n\treadonly name: string = \"OmniOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The oscillator that can switch types\n\t */\n\tprivate _oscillator!: AnyOscillator;\n\n\t/**\n\t * the type of the oscillator source\n\t */\n\tprivate _sourceType!: OmniOscSourceType;\n\n\t/**\n\t * @param frequency The initial frequency of the oscillator.\n\t * @param type The type of the oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: OmniOscillatorType);\n\tconstructor(options?: Partial<OmniOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\n\t\t// set the options\n\t\tthis.set(options);\n\t}\n\n\tstatic getDefaults(): OmniOscillatorOptions {\n\t\treturn Object.assign(\n\t\t\tOscillator.getDefaults(),\n\t\t\tFMOscillator.getDefaults(),\n\t\t\tAMOscillator.getDefaults(),\n\t\t\tFatOscillator.getDefaults(),\n\t\t\tPulseOscillator.getDefaults(),\n\t\t\tPWMOscillator.getDefaults(),\n\t\t);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._oscillator.start(time);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._oscillator.restart(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n\t * when it's not. \n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n\t * omniOsc.type = \"pwm\";\n\t * // modulationFrequency is parameter which is available\n\t * // only when the type is \"pwm\".\n\t * omniOsc.modulationFrequency.value = 0.5;\n\t */\n\tget type(): OmniOscillatorType {\n\t\tlet prefix = \"\";\n\t\tif ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n\t\t\tprefix = this._sourceType;\n\t\t}\n\t\treturn prefix + this._oscillator.type as OmniOscillatorType;\n\t}\n\tset type(type) {\n\t\tif (type.substr(0, 2) === \"fm\") {\n\t\t\tthis._createNewOscillator(\"fm\");\n\t\t\tthis._oscillator = this._oscillator as FMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 2) === \"am\") {\n\t\t\tthis._createNewOscillator(\"am\");\n\t\t\tthis._oscillator = this._oscillator as AMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 3) === \"fat\") {\n\t\t\tthis._createNewOscillator(\"fat\");\n\t\t\tthis._oscillator = this._oscillator as FatOscillator;\n\t\t\tthis._oscillator.type = type.substr(3) as ToneOscillatorType;\n\t\t} else if (type === \"pwm\") {\n\t\t\tthis._createNewOscillator(\"pwm\");\n\t\t\tthis._oscillator = this._oscillator as PWMOscillator;\n\t\t} else if (type === \"pulse\") {\n\t\t\tthis._createNewOscillator(\"pulse\");\n\t\t} else {\n\t\t\tthis._createNewOscillator(\"oscillator\");\n\t\t\tthis._oscillator = this._oscillator as Oscillator;\n\t\t\tthis._oscillator.type = (type as ToneOscillatorType);\n\t\t}\n\t}\n\n\t/**\n\t * The value is an empty array when the type is not \"custom\".\n\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partials = partials;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillator.partialCount;\n\t}\n\tset partialCount(partialCount) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partialCount = partialCount;\n\t\t}\n\t}\n\n\tset(props: Partial<OmniOscillatorOptions>): this {\n\t\t// make sure the type is set first\n\t\tif (Reflect.has(props, \"type\") && props.type) {\n\t\t\tthis.type = props.type;\n\t\t}\n\t\t// then set the rest\n\t\tsuper.set(props);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the oscillator to the frequency and detune signals\n\t */\n\tprivate _createNewOscillator(oscType: OmniOscSourceType): void {\n\t\tif (oscType !== this._sourceType) {\n\t\t\tthis._sourceType = oscType;\n\t\t\tconst OscConstructor = OmniOscillatorSourceMap[oscType];\n\t\t\t// short delay to avoid clicks on the change\n\t\t\tconst now = this.now();\n\t\t\tif (this._oscillator) {\n\t\t\t\tconst oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\t// dispose the old one\n\t\t\t\tthis.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n\t\t\t}\n\t\t\tthis._oscillator = new OscConstructor({\n\t\t\t\tcontext: this.context,\n\t\t\t});\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tthis._oscillator.onstop = () => this.onstop(this);\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t}\n\n\t/**\n\t * The source type of the oscillator.\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n\t * console.log(omniOsc.sourceType); // 'fm'\n\t */\n\tget sourceType(): OmniOscSourceType {\n\t\treturn this._sourceType;\n\t}\n\tset sourceType(sType) {\n\t\t// the basetype defaults to sine\n\t\tlet baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n\t\t\tbaseType = this._oscillator.type;\n\t\t}\n\n\t\t// set the type\n\t\tif (sType === \"fm\") {\n\t\t\tthis.type = \"fm\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"am\") {\n\t\t\tthis.type = \"am\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"fat\") {\n\t\t\tthis.type = \"fat\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"oscillator\") {\n\t\t\tthis.type = baseType as OmniOscillatorType;\n\t\t} else if (sType === \"pulse\") {\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === \"pwm\") {\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n\n\tprivate _getOscType<SourceType extends OmniOscSourceType>(\n\t\tosc: AnyOscillator,\n\t\tsourceType: SourceType,\n\t): osc is OmniOscillatorSource[SourceType] {\n\t\treturn osc instanceof OmniOscillatorSourceMap[sourceType];\n\t}\n\n\t/**\n\t * The base type of the oscillator. See [[Oscillator.baseType]]\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n\t * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n\t */\n\tget baseType(): OscillatorType | \"pwm\" | \"pulse\" {\n\t\treturn this._oscillator.baseType;\n\t}\n\tset baseType(baseType) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") &&\n\t\t\t!this._getOscType(this._oscillator, \"pwm\") &&\n\t\t\tbaseType !== \"pulse\" && baseType !== \"pwm\") {\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n\n\t/**\n\t * The width of the oscillator when sourceType === \"pulse\".\n\t * See [[PWMOscillator.width]]\n\t */\n\tget width(): IsPulseOscillator<OscType, Signal<\"audioRange\">> {\n\t\tif (this._getOscType(this._oscillator, \"pulse\")) {\n\t\t\treturn this._oscillator.width as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget count(): IsFatOscillator<OscType, number> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.count as IsFatOscillator<OscType, number>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, number>;\n\t\t}\n\t}\n\tset count(count) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n\n\t/**\n\t * The detune spread between the oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget spread(): IsFatOscillator<OscType, Cents> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.spread as IsFatOscillator<OscType, Cents>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, Cents>;\n\t\t}\n\t}\n\tset spread(spread) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n\n\t/**\n\t * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types. \n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget modulationType(): IsAmOrFmOscillator<OscType, ToneOscillatorType> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.modulationType as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t}\n\t}\n\tset modulationType(mType) {\n\t\tif ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n\n\t/**\n\t * The modulation index when the sourceType === \"fm\"\n\t * See [[FMOscillator]].\n\t */\n\tget modulationIndex(): IsFMOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\")) {\n\t\t\treturn this._oscillator.modulationIndex as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget harmonicity(): IsAmOrFmOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.harmonicity as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n\t * see [[PWMOscillator]]\n\t * @min 0.1\n\t * @max 5\n\t */\n\tget modulationFrequency(): IsPWMOscillator<OscType, Signal<\"frequency\">> {\n\t\tif (this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\treturn this._oscillator.modulationFrequency as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t}\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis._oscillator.dispose();\n\t\treturn this;\n\t}\n}\n","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\n\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst add = new Tone.Add(2).toDestination();\n * \tadd.addend.setValueAtTime(1, 0.2);\n * \tconst signal = new Tone.Signal(2);\n * \t// add a signal and a scalar\n * \tsignal.connect(add);\n * \tsignal.setValueAtTime(1, 0.1);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Add extends Signal {\n\n\toverride = false;\n\n\treadonly name: string = \"Add\";\n\n\t/**\n\t * the summing node\n\t */\n\tprivate _sum: Gain = new Gain({ context: this.context });\n\treadonly input = this._sum;\n\treadonly output = this._sum;\n\n\t/**\n\t * The value which is added to the input signal\n\t */\n\treadonly addend: Param<\"number\"> = this._param;\n\n\t/**\n\t * @param value If no value is provided, will sum the input and [[addend]].\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<\"number\">>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n\n\t\tconnectSeries(this._constantSource, this._sum);\n\t}\n\n\tstatic getDefaults(): SignalOptions<\"number\"> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sum.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport interface ScaleOptions extends ToneAudioNodeOptions {\n\tmin: number;\n\tmax: number;\n}\n\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale<Options extends ScaleOptions = ScaleOptions> extends SignalOperator<Options> {\n\n\treadonly name: string = \"Scale\";\n\n\tinput: InputNode;\n\toutput: OutputNode;\n\n\t/**\n\t * Hold the multiple\n\t */\n\tprotected _mult: Multiply;\n\n\t/**\n\t * Hold the adder\n\t */\n\tprotected _add: Add;\n\n\t/**\n\t * Private reference to the min value\n\t */\n\tprivate _min: number;\n\n\t/**\n\t * Private reference to the max value\n\t */\n\tprivate _max: number;\n\n\t/**\n\t * @param min The output value when the input is 0.\n\t * @param max The output value when the input is 1.\n\t */\n\tconstructor(min?: number, max?: number);\n\tconstructor(options?: Partial<ScaleOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n\t\tconst options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n\n\t\tthis._mult = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.max - options.min,\n\t\t});\n\n\t\tthis._add = this.output = new Add({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.min,\n\t\t});\n\n\t\tthis._min = options.min;\n\t\tthis._max = options.max;\n\n\t\tthis.input.connect(this.output);\n\t}\n\n\tstatic getDefaults(): ScaleOptions {\n\t\treturn Object.assign(SignalOperator.getDefaults(), {\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t});\n\t}\n\n\t/**\n\t * The minimum output value. This number is output when the value input value is 0.\n\t */\n\tget min(): number {\n\t\treturn this._min;\n\t}\n\tset min(min) {\n\t\tthis._min = min;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * The maximum output value. This number is output when the value input value is 1.\n\t */\n\tget max(): number {\n\t\treturn this._max;\n\t}\n\tset max(max) {\n\t\tthis._max = max;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * set the values\n\t */\n\tprivate _setRange(): void {\n\t\tthis._add.value = this._min;\n\t\tthis._mult.value = this._max - this._min;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._add.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Degrees, Frequency, NormalRange, Time, UnitName } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator, ToneOscillatorType } from \"./Oscillator\";\nimport { ToneOscillatorConstructorOptions, ToneOscillatorOptions } from \"./OscillatorInterface\";\n\nexport type LFOOptions = {\n\tmin: number;\n\tmax: number;\n\tamplitude: NormalRange;\n\tunits: UnitName;\n} & ToneOscillatorOptions;\n\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n * @example\n * return Tone.Offline(() => {\n * \tconst lfo = new Tone.LFO(\"4n\", 400, 4000).start().toDestination();\n * }, 0.5, 1);\n * @category Source\n */\nexport class LFO extends ToneAudioNode<LFOOptions> {\n\n\treadonly name: string = \"LFO\";\n\n\t/**\n\t * The oscillator.\n\t */\n\tprivate _oscillator: Oscillator;\n\n\t/**\n\t * The gain of the output\n\t */\n\tprivate _amplitudeGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t */\n\treadonly amplitude: Param<\"normalRange\">;\n\n\t/**\n\t * The signal which is output when the LFO is stopped\n\t */\n\tprivate _stoppedSignal: Signal<\"audioRange\">;\n\n\t/**\n\t * Just outputs zeros. This is used so that scaled signal is not\n\t * optimized to silence.\n\t */\n\tprivate _zeros: Zero;\n\n\t/**\n\t * The value that the LFO outputs when it's stopped\n\t */\n\tprivate _stoppedValue = 0;\n\n\t/**\n\t * Convert the oscillators audio range to an output between 0-1 so it can be scaled\n\t */\n\tprivate _a2g: AudioToGain;\n\n\t/**\n\t * Scales the final output to the min and max value\n\t */\n\tprivate _scaler: Scale;\n\n\t/**\n\t * The output of the LFO\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * There is no input node\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * A private placeholder for the units\n\t */\n\tprivate _units: UnitName = \"number\";\n\n\t/**\n\t * If the input value is converted using the [[units]]\n\t */\n\tconvert = true;\n\n\t/**\n\t * The frequency value of the LFO\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param frequency The frequency of the oscillation.\n\t * Typically, LFOs will be in the frequency range of 0.1 to 10 hertz.\n\t * @param min The minimum output value of the LFO.\n\t * @param max The maximum value of the LFO.\n\t */\n\tconstructor(frequency?: Frequency, min?: number, max?: number);\n\tconstructor(options?: Partial<LFOOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n\t\tconst options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n\n\t\tthis._oscillator = new Oscillator(options as ToneOscillatorConstructorOptions);\n\n\t\tthis.frequency = this._oscillator.frequency;\n\n\t\tthis._amplitudeGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.amplitude,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\tthis.amplitude = this._amplitudeGain.gain;\n\t\tthis._stoppedSignal = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: 0,\n\t\t});\n\t\tthis._zeros = new Zero({ context: this.context });\n\t\tthis._a2g = new AudioToGain({ context: this.context });\n\t\tthis._scaler = this.output = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmax: options.max,\n\t\t\tmin: options.min,\n\t\t});\n\n\t\tthis.units = options.units;\n\t\tthis.min = options.min;\n\t\tthis.max = options.max;\n\n\t\t// connect it up\n\t\tthis._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);\n\t\tthis._zeros.connect(this._a2g);\n\t\tthis._stoppedSignal.connect(this._a2g);\n\t\treadOnly(this, [\"amplitude\", \"frequency\"]);\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): LFOOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tamplitude: 1,\n\t\t\tfrequency: \"4n\",\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t\ttype: \"sine\",\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the LFO.\n\t * @param time The time the LFO will start\n\t */\n\tstart(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._stoppedSignal.setValueAtTime(0, time);\n\t\tthis._oscillator.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the LFO.\n\t * @param  time The time the LFO will stop\n\t */\n\tstop(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t\tthis._oscillator.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the start/stop/pause to the transport\n\t * and the frequency to the bpm of the transport\n\t * @example\n\t * const lfo = new Tone.LFO(\"8n\");\n\t * lfo.sync().start(0);\n\t * // the rate of the LFO will always be an eighth note, even as the tempo changes\n\t */\n\tsync(): this {\n\t\tthis._oscillator.sync();\n\t\tthis._oscillator.syncFrequency();\n\t\treturn this;\n\t}\n\n\t/**\n\t * unsync the LFO from transport control\n\t */\n\tunsync(): this {\n\t\tthis._oscillator.unsync();\n\t\tthis._oscillator.unsyncFrequency();\n\t\treturn this;\n\t}\n\n\t/**\n\t * After the oscillator waveform is updated, reset the `_stoppedSignal` value to match the updated waveform\n\t */\n\tprivate _setStoppedValue() {\n\t\tthis._stoppedValue = this._oscillator.getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n\n\t/**\n\t * The minimum output of the LFO.\n\t */\n\tget min(): number {\n\t\treturn this._toType(this._scaler.min);\n\t}\n\tset min(min) {\n\t\tmin = this._fromType(min);\n\t\tthis._scaler.min = min;\n\t}\n\n\t/**\n\t * The maximum output of the LFO.\n\t */\n\tget max(): number {\n\t\treturn this._toType(this._scaler.max);\n\t}\n\tset max(max) {\n\t\tmax = this._fromType(max);\n\t\tthis._scaler.max = max;\n\t}\n\n\t/**\n\t * The type of the oscillator: See [[Oscillator.type]]\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type) {\n\t\tthis._oscillator.type = type;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The oscillator's partials array: See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tthis._oscillator.partials = partials;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The phase of the LFO.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The output units of the LFO.\n\t */\n\tget units(): UnitName {\n\t\treturn this._units;\n\t}\n\tset units(val) {\n\t\tconst currentMin = this.min;\n\t\tconst currentMax = this.max;\n\t\t// convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._oscillator.state;\n\t}\n\n\t/**\n\t * @param node the destination to connect to\n\t * @param outputNum the optional output number\n\t * @param inputNum the input number\n\t */\n\tconnect(node: InputNode, outputNum?: number, inputNum?: number): this {\n\t\tif (node instanceof Param || node instanceof Signal) {\n\t\t\tthis.convert = node.convert;\n\t\t\tthis.units = node.units;\n\t\t}\n\t\tconnectSignal(this, node, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Private methods borrowed from Param\n\t */\n\t// @ts-ignore\n\tprivate _fromType = Param.prototype._fromType;\n\t// @ts-ignore\n\tprivate _toType = Param.prototype._toType;\n\t// @ts-ignore\n\tprivate _is = Param.prototype._is;\n\t// @ts-ignore\n\tprivate _clampValue = Param.prototype._clampValue;\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._oscillator.dispose();\n\t\tthis._stoppedSignal.dispose();\n\t\tthis._zeros.dispose();\n\t\tthis._scaler.dispose();\n\t\tthis._a2g.dispose();\n\t\tthis._amplitudeGain.dispose();\n\t\tthis.amplitude.dispose();\n\t\treturn this;\n\t}\n}\n","import { assertRange } from \"./Debug\";\nimport { Time } from \"../type/Units\";\n\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, number> = new WeakMap();\n\treturn function(target: any, propertyKey: string | symbol) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: number) {\n\t\t\t\t\tassertRange(newValue, min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, Time> = new WeakMap();\n\treturn function(target: any, propertyKey: string) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: Time) {\n\t\t\t\t\tassertRange(this.toSeconds(newValue), min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n","import { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n\nexport interface PlayerOptions extends SourceOptions {\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tplaybackRate: Positive;\n\tloop: boolean;\n\tautostart: boolean;\n\tloopStart: Time;\n\tloopEnd: Time;\n\treverse: boolean;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\turl?: ToneAudioBuffer | string | AudioBuffer;\n}\n\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source<PlayerOptions> {\n\treadonly name: string = \"Player\";\n\n\t/**\n\t * If the file should play as soon\n\t * as the buffer is loaded.\n\t */\n\tautostart: boolean;\n\n\t/**\n\t * The buffer\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * if the buffer should loop once it's over\n\t */\n\tprivate _loop: boolean;\n\n\t/**\n\t * if 'loop' is true, the loop will start at this position\n\t */\n\tprivate _loopStart: Time;\n\n\t/**\n\t * if 'loop' is true, the loop will end at this position\n\t */\n\tprivate _loopEnd: Time;\n\n\t/**\n\t * the playback rate\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * All of the active buffer source nodes\n\t */\n\tprivate _activeSources: Set<ToneBufferSource> = new Set();\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeOut: Time;\n\n\t/**\n\t * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n\t * @param onload The function to invoke when the buffer is loaded.\n\t */\n\tconstructor(\n\t\turl?: string | AudioBuffer | ToneAudioBuffer,\n\t\tonload?: () => void\n\t);\n\tconstructor(options?: Partial<PlayerOptions>);\n\tconstructor() {\n\t\tsuper(\n\t\t\toptionsFromArguments(Player.getDefaults(), arguments, [\n\t\t\t\t\"url\",\n\t\t\t\t\"onload\",\n\t\t\t])\n\t\t);\n\t\tconst options = optionsFromArguments(Player.getDefaults(), arguments, [\n\t\t\t\"url\",\n\t\t\t\"onload\",\n\t\t]);\n\n\t\tthis._buffer = new ToneAudioBuffer({\n\t\t\tonload: this._onload.bind(this, options.onload),\n\t\t\tonerror: options.onerror,\n\t\t\treverse: options.reverse,\n\t\t\turl: options.url,\n\t\t});\n\t\tthis.autostart = options.autostart;\n\t\tthis._loop = options.loop;\n\t\tthis._loopStart = options.loopStart;\n\t\tthis._loopEnd = options.loopEnd;\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.fadeIn = options.fadeIn;\n\t\tthis.fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayerOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tautostart: false,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t\treverse: false,\n\t\t});\n\t}\n\n\t/**\n\t * Load the audio file as an audio buffer.\n\t * Decodes the audio asynchronously and invokes\n\t * the callback once the audio buffer loads.\n\t * Note: this does not need to be called if a url\n\t * was passed in to the constructor. Only use this\n\t * if you want to manually load a new url.\n\t * @param url The url of the buffer to load. Filetype support depends on the browser.\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tawait this._buffer.load(url);\n\t\tthis._onload();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal callback when the buffer is loaded.\n\t */\n\tprivate _onload(callback: () => void = noOp): void {\n\t\tcallback();\n\t\tif (this.autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Internal callback when the buffer is done playing.\n\t */\n\tprivate _onSourceEnd(source: ToneBufferSource): void {\n\t\t// invoke the onstop function\n\t\tthis.onstop(this);\n\n\t\t// delete the source from the active sources\n\t\tthis._activeSources.delete(source);\n\t\tif (\n\t\t\tthis._activeSources.size === 0 &&\n\t\t\t!this._synced &&\n\t\t\tthis._state.getValueAtTime(this.now()) === \"started\"\n\t\t) {\n\t\t\t// remove the 'implicitEnd' event and replace with an explicit end\n\t\t\tthis._state.cancel(this.now());\n\t\t\tthis._state.setStateAtTime(\"stopped\", this.now());\n\t\t}\n\t}\n\n\t/**\n\t * Play the buffer at the given startTime. Optionally add an offset\n\t * and/or duration which will play the buffer from a position\n\t * within the buffer for the given duration.\n\t *\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tsuper.start(time, offset, duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal start method\n\t */\n\tprotected _start(startTime?: Time, offset?: Time, duration?: Time): void {\n\t\t// if it's a loop the default offset is the loopStart point\n\t\tif (this._loop) {\n\t\t\toffset = defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\n\t\t// compute the values in seconds\n\t\tconst computedOffset = this.toSeconds(offset);\n\n\t\t// compute the duration which is either the passed in duration of the buffer.duration - offset\n\t\tconst origDuration = duration;\n\t\tduration = defaultArg(\n\t\t\tduration,\n\t\t\tMath.max(this._buffer.duration - computedOffset, 0)\n\t\t);\n\t\tlet computedDuration = this.toSeconds(duration);\n\n\t\t// scale it by the playback rate\n\t\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t\t// get the start time\n\t\tstartTime = this.toSeconds(startTime);\n\n\t\t// make the source\n\t\tconst source = new ToneBufferSource({\n\t\t\turl: this._buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this.fadeIn,\n\t\t\tfadeOut: this.fadeOut,\n\t\t\tloop: this._loop,\n\t\t\tloopEnd: this._loopEnd,\n\t\t\tloopStart: this._loopStart,\n\t\t\tonended: this._onSourceEnd.bind(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\n\t\t// set the looping properties\n\t\tif (!this._loop && !this._synced) {\n\t\t\t// cancel the previous stop\n\t\t\tthis._state.cancel(startTime + computedDuration);\n\t\t\t// if it's not looping, set the state change at the end of the sample\n\t\t\tthis._state.setStateAtTime(\n\t\t\t\t\"stopped\",\n\t\t\t\tstartTime + computedDuration,\n\t\t\t\t{\n\t\t\t\t\timplicitEnd: true,\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// add it to the array of active sources\n\t\tthis._activeSources.add(source);\n\n\t\t// start it\n\t\tif (this._loop && isUndef(origDuration)) {\n\t\t\tsource.start(startTime, computedOffset);\n\t\t} else {\n\t\t\t// subtract the fade out time\n\t\t\tsource.start(\n\t\t\t\tstartTime,\n\t\t\t\tcomputedOffset,\n\t\t\t\tcomputedDuration - this.toSeconds(this.fadeOut)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Stop playback.\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach((source) => source.stop(computedTime));\n\t}\n\n\t/**\n\t * Stop and then restart the player from the beginning (or offset)\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given,\n\t * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n\t */\n\trestart(time?: Seconds, offset?: Time, duration?: Time): this {\n\t\tsuper.restart(time, offset, duration);\n\t\treturn this;\n\t}\n\n\tprotected _restart(time?: Seconds, offset?: Time, duration?: Time): void {\n\t\t[...this._activeSources].pop()?.stop(time); // explicitly stop only the most recently created source, to avoid edge case when > 1 source exists and _stop() erroneously sets all stop times past original end offset\n\t\tthis._start(time, offset, duration);\n\t}\n\n\t/**\n\t * Seek to a specific time in the player's buffer. If the\n\t * source is no longer playing at that time, it will stop.\n\t * @param offset The time to seek to.\n\t * @param when The time for the seek event to occur.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n\t * \tplayer.start();\n\t * \t// seek to the offset in 1 second from now\n\t * \tplayer.seek(0.4, \"+1\");\n\t * }).toDestination();\n\t */\n\tseek(offset: Time, when?: Time): this {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tconst computedOffset = this.toSeconds(offset);\n\t\t\t// if it's currently playing, stop it\n\t\t\tthis._stop(computedTime);\n\t\t\t// restart it at the given time\n\t\t\tthis._start(computedTime, computedOffset);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the loop start and end. Will only loop if loop is set to true.\n\t * @param loopStart The loop start time\n\t * @param loopEnd The loop end time\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n\t * // loop between the given points\n\t * player.setLoopPoints(0.2, 0.3);\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tsetLoopPoints(loopStart: Time, loopEnd: Time): this {\n\t\tthis.loopStart = loopStart;\n\t\tthis.loopEnd = loopEnd;\n\t\treturn this;\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = loopStart;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach((source) => {\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = loopEnd;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach((source) => {\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\t// if no change, do nothing\n\t\tif (this._loop === loop) {\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t// set the loop of all of the sources\n\t\tthis._activeSources.forEach((source) => {\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop) {\n\t\t\t// remove the next stopEvent\n\t\t\tconst stopEvent = this._state.getNextState(\"stopped\", this.now());\n\t\t\tif (stopEvent) {\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Normal speed is 1. The pitch will change with the playback rate.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n\t * // play at 1/4 speed\n\t * player.playbackRate = 0.25;\n\t * // play as soon as the buffer is loaded\n\t * player.autostart = true;\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tconst now = this.now();\n\n\t\t// cancel the stop event since it's at a different time now\n\t\tconst stopEvent = this._state.getNextState(\"stopped\", now);\n\t\tif (stopEvent && stopEvent.implicitEnd) {\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\tthis._activeSources.forEach((source) => source.cancelStop());\n\t\t}\n\n\t\t// set all the sources\n\t\tthis._activeSources.forEach((source) => {\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n\n\t/**\n\t * If the buffer should be reversed. Note that this sets the underlying [[ToneAudioBuffer.reverse]], so\n\t * if multiple players are pointing at the same ToneAudioBuffer, they will all be reversed.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n\t * player.autostart = true;\n\t * player.reverse = true;\n\t */\n\tget reverse(): boolean {\n\t\treturn this._buffer.reverse;\n\t}\n\tset reverse(rev) {\n\t\tthis._buffer.reverse = rev;\n\t}\n\n\t/**\n\t * If the buffer is loaded\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffer.loaded;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t// disconnect all of the players\n\t\tthis._activeSources.forEach((source) => source.dispose());\n\t\tthis._activeSources.clear();\n\t\tthis._buffer.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers, ToneAudioBuffersUrlMap } from \"../../core/context/ToneAudioBuffers\";\nimport { OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { Player } from \"./Player\";\n\nexport interface PlayersOptions extends SourceOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tvolume: Decibels;\n\tmute: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nexport class Players extends ToneAudioNode<PlayersOptions> {\n\n\treadonly name: string = \"Players\";\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume of the output in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * The combined output of all of the players\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * Players has no input.\n\t */\n\treadonly input = undefined;\n\n\t/**\n\t * The container of all of the players\n\t */\n\tprivate _players: Map<string, Player> = new Map();\n\n\t/**\n\t * The container of all the buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * private holder of the fadeIn time\n\t */\n\tprivate _fadeIn: Time;\n\n\t/**\n\t * private holder of the fadeOut time\n\t */\n\tprivate _fadeOut: Time;\n\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param onload The function to invoke when all buffers are loaded.\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, onload?: () => void);\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param options The remaining options associated with the players\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, options?: Partial<Omit<PlayersOptions, \"urls\">>);\n\tconstructor(options?: Partial<PlayersOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n\n\t\t/**\n\t\t * The output volume node\n\t\t */\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: options.urls, \n\t\t\tonload: options.onload, \n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror\n\t\t});\n\t\t// mute initially\n\t\tthis.mute = options.mute;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayersOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tbaseUrl: \"\",\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tmute: false,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\turls: {},\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t/**\n\t * The fadeIn time of the envelope applied to the source.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(fadeIn) {\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n\n\t/**\n\t * The fadeOut time of the each of the sources.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(fadeOut) {\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n\n\t/**\n\t * The state of the players object. Returns \"started\" if any of the players are playing.\n\t */\n\tget state(): BasicPlaybackState {\n\t\tconst playing = Array.from(this._players).some(([_, player]) => player.state === \"started\");\n\t\treturn playing ? \"started\" : \"stopped\";\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param name  The key or index of the buffer.\n\t */\n\thas(name: string): boolean {\n\t\treturn this._buffers.has(name);\n\t}\n\n\t/**\n\t * Get a player by name.\n\t * @param  name  The players name as defined in the constructor object or `add` method.\n\t */\n\tplayer(name: string): Player {\n\t\tassert(this.has(name), `No Player with the name ${name} exists on this object`);\n\t\tif (!this._players.has(name)) {\n\t\t\tconst player = new Player({\n\t\t\t\tcontext: this.context,\n\t\t\t\tfadeIn: this._fadeIn,\n\t\t\t\tfadeOut: this._fadeOut,\n\t\t\t\turl: this._buffers.get(name),\n\t\t\t}).connect(this.output);\n\t\t\tthis._players.set(name, player);\n\t\t}\n\t\treturn this._players.get(name) as Player;\n\t}\n\n\t/**\n\t * If all the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Add a player by name and url to the Players\n\t * @param  name A unique name to give the player\n\t * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n\t * @param callback  The callback to invoke when the url is loaded.\n\t * @example\n\t * const players = new Tone.Players();\n\t * players.add(\"gong\", \"https://tonejs.github.io/audio/berklee/gong_1.mp3\", () => {\n\t * \tconsole.log(\"gong loaded\");\n\t * \tplayers.get(\"gong\").start();\n\t * });\n\t */\n\tadd(name: string, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\t\tthis._buffers.add(name, url, callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop all of the players at the given time\n\t * @param time The time to stop all of the players.\n\t */\n\tstopAll(time?: Time): this {\n\t\tthis._players.forEach(player => player.stop(time));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._players.forEach(player => player.dispose());\n\t\tthis._buffers.dispose();\n\t\treturn this;\n\t}\n}\n","import { Source, SourceOptions } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { Cents, Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n\ninterface GrainPlayerOptions extends SourceOptions {\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\treverse: boolean;\n\turl?: ToneAudioBuffer | string | AudioBuffer;\n\toverlap: Seconds;\n\tgrainSize: Seconds;\n\tplaybackRate: Positive;\n\tdetune: Cents;\n\tloop: boolean;\n\tloopStart: Time;\n\tloopEnd: Time;\n}\n\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\nexport class GrainPlayer extends Source<GrainPlayerOptions> {\n\n\treadonly name: string = \"GrainPlayer\";\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tbuffer: ToneAudioBuffer;\n\n\t/**\n\t * Create a repeating tick to schedule the grains.\n\t */\n\tprivate _clock: Clock;\n\n\t/**\n\t * Internal loopStart value\n\t */\n\tprivate _loopStart = 0;\n\n\t/**\n\t * Internal loopStart value\n\t */\n\tprivate _loopEnd = 0;\n\n\t/**\n\t * All of the currently playing BufferSources\n\t */\n\tprivate _activeSources: ToneBufferSource[] = [];\n\n\t/**\n\t * Internal reference to the playback rate\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * Internal grain size reference;\n\t */\n\tprivate _grainSize: Seconds;\n\n\t/**\n\t * Internal overlap reference;\n\t */\n\tprivate _overlap: Seconds;\n\n\t/**\n\t * Adjust the pitch independently of the playbackRate.\n\t */\n\tdetune: Cents;\n\n\t/**\n\t * If the buffer should loop back to the loopStart when completed\n\t */\n\tloop: boolean;\n\n\t/**\n\t * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n\t * @param onload The function to invoke when the buffer is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<GrainPlayerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis.buffer = new ToneAudioBuffer({\n\t\t\tonload: options.onload,\n\t\t\tonerror: options.onerror,\n\t\t\treverse: options.reverse,\n\t\t\turl: options.url,\n\t\t});\n\t\tthis._clock = new Clock({\n\t\t\tcontext: this.context,\n\t\t\tcallback: this._tick.bind(this),\n\t\t\tfrequency: 1 / options.grainSize\n\t\t});\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis._grainSize = options.grainSize;\n\t\tthis._overlap = options.overlap;\n\t\tthis.detune = options.detune;\n\n\t\t// setup\n\t\tthis.overlap = options.overlap;\n\t\tthis.loop = options.loop;\n\t\tthis.playbackRate = options.playbackRate;\n\t\tthis.grainSize = options.grainSize;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis.reverse = options.reverse;\n\t\tthis._clock.on(\"stop\", this._onstop.bind(this));\n\t}\n\n\tstatic getDefaults(): GrainPlayerOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\toverlap: 0.1,\n\t\t\tgrainSize: 0.2,\n\t\t\tplaybackRate: 1,\n\t\t\tdetune: 0,\n\t\t\tloop: false,\n\t\t\tloopStart: 0,\n\t\t\tloopEnd: 0,\n\t\t\treverse: false\n\t\t});\n\t}\n\n\t/**\n\t * Internal start method\n\t */\n\tprotected _start(time?: Time, offset?: Time, duration?: Time): void {\n\t\toffset = defaultArg(offset, 0);\n\t\toffset = this.toSeconds(offset);\n\t\ttime = this.toSeconds(time);\n\n\t\tconst grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n\t\tthis._clock.start(time, offset / grainSize);\n\n\t\tif (duration) {\n\t\t\tthis.stop(time + this.toSeconds(duration));\n\t\t}\n\t}\n\n\t/**\n\t * Stop and then restart the player from the beginning (or offset)\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, \n\t * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n\t */\n\trestart(time?: Seconds, offset?: Time, duration?: Time): this {\n\t\tsuper.restart(time, offset, duration);\n\t\treturn this;\n\t}\n\n\tprotected _restart(time?: Seconds, offset?: Time, duration?: Time): void {\n\t\tthis._stop(time);\n\t\tthis._start(time, offset, duration);\n\t}\n\n\t/**\n\t * Internal stop method\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tthis._clock.stop(time);\n\t}\n\n\t/**\n\t * Invoked when the clock is stopped\n\t */\n\tprivate _onstop(time: Seconds): void {\n\t\t// stop the players\n\t\tthis._activeSources.forEach((source) => {\n\t\t\tsource.fadeOut = 0;\n\t\t\tsource.stop(time);\n\t\t});\n\t\tthis.onstop(this);\n\t}\n\n\t/**\n\t * Invoked on each clock tick. scheduled a new grain at this time.\n\t */\n\tprivate _tick(time: Seconds): void {\n\t\t// check if it should stop looping\n\t\tconst ticks = this._clock.getTicksAtTime(time);\n\t\tconst offset = ticks * this._grainSize;\n\t\tthis.log(\"offset\", offset);\n\n\t\tif (!this.loop && offset > this.buffer.duration) {\n\t\t\tthis.stop(time);\n\t\t\treturn;\n\t\t}\n\n\t\t// at the beginning of the file, the fade in should be 0\n\t\tconst fadeIn = offset < this._overlap ? 0 : this._overlap;\n\n\t\t// create a buffer source\n\t\tconst source = new ToneBufferSource({\n\t\t\tcontext: this.context,\n\t\t\turl: this.buffer,\n\t\t\tfadeIn: fadeIn,\n\t\t\tfadeOut: this._overlap,\n\t\t\tloop: this.loop,\n\t\t\tloopStart: this._loopStart,\n\t\t\tloopEnd: this._loopEnd,\n\t\t\t// compute the playbackRate based on the detune\n\t\t\tplaybackRate: intervalToFrequencyRatio(this.detune / 100)\n\t\t}).connect(this.output);\n\n\t\tsource.start(time, this._grainSize * ticks);\n\t\tsource.stop(time + this._grainSize / this.playbackRate);\n\n\t\t// add it to the active sources\n\t\tthis._activeSources.push(source);\n\t\t// remove it when it's done\n\t\tsource.onended = () => {\n\t\t\tconst index = this._activeSources.indexOf(source);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis._activeSources.splice(index, 1);\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * The playback rate of the sample\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tassertRange(rate, 0.001);\n\t\tthis._playbackRate = rate;\n\t\tthis.grainSize = this._grainSize;\n\t}\n\n\t/**\n\t * The loop start time.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(time) {\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(time), 0, this.buffer.duration);\n\t\t}\n\t\tthis._loopStart = this.toSeconds(time);\n\t}\n\n\t/**\n\t * The loop end time.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(time) {\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(time), 0, this.buffer.duration);\n\t\t}\n\t\tthis._loopEnd = this.toSeconds(time);\n\t}\n\n\t/**\n\t * The direction the buffer should play in\n\t */\n\tget reverse() {\n\t\treturn this.buffer.reverse;\n\t}\n\n\tset reverse(rev) {\n\t\tthis.buffer.reverse = rev;\n\t}\n\n\t/**\n\t * The size of each chunk of audio that the\n\t * buffer is chopped into and played back at.\n\t */\n\tget grainSize(): Time {\n\t\treturn this._grainSize;\n\t}\n\tset grainSize(size) {\n\t\tthis._grainSize = this.toSeconds(size);\n\t\tthis._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n\t}\n\n\t/**\n\t * The duration of the cross-fade between successive grains.\n\t */\n\tget overlap(): Time {\n\t\treturn this._overlap;\n\t}\n\tset overlap(time) {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tassertRange(computedTime, 0);\n\t\tthis._overlap = computedTime;\n\t}\n\n\t/**\n\t * If all the buffer is loaded\n\t */\n\tget loaded(): boolean {\n\t\treturn this.buffer.loaded;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.buffer.dispose();\n\t\tthis._clock.dispose();\n\t\tthis._activeSources.forEach((source) => source.dispose());\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * Return the absolute value of an incoming signal.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst abs = new Tone.Abs().toDestination();\n * \tconst signal = new Tone.Signal(1);\n * \tsignal.rampTo(-1, 0.5);\n * \tsignal.connect(abs);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Abs extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Abs\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _abs = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: val => {\n\t\t\tif (Math.abs(val) < 0.001) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn Math.abs(val);\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * The AudioRange input [-1, 1]\n\t */\n\tinput = this._abs;\n\n\t/**\n\t * The output range [0, 1]\n\t */\n\toutput = this._abs;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._abs.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"GainToAudio\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => Math.abs(x) * 2 - 1,\n\t});\n\n\t/**\n\t * The NormalRange input [0, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The AudioRange output [-1, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\nexport class Negate extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Negate\";\n\n\t/**\n\t * negation is done by multiplying by -1\n\t */\n\tprivate _multiply: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: -1,\n\t});\n\n\t/**\n\t * The input and output are equal to the multiply node\n\t */\n\tinput = this._multiply;\n\toutput = this._multiply;\n\n\t/**\n\t * clean up\n\t * @returns {Negate} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._multiply.dispose();\n\t\treturn this;\n\t}\n}\n","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal, SignalOptions } from \"../signal/Signal\";\n\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nexport class Subtract extends Signal {\n\n\toverride = false;\n\n\treadonly name: string = \"Subtract\";\n\n\t/**\n\t * the summing node\n\t */\n\tprivate _sum: Gain = new Gain({ context: this.context });\n\treadonly input: Gain = this._sum;\n\treadonly output: Gain = this._sum;\n\n\t/**\n\t * Negate the input of the second input before connecting it to the summing node.\n\t */\n\tprivate _neg: Negate = new Negate({ context: this.context });\n\n\t/**\n\t * The value which is subtracted from the main signal\n\t */\n\tsubtrahend: Param<\"number\"> = this._param;\n\n\t/**\n\t * @param value The value to subtract from the incoming signal. If the value\n\t *             is omitted, it will subtract the second signal from the first.\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<\"number\">>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n\n\t\tconnectSeries(this._constantSource, this._neg, this._sum);\n\t}\n\n\tstatic getDefaults(): SignalOptions<\"number\"> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._neg.dispose();\n\t\tthis._sum.dispose();\n\t\treturn this;\n\t}\n}\n","import { SignalOperator, SignalOperatorOptions } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n\nexport type GreaterThanZeroOptions = SignalOperatorOptions\n\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * return Tone.Offline(() => {\n * \tconst gt0 = new Tone.GreaterThanZero().toDestination();\n * \tconst sig = new Tone.Signal(0.5).connect(gt0);\n * \tsig.setValueAtTime(-1, 0.05);\n * }, 0.1, 1);\n * @category Signal\n */\nexport class GreaterThanZero extends SignalOperator<GreaterThanZeroOptions> {\n\n\treadonly name: string = \"GreaterThanZero\";\n\n\t/**\n\t * The waveshaper\n\t */\n\tprivate _thresh: WaveShaper;\n\n\t/**\n\t * Scale the first thresholded signal by a large value.\n\t * this will help with values which are very close to 0\n\t */\n\tprivate _scale: Multiply;\n\n\treadonly output: ToneAudioNode;\n\treadonly input: ToneAudioNode;\n\n\tconstructor(options?: Partial<GreaterThanZeroOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments)));\n\n\t\tthis._thresh = this.output = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 127,\n\t\t\tmapping: (val) => {\n\t\t\t\tif (val <= 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis._scale = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 10000\n\t\t});\n\n\t\t// connections\n\t\tthis._scale.connect(this._thresh);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal, SignalOptions } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Param } from \"../core/context/Param\";\n\nexport type GreaterThanOptions = SignalOptions<\"number\">;\n\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n * \n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n * @category Signal\n */\nexport class GreaterThan extends Signal<\"number\"> {\n\n\treadonly name: string = \"GreaterThan\"\n\n\treadonly override: boolean = false;\n\n\treadonly input: ToneAudioNode;\n\treadonly output: ToneAudioNode;\n\n\t/**\n\t * compare that amount to zero after subtracting\n\t */\n\tprivate _gtz: GreaterThanZero;\n\n\t/**\n\t * Subtract the value from the input node\n\t */\n\tprivate _subtract: Subtract;\n\n\t/**\n\t * The signal to compare to the incoming signal against.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \t// change the comparison value\n\t * \tconst gt = new Tone.GreaterThan(1.5).toDestination();\n\t * \tconst signal = new Tone.Signal(1).connect(gt);\n\t * \tgt.comparator.setValueAtTime(0.5, 0.1);\n\t * }, 0.5, 1);\n\t */\n\treadonly comparator: Param<\"number\">\n\n\t/**\n\t * @param value The value to compare to\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<GreaterThanOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._subtract = this.input = new Subtract({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.value\n\t\t});\n\t\tthis._gtz = this.output = new GreaterThanZero({ context: this.context });\n\n\t\tthis.comparator = this._param = this._subtract.subtrahend;\n\t\treadOnly(this, \"comparator\");\n\n\t\t// connect\n\t\tthis._subtract.connect(this._gtz);\n\t}\n\n\tstatic getDefaults(): GreaterThanOptions {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gtz.dispose();\n\t\tthis._subtract.dispose();\n\t\tthis.comparator.dispose();\n\t\treturn this;\n\t}\n}\n","import { WaveShaper, WaveShaperMappingFn } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\n\nexport interface PowOptions extends ToneAudioNodeOptions {\n\tvalue: number;\n}\n\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25. \n * @category Signal\n */\nexport class Pow extends SignalOperator<PowOptions> {\n\n\treadonly name: string = \"Pow\";\n\n\tprivate _exponent: number;\n\n\tprivate _exponentScaler: WaveShaper;\n\n\tinput: WaveShaper;\n\n\toutput: WaveShaper;\n\n\t/**\n\t * @param value Constant exponent value to use\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<PowOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._exponentScaler = this.input = this.output = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tmapping: this._expFunc(options.value),\n\t\t\tlength: 8192,\n\t\t});\n\n\t\tthis._exponent = options.value;\n\t}\n\n\tstatic getDefaults(): PowOptions {\n\t\treturn Object.assign(SignalOperator.getDefaults(), {\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\t/**\n\t * the function which maps the waveshaper\n\t * @param exponent exponent value\n\t */\n\tprivate _expFunc(exponent: number): WaveShaperMappingFn {\n\t\treturn (val: number) => {\n\t\t\treturn Math.pow(Math.abs(val), exponent);\n\t\t};\n\t}\n\n\t/**\n\t * The value of the exponent.\n\t */\n\tget value(): number {\n\t\treturn this._exponent;\n\t}\n\tset value(exponent: number) {\n\t\tthis._exponent = exponent;\n\t\tthis._exponentScaler.setMap(this._expFunc(this._exponent));\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._exponentScaler.dispose();\n\t\treturn this;\n\t}\n}\n","import { Scale, ScaleOptions } from \"./Scale\";\nimport { Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n\nexport interface ScaleExpOptions extends ScaleOptions {\n\texponent: Positive;\n}\n\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n * @category Signal\n */\nexport class ScaleExp extends Scale<ScaleExpOptions> {\n\n\treadonly name: string = \"ScaleExp\";\n\n\t/**\n\t * The exponent scaler\n\t */\n\tprivate _exp: Pow;\n\n\t/**\n\t * @param min The output value when the input is 0.\n\t * @param max The output value when the input is 1.\n\t * @param exponent The exponent which scales the incoming signal.\n\t */\n\tconstructor(min?: number, max?: number, exponent?: number);\n\tconstructor(options?: Partial<ScaleExpOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n\t\tconst options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n\n\t\tthis.input = this._exp = new Pow({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.exponent,\n\t\t});\n\t\tthis._exp.connect(this._mult);\n\t}\n\n\tstatic getDefaults(): ScaleExpOptions {\n\t\treturn Object.assign(Scale.getDefaults(), {\n\t\t\texponent: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Instead of interpolating linearly between the [[min]] and\n\t * [[max]] values, setting the exponent will interpolate between\n\t * the two values with an exponential curve.\n\t */\n\tget exponent(): Positive {\n\t\treturn this._exp.value;\n\t}\n\tset exponent(exp) {\n\t\tthis._exp.value = exp;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._exp.dispose();\n\t\treturn this;\n\t}\n}\n","import { Signal, SignalOptions } from \"./Signal\";\nimport { NormalRange, Seconds, Time, TransportTime, UnitMap, UnitName } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\nimport { OutputNode } from \"../core/context/ToneAudioNode\";\n\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\nexport class SyncedSignal<TypeName extends UnitName = \"number\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"SyncedSignal\";\n\t\n\t/**\n\t * Don't override when something is connected to the input\n\t */\n\treadonly override = false;\n\n\treadonly output: OutputNode;\n\n\t/**\n\t * Keep track of the last value as an optimization.\n\t */\n\tprivate _lastVal: UnitMap[TypeName];\n\n\t/**\n\t * The ID returned from scheduleRepeat\n\t */\n\tprivate _synced: number;\n\n\t/**\n\t * Remember the callback value\n\t */\n\tprivate _syncedCallback: () => void;\n\n\t/**\n\t * @param value Initial value of the signal\n\t * @param units The unit name, e.g. \"frequency\"\n\t */\n\tconstructor(value?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n\t\tconst options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]) as SignalOptions<TypeName>;\n\n\t\tthis._lastVal = options.value;\n\t\tthis._synced = this.context.transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n\n\t\tthis._syncedCallback = this._anchorValue.bind(this);\n\t\tthis.context.transport.on(\"start\", this._syncedCallback);\n\t\tthis.context.transport.on(\"pause\", this._syncedCallback);\n\t\tthis.context.transport.on(\"stop\", this._syncedCallback);\n\n\t\t// disconnect the constant source from the output and replace it with another one\n\t\tthis._constantSource.disconnect();\n\t\tthis._constantSource.stop(0);\n\n\t\t// create a new one\n\t\tthis._constantSource = this.output = new ToneConstantSource<TypeName>({ \n\t\t\tcontext: this.context,\n\t\t\toffset: options.value,\n\t\t\tunits: options.units,\n\t\t}).start(0);\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n\n\t/**\n\t * Callback which is invoked every tick.\n\t */\n\tprivate _onTick(time: Seconds): void {\n\t\tconst val = super.getValueAtTime(this.context.transport.seconds);\n\t\t// approximate ramp curves with linear ramps\n\t\tif (this._lastVal !== val) {\n\t\t\tthis._lastVal = val;\n\t\t\tthis._constantSource.offset.setValueAtTime(val, time);\n\t\t}\n\t}\n\n\t/**\n\t * Anchor the value at the start and stop of the Transport\n\t */\n\tprivate _anchorValue(time: Seconds): void {\n\t\tconst val = super.getValueAtTime(this.context.transport.seconds);\n\t\tthis._lastVal = val;\n\t\tthis._constantSource.offset.cancelAndHoldAtTime(time);\n\t\tthis._constantSource.offset.setValueAtTime(val, time);\n\t}\n\n\tgetValueAtTime(time: TransportTime): UnitMap[TypeName] {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\treturn super.getValueAtTime(computedTime);\n\t}\n\t\n\tsetValueAtTime(value: UnitMap[TypeName], time: TransportTime) {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.setValueAtTime(value, computedTime);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: TransportTime) {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.linearRampToValueAtTime(value, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: TransportTime) {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.exponentialRampToValueAtTime(value, computedTime);\n\t\treturn this;\n\t}\n\n\tsetTargetAtTime(value, startTime: TransportTime, timeConstant: number): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.setTargetAtTime(value, computedTime, timeConstant);\n\t\treturn this;\n\t}\n\n\tcancelScheduledValues(startTime: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.cancelScheduledValues(computedTime);\n\t\treturn this;\n\t}\n\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: TransportTime, duration: Time, scaling: NormalRange): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tduration = this.toSeconds(duration);\n\t\tsuper.setValueCurveAtTime(values, computedTime, duration, scaling);\n\t\treturn this;\n\t}\n\n\tcancelAndHoldAtTime(time: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.cancelAndHoldAtTime(computedTime);\n\t\treturn this;\n\t}\n\t\n\tsetRampPoint(time: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.setRampPoint(computedTime);\n\t\treturn this;\n\t}\n\t\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.exponentialRampTo(value, rampTime, computedTime);\n\t\treturn this;\n\t}\n\t\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.linearRampTo(value, rampTime, computedTime);\n\t\treturn this;\n\t}\n\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.targetRampTo(value, rampTime, computedTime);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.context.transport.clear(this._synced);\n\t\tthis.context.transport.off(\"start\", this._syncedCallback);\n\t\tthis.context.transport.off(\"pause\", this._syncedCallback);\n\t\tthis.context.transport.off(\"stop\", this._syncedCallback);\n\t\tthis._constantSource.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n\ntype BasicEnvelopeCurve = \"linear\" | \"exponential\";\ntype InternalEnvelopeCurve = BasicEnvelopeCurve | number[];\nexport type EnvelopeCurve = EnvelopeCurveName | number[];\n\nexport interface EnvelopeOptions extends ToneAudioNodeOptions {\n\tattack: Time;\n\tdecay: Time;\n\tsustain: NormalRange;\n\trelease: Time;\n\tattackCurve: EnvelopeCurve;\n\treleaseCurve: EnvelopeCurve;\n\tdecayCurve: BasicEnvelopeCurve;\n}\n\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode<EnvelopeOptions> {\n\n\treadonly name: string = \"Envelope\";\n\n\t/**\n\t * When triggerAttack is called, the attack time is the amount of\n\t * time it takes for the envelope to reach it's maximum value.\n\t * ```\n\t *           /\\\n\t *          /X \\\n\t *         /XX  \\\n\t *        /XXX   \\\n\t *       /XXXX    \\___________\n\t *      /XXXXX                \\\n\t *     /XXXXXX                 \\\n\t *    /XXXXXXX                  \\\n\t *   /XXXXXXXX                   \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * After the attack portion of the envelope, the value will fall\n\t * over the duration of the decay time to it's sustain value.\n\t * ```\n\t *           /\\\n\t *          / X\\\n\t *         /  XX\\\n\t *        /   XXX\\\n\t *       /    XXXX\\___________\n\t *      /     XXXXX           \\\n\t *     /      XXXXX            \\\n\t *    /       XXXXX             \\\n\t *   /        XXXXX              \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tdecay: Time;\n\n\t/**\n\t * The sustain value is the value\n\t * which the envelope rests at after triggerAttack is\n\t * called, but before triggerRelease is invoked.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /          XXXXXXXXXXX\\\n\t *     /           XXXXXXXXXXX \\\n\t *    /            XXXXXXXXXXX  \\\n\t *   /             XXXXXXXXXXX   \\\n\t * ```\n\t */\n\t@range(0, 1)\n\tsustain: NormalRange;\n\n\t/**\n\t * After triggerRelease is called, the envelope's\n\t * value will fall to it's miminum value over the\n\t * duration of the release time.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /                    X\\\n\t *     /                     XX\\\n\t *    /                      XXX\\\n\t *   /                       XXXX\\\n\t * ```\n\t * @min 0\n\t * @max 5\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The automation curve type for the attack\n\t */\n\tprivate _attackCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the decay\n\t */\n\tprivate _decayCurve!: BasicEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the release\n\t */\n\tprivate _releaseCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * the signal which is output.\n\t */\n\tprotected _sig: Signal<\"normalRange\"> = new Signal({\n\t\tcontext: this.context,\n\t\tvalue: 0,\n\t});\n\n\t/**\n\t * The output signal of the envelope\n\t */\n\toutput: OutputNode = this._sig;\n\n\t/**\n\t * Envelope has no input\n\t */\n\tinput: InputNode | undefined = undefined;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from\n\t *                        0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tconst options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n\n\t\tthis.attack = options.attack;\n\t\tthis.decay = options.decay;\n\t\tthis.sustain = options.sustain;\n\t\tthis.release = options.release;\n\t\tthis.attackCurve = options.attackCurve;\n\t\tthis.releaseCurve = options.releaseCurve;\n\t\tthis.decayCurve = options.decayCurve;\n\t}\n\n\tstatic getDefaults(): EnvelopeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tattack: 0.01,\n\t\t\tattackCurve: \"linear\" as EnvelopeCurveName,\n\t\t\tdecay: 0.1,\n\t\t\tdecayCurve: \"exponential\" as BasicEnvelopeCurve,\n\t\t\trelease: 1,\n\t\t\treleaseCurve: \"exponential\" as EnvelopeCurveName,\n\t\t\tsustain: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * Read the current value of the envelope. Useful for\n\t * synchronizing visual output to the envelope.\n\t */\n\tget value(): NormalRange {\n\t\treturn this.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Get the curve\n\t * @param  curve\n\t * @param  direction  In/Out\n\t * @return The curve name\n\t */\n\tprivate _getCurve(curve: InternalEnvelopeCurve, direction: EnvelopeDirection): EnvelopeCurve {\n\t\tif (isString(curve)) {\n\t\t\treturn curve;\n\t\t} else {\n\t\t\t// look up the name in the curves array\n\t\t\tlet curveName: EnvelopeCurveName;\n\t\t\tfor (curveName in EnvelopeCurves) {\n\t\t\t\tif (EnvelopeCurves[curveName][direction] === curve) {\n\t\t\t\t\treturn curveName;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the custom curve\n\t\t\treturn curve;\n\t\t}\n\t}\n\n\t/**\n\t * Assign a the curve to the given name using the direction\n\t * @param  name\n\t * @param  direction In/Out\n\t * @param  curve\n\t */\n\tprivate _setCurve(\n\t\tname: \"_attackCurve\" | \"_decayCurve\" | \"_releaseCurve\",\n\t\tdirection: EnvelopeDirection,\n\t\tcurve: EnvelopeCurve,\n\t): void {\n\t\t// check if it's a valid type\n\t\tif (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n\t\t\tconst curveDef = EnvelopeCurves[curve];\n\t\t\tif (isObject(curveDef)) {\n\t\t\t\tif (name !== \"_decayCurve\") {\n\t\t\t\t\tthis[name] = curveDef[direction];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis[name] = curveDef;\n\t\t\t}\n\t\t} else if (isArray(curve) && name !== \"_decayCurve\") {\n\t\t\tthis[name] = curve;\n\t\t} else {\n\t\t\tthrow new Error(\"Envelope: invalid curve: \" + curve);\n\t\t}\n\t}\n\n\t/**\n\t * The shape of the attack.\n\t * Can be any of these strings:\n\t * * \"linear\"\n\t * * \"exponential\"\n\t * * \"sine\"\n\t * * \"cosine\"\n\t * * \"bounce\"\n\t * * \"ripple\"\n\t * * \"step\"\n\t *\n\t * Can also be an array which describes the curve. Values\n\t * in the array are evenly subdivided and linearly\n\t * interpolated over the duration of the attack.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope(0.4).toDestination();\n\t * \tenv.attackCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget attackCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t}\n\tset attackCurve(curve) {\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n\n\t/**\n\t * The shape of the release. See the attack curve types.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\trelease: 0.8\n\t * \t}).toDestination();\n\t * \tenv.triggerAttack();\n\t * \t// release curve could also be defined by an array\n\t * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n\t * \tenv.triggerRelease(0.2);\n\t * }, 1, 1);\n\t */\n\tget releaseCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t}\n\tset releaseCurve(curve) {\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n\n\t/**\n\t * The shape of the decay either \"linear\" or \"exponential\"\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\tsustain: 0.1,\n\t * \t\tdecay: 0.5\n\t * \t}).toDestination();\n\t * \tenv.decayCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget decayCurve(): BasicEnvelopeCurve {\n\t\treturn this._decayCurve;\n\t}\n\tset decayCurve(curve) {\n\t\tassert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n\t\tthis._decayCurve = curve;\n\t}\n\n\t/**\n\t * Trigger the attack/decay portion of the ADSR envelope.\n\t * @param  time When the attack should start.\n\t * @param velocity The velocity of the envelope scales the vales.\n\t *                             number between 0-1\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t * env.triggerAttack(\"+0.5\", 0.2);\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tconst originalAttack = this.toSeconds(this.attack);\n\t\tlet attack = originalAttack;\n\t\tconst decay = this.toSeconds(this.decay);\n\t\t// check if it's not a complete attack\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\t// subtract the current value from the attack time\n\t\t\tconst attackRate = 1 / attack;\n\t\t\tconst remainingDistance = 1 - currentValue;\n\t\t\t// the attack is now the remaining time\n\t\t\tattack = remainingDistance / attackRate;\n\t\t}\n\t\t// attack\n\t\tif (attack < this.sampleTime) {\n\t\t\tthis._sig.cancelScheduledValues(time);\n\t\t\t// case where the attack time is 0 should set instantly\n\t\t\tthis._sig.setValueAtTime(velocity, time);\n\t\t} else if (this._attackCurve === \"linear\") {\n\t\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t\t} else if (this._attackCurve === \"exponential\") {\n\t\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t\t} else {\n\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\tlet curve = this._attackCurve;\n\t\t\t// find the starting position in the curve\n\t\t\tfor (let i = 1; i < curve.length; i++) {\n\t\t\t\t// the starting index is between the two values\n\t\t\t\tif (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n\t\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t\t// the first index is the current value\n\t\t\t\t\tcurve[0] = currentValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t}\n\t\t// decay\n\t\tif (decay && this.sustain < 1) {\n\t\t\tconst decayValue = velocity * this.sustain;\n\t\t\tconst decayStart = time + attack;\n\t\t\tthis.log(\"decay\", decayStart);\n\t\t\tif (this._decayCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n\t\t\t} else {\n\t\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Triggers the release of the envelope.\n\t * @param  time When the release portion of the envelope should start.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator({\n\t * \ttype: \"sawtooth\"\n\t * }).connect(env).start();\n\t * env.triggerAttack();\n\t * // trigger the release half a second after the attack\n\t * env.triggerRelease(\"+0.5\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\tconst release = this.toSeconds(this.release);\n\t\t\tif (release < this.sampleTime) {\n\t\t\t\tthis._sig.setValueAtTime(0, time);\n\t\t\t} else if (this._releaseCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t\t} else if (this._releaseCurve === \"exponential\") {\n\t\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t\t} else {\n\t\t\t\tassert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the scheduled value at the given time. This will\n\t * return the unconverted (raw) value.\n\t * @example\n\t * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n\t * env.triggerAttackRelease(2);\n\t * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n\t */\n\tgetValueAtTime(time: Time): NormalRange {\n\t\treturn this._sig.getValueAtTime(time);\n\t}\n\n\t/**\n\t * triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t * some duration, then triggerRelease.\n\t * @param duration The duration of the sustain.\n\t * @param time When the attack should be triggered.\n\t * @param velocity The velocity of the envelope.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the release 0.5 seconds after the attack\n\t * env.triggerAttackRelease(0.5);\n\t */\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancels all scheduled envelope changes after the given time.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._sig.cancelScheduledValues(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the envelope to a destination node.\n\t */\n\tconnect(destination: InputNode, outputNumber = 0, inputNumber = 0): this {\n\t\tconnectSignal(this, destination, outputNumber, inputNumber);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Render the envelope curve to an array of the given length. \n\t * Good for visualizing the envelope curve. Rescales the duration of the\n\t * envelope to fit the length.\n\t */\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\tconst duration = length / this.context.sampleRate;\n\t\tconst context = new OfflineContext(1, duration, this.context.sampleRate);\n\t\t// normalize the ADSR for the given duration with 20% sustain time\n\t\tconst attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n\t\tconst envelopeDuration = attackPortion + this.toSeconds(this.release);\n\t\tconst sustainTime = envelopeDuration * 0.1;\n\t\tconst totalDuration = envelopeDuration + sustainTime;\n\t\t// @ts-ignore\n\t\tconst clone = new this.constructor(Object.assign(this.get(), {\n\t\t\tattack: duration * this.toSeconds(this.attack) / totalDuration,\n\t\t\tdecay: duration * this.toSeconds(this.decay) / totalDuration,\n\t\t\trelease: duration * this.toSeconds(this.release) / totalDuration,\n\t\t\tcontext\n\t\t})) as Envelope;\n\t\tclone._sig.toDestination();\n\t\tclone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n\t\tconst buffer = await context.render();\n\t\treturn buffer.getChannelData(0);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sig.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface EnvelopeCurveObject {\n\tIn: number[];\n\tOut: number[];\n}\n\ntype EnvelopeDirection = keyof EnvelopeCurveObject;\n\ninterface EnvelopeCurveMap {\n\tlinear: \"linear\";\n\texponential: \"exponential\";\n\tbounce: EnvelopeCurveObject;\n\tcosine: EnvelopeCurveObject;\n\tsine: EnvelopeCurveObject;\n\tripple: EnvelopeCurveObject;\n\tstep: EnvelopeCurveObject;\n}\n\ntype EnvelopeCurveName = keyof EnvelopeCurveMap;\n\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves: EnvelopeCurveMap = (() => {\n\n\tconst curveLen = 128;\n\n\tlet i: number;\n\tlet k: number;\n\n\t// cosine curve\n\tconst cosineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t// ripple curve\n\tconst rippleCurve: number[] = [];\n\tconst rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++) {\n\t\tk = (i / (curveLen - 1));\n\t\tconst sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave / 10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t// stairs curve\n\tconst stairsCurve: number[] = [];\n\tconst steps = 5;\n\tfor (i = 0; i < curveLen; i++) {\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t// in-out easing curve\n\tconst sineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t// a bounce curve\n\tconst bounceCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tconst freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tconst val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t * Invert a value curve to make it work for the release\n\t */\n\tfunction invertCurve(curve: number[]): number[] {\n\t\tconst out = new Array(curve.length);\n\t\tfor (let j = 0; j < curve.length; j++) {\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t * reverse the curve\n\t */\n\tfunction reverseCurve(curve: number[]): number[] {\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t * attack and release curve arrays\n\t */\n\treturn {\n\t\tbounce: {\n\t\t\tIn: invertCurve(bounceCurve),\n\t\t\tOut: bounceCurve,\n\t\t},\n\t\tcosine: {\n\t\t\tIn: cosineCurve,\n\t\t\tOut: reverseCurve(cosineCurve),\n\t\t},\n\t\texponential: \"exponential\" as const,\n\t\tlinear: \"linear\" as const,\n\t\tripple: {\n\t\t\tIn: rippleCurve,\n\t\t\tOut: invertCurve(rippleCurve),\n\t\t},\n\t\tsine: {\n\t\t\tIn: sineCurve,\n\t\t\tOut: invertCurve(sineCurve),\n\t\t},\n\t\tstep: {\n\t\t\tIn: stairsCurve,\n\t\t\tOut: invertCurve(stairsCurve),\n\t\t},\n\t};\n})();\n","import { Volume } from \"../component/channel/Volume\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface InstrumentOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n}\n\n/**\n * Base-class for all instruments\n */\nexport abstract class Instrument<Options extends InstrumentOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output and volume triming node\n\t */\n\tprivate _volume: Volume;\n\toutput: OutputNode;\n\n\t/**\n\t * The instrument only has an output\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const amSynth = new Tone.AMSynth().toDestination();\n\t * amSynth.volume.value = -6;\n\t * amSynth.triggerAttackRelease(\"G#3\", 0.2);\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t */\n\tprivate _scheduledEvents: number[] = [];\n\n\t/**\n\t * If the instrument is currently synced\n\t */\n\tprivate _synced = false;\n\n\tconstructor(options?: Partial<InstrumentOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Instrument.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Instrument.getDefaults(), arguments);\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t}\n\n\tstatic getDefaults(): InstrumentOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Sync the instrument to the Transport. All subsequent calls of\n\t * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n\t * @example\n\t * const fmSynth = new Tone.FMSynth().toDestination();\n\t * fmSynth.volume.value = -6;\n\t * fmSynth.sync();\n\t * // schedule 3 notes when the transport first starts\n\t * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n\t * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n\t * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n\t * // start the transport to hear the notes\n\t * Tone.Transport.start();\n\t */\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\n\t\t\tthis.context.transport.on(\"stop\", this._syncedRelease);\n\t\t\tthis.context.transport.on(\"pause\", this._syncedRelease);\n\t\t\tthis.context.transport.on(\"loopEnd\", this._syncedRelease);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * set _sync\n\t */\n\tprotected _syncState(): boolean {\n\t\tlet changed = false;\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Wrap the given method so that it can be synchronized\n\t * @param method Which method to wrap and sync\n\t * @param  timePosition What position the time argument appears in\n\t */\n\tprotected _syncMethod(method: string, timePosition: number): void {\n\t\tconst originalMethod = this[\"_original_\" + method] = this[method];\n\t\tthis[method] = (...args: any[]) => {\n\t\t\tconst time = args[timePosition];\n\t\t\tconst id = this.context.transport.schedule((t) => {\n\t\t\t\targs[timePosition] = t;\n\t\t\t\toriginalMethod.apply(this, args);\n\t\t\t}, time);\n\t\t\tthis._scheduledEvents.push(id);\n\t\t};\n\t}\n\n\t/**\n\t * Unsync the instrument from the Transport\n\t */\n\tunsync(): this {\n\t\tthis._scheduledEvents.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduledEvents = [];\n\t\tif (this._synced) {\n\t\t\tthis._synced = false;\n\t\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\t\tthis.triggerRelease = this._original_triggerRelease;\n\n\t\t\tthis.context.transport.off(\"stop\", this._syncedRelease);\n\t\t\tthis.context.transport.off(\"pause\", this._syncedRelease);\n\t\t\tthis.context.transport.off(\"loopEnd\", this._syncedRelease);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and then the release after the duration.\n\t * @param  note     The note to trigger.\n\t * @param  duration How long the note should be held for before\n\t *                         triggering the release. This value must be greater than 0.\n\t * @param time  When the note should be triggered.\n\t * @param  velocity The velocity the note should be triggered at.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger \"C4\" for the duration of an 8th note\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\ttriggerAttackRelease(note: Frequency, duration: Time, time?: Time, velocity?: NormalRange): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tthis.triggerAttack(note, computedTime, velocity);\n\t\tthis.triggerRelease(computedTime + computedDuration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the instrument's note.\n\t * @param note the note to trigger\n\t * @param time the time to trigger the note\n\t * @param velocity the velocity to trigger the note (between 0-1)\n\t */\n\tabstract triggerAttack(note: Frequency, time?: Time, velocity?: NormalRange): this;\n\tprivate _original_triggerAttack = this.triggerAttack;\n\n\t/**\n\t * Trigger the release phase of the current note.\n\t * @param time when to trigger the release\n\t */\n\tabstract triggerRelease(...args: any[]): this;\n\tprivate _original_triggerRelease = this.triggerRelease;\n\n\t/**\n\t * The release which is scheduled to the timeline. \n\t */\n\tprotected _syncedRelease = (time: number) => this._original_triggerRelease(time);\n\n\t/**\n\t * clean up\n\t * @returns {Instrument} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.unsync();\n\t\tthis._scheduledEvents = [];\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Cents, Frequency, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { Signal } from \"../signal/Signal\";\nimport { timeRange } from \"../core/util/Decorator\";\n\ntype onSilenceCallback = (instrument: Monophonic<any>) => void;\n\nexport interface MonophonicOptions extends InstrumentOptions {\n\tportamento: Seconds;\n\tonsilence: onSilenceCallback;\n\tdetune: Cents;\n}\n\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport abstract class Monophonic<Options extends MonophonicOptions> extends Instrument<Options> {\n\n\t/**\n\t * The glide time between notes.\n\t */\n\t@timeRange(0)\n\tportamento: Seconds;\n\n\t/**\n\t * Invoked when the release has finished and the output is silent.\n\t */\n\tonsilence: onSilenceCallback;\n\n\t/**\n\t * The instrument's frequency signal.\n\t */\n\tabstract readonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The instrument's detune control signal.\n\t */\n\tabstract readonly detune: Signal<\"cents\">;\n\n\tconstructor(options?: Partial<MonophonicOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Monophonic.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n\n\t\tthis.portamento = options.portamento;\n\t\tthis.onsilence = options.onsilence;\n\t}\n\n\tstatic getDefaults(): MonophonicOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tonsilence: noOp,\n\t\t\tportamento: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack of the note optionally with a given velocity.\n\t * @param  note The note to trigger.\n\t * @param  time When the note should start.\n\t * @param  velocity The velocity determines how \"loud\" the note will be.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger the note a half second from now at half velocity\n\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t */\n\ttriggerAttack(note: Frequency | FrequencyClass, time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", note, time, velocity);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeAttack(seconds, velocity);\n\t\tthis.setNote(note, seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release portion of the envelope.\n\t * @param  time If no time is given, the release happens immediately.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // trigger the release a second from now\n\t * synth.triggerRelease(\"+1\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeRelease(seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal method which starts the envelope attack\n\t */\n\tprotected abstract _triggerEnvelopeAttack(time: Seconds, velocity: NormalRange): void;\n\n\t/**\n\t * Internal method which starts the envelope release\n\t */\n\tprotected abstract _triggerEnvelopeRelease(time: Seconds): void;\n\n\t/**\n\t * Get the level of the output at the given time. Measures\n\t * the envelope(s) value at the time.\n\t * @param time The time to query the envelope value\n\t * @return The output level between 0-1\n\t */\n\tabstract getLevelAtTime(time: Time): NormalRange;\n\n\t/**\n\t * Set the note at the given time. If no time is given, the note\n\t * will set immediately.\n\t * @param note The note to change to.\n\t * @param  time The time when the note should be set.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // change to F#6 in one quarter note from now.\n\t * synth.setNote(\"F#6\", \"+4n\");\n\t */\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n\t\tif (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n\t\t\tconst portTime = this.toSeconds(this.portamento);\n\t\t\tthis.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n\t\t} else {\n\t\t\tthis.frequency.setValueAtTime(computedFrequency, computedTime);\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope, EnvelopeOptions } from \"./Envelope\";\n\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n\n\treadonly name: string = \"AmplitudeEnvelope\";\n\n\tprivate _gainNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\toutput: Gain = this._gainNode;\n\tinput: Gain = this._gainNode;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from 0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tthis._sig.connect(this._gainNode.gain);\n\t\tthis.output = this._gainNode;\n\t\tthis.input = this._gainNode;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { OmniOscillatorOptions, OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic, MonophonicOptions } from \"./Monophonic\";\n\nexport interface SynthOptions extends MonophonicOptions {\n\toscillator: OmniOscillatorSynthOptions;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth<Options extends SynthOptions = SynthOptions> extends Monophonic<Options> {\n\n\treadonly name: string = \"Synth\";\n\n\t/**\n\t * The oscillator.\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The frequency signal\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune signal\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The envelope\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\t/**\n\t * @param options the options available for the synth.\n\t */\n\tconstructor(options?: RecursivePartial<SynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Synth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Synth.getDefaults(), arguments);\n\n\t\tthis.oscillator = new OmniOscillator(Object.assign({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tonstop: () => this.onsilence(this),\n\t\t}, options.oscillator));\n\n\t\tthis.frequency = this.oscillator.frequency;\n\t\tthis.detune = this.oscillator.detune;\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the oscillators to the output\n\t\tthis.oscillator.chain(this.envelope, this.output);\n\t\treadOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): SynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.005,\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\trelease: 1,\n\t\t\t\t\tsustain: 0.3,\n\t\t\t\t},\n\t\t\t),\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"triangle\",\n\t\t\t\t},\n\t\t\t) as OmniOscillatorOptions,\n\t\t});\n\t}\n\n\t/**\n\t * start the attack portion of the envelope\n\t * @param time the time the attack should start\n\t * @param velocity the velocity of the note (0-1)\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.oscillator.start(time);\n\t\t// if there is no release portion, stop the oscillator\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tconst computedAttack = this.toSeconds(this.envelope.attack);\n\t\t\tconst computedDecay = this.toSeconds(this.envelope.decay);\n\t\t\tthis.oscillator.stop(time + computedAttack + computedDecay);\n\t\t}\n\t}\n\n\t/**\n\t * start the release portion of the envelope\n\t * @param time the time the release should start\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): void {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.oscillator.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","import { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { NormalRange, Positive, Seconds, Time } from \"../core/type/Units\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\nimport { Source } from \"../source/Source\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n\nexport interface ModulationSynthOptions extends SynthOptions {\n\tharmonicity: Positive;\n\tmodulationEnvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tmodulation: OmniOscillatorSynthOptions;\n}\n/**\n * Base class for both AM and FM synths\n */\nexport abstract class ModulationSynth<Options extends ModulationSynthOptions> extends Monophonic<Options> {\n\n\treadonly name: string = \"ModulationSynth\";\n\n\t/**\n\t * The carrier voice.\n\t */\n\tprotected _carrier: Synth;\n\n\t/**\n\t * The modulator voice.\n\t */\n\n\tprotected _modulator: Synth;\n\n\t/**\n\t * The carrier's oscillator\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The carrier's envelope\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\t/**\n\t * The modulator's oscillator which is applied to the amplitude of the oscillator\n\t */\n\treadonly modulation: OmniOscillator<any>;\n\n\t/**\n\t * The modulator's envelope\n\t */\n\treadonly modulationEnvelope: AmplitudeEnvelope;\n\n\t/**\n\t * The frequency control\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune in cents\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * Harmonicity is the ratio between the two voices. A harmonicity of\n\t * 1 is no change. Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const amSynth = new Tone.AMSynth().toDestination();\n\t * // pitch the modulator an octave below oscillator\n\t * amSynth.harmonicity.value = 0.5;\n\t * amSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t */\n\treadonly harmonicity: Multiply;\n\n\t/**\n\t * The node where the modulation happens\n\t */\n\tprotected _modulationNode: Gain;\n\n\tconstructor(options?: RecursivePartial<ModulationSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(ModulationSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n\n\t\tthis._carrier = new Synth({\n\t\t\tcontext: this.context,\n\t\t\toscillator: options.oscillator,\n\t\t\tenvelope: options.envelope,\n\t\t\tonsilence: () => this.onsilence(this),\n\t\t\tvolume: -10,\n\t\t});\n\t\tthis._modulator = new Synth({\n\t\t\tcontext: this.context,\n\t\t\toscillator: options.modulation,\n\t\t\tenvelope: options.modulationEnvelope,\n\t\t\tvolume: -10,\n\t\t});\n\n\t\tthis.oscillator = this._carrier.oscillator;\n\t\tthis.envelope = this._carrier.envelope;\n\t\tthis.modulation = this._modulator.oscillator;\n\t\tthis.modulationEnvelope = this._modulator.envelope;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.detune,\n\t\t\tunits: \"cents\"\n\t\t});\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.harmonicity,\n\t\t\tminValue: 0,\n\t\t});\n\t\tthis._modulationNode = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: 0,\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): ModulationSynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tharmonicity: 3,\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [\n\t\t\t\t\t...Object.keys(Source.getDefaults()),\n\t\t\t\t\t\"frequency\",\n\t\t\t\t\t\"detune\"\n\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"sine\"\n\t\t\t\t}\n\t\t\t) as OmniOscillatorSynthOptions,\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tEnvelope.getDefaults(),\n\t\t\t\t\tObject.keys(ToneAudioNode.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.01,\n\t\t\t\t\tdecay: 0.01,\n\t\t\t\t\tsustain: 1,\n\t\t\t\t\trelease: 0.5\n\t\t\t\t}\n\t\t\t),\n\t\t\tmodulation: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [\n\t\t\t\t\t...Object.keys(Source.getDefaults()),\n\t\t\t\t\t\"frequency\",\n\t\t\t\t\t\"detune\"\n\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"square\"\n\t\t\t\t}\n\t\t\t) as OmniOscillatorSynthOptions,\n\t\t\tmodulationEnvelope: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tEnvelope.getDefaults(),\n\t\t\t\t\tObject.keys(ToneAudioNode.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.5,\n\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\tsustain: 1,\n\t\t\t\t\trelease: 0.5\n\t\t\t\t}\n\t\t\t)\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack portion of the note\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// @ts-ignore\n\t\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\t\t// @ts-ignore\n\t\tthis._modulator._triggerEnvelopeAttack(time, velocity);\n\t}\n\n\t/**\n\t * Trigger the release portion of the note\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds) {\n\t\t// @ts-ignore\n\t\tthis._carrier._triggerEnvelopeRelease(time);\n\t\t// @ts-ignore\n\t\tthis._modulator._triggerEnvelopeRelease(time);\n\t\treturn this;\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._modulationNode.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioToGain } from \"../signal/AudioToGain\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth, ModulationSynthOptions } from \"./ModulationSynth\";\n\nexport type AMSynthOptions = ModulationSynthOptions;\n\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n * \n * @category Instrument\n */\nexport class AMSynth extends ModulationSynth<AMSynthOptions> {\n\n\treadonly name: string = \"AMSynth\";\n\n\t/**\n\t * Scale the oscillator from -1,1 to 0-1\n\t */\n\tprivate _modulationScale: AudioToGain;\n\n\tconstructor(options?: RecursivePartial<AMSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(AMSynth.getDefaults(), arguments));\n\n\t\tthis._modulationScale = new AudioToGain({\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\t// control the two voices frequency\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._modulationScale.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Cents, Frequency, GainFactor } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Param } from \"../../core/context/Param\";\nimport { assert } from \"../../core/util/Debug\";\n\nexport interface BiquadFilterOptions extends ToneAudioNodeOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tQ: number;\n\ttype: BiquadFilterType;\n\tgain: GainFactor;\n}\n\n/**\n * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode). \n * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the \"rolloff\" value. \n * @category Component\n */\nexport class BiquadFilter extends ToneAudioNode<BiquadFilterOptions> {\n\treadonly name: string = \"BiquadFilter\";\n\n\treadonly input: BiquadFilterNode;\n\treadonly output: BiquadFilterNode;\n\n\t/**\n\t * The frequency of the filter\n\t */\n\treadonly frequency: Param<\"frequency\">;\n\n\t/**\n\t * A detune value, in cents, for the frequency.\n\t */\n\treadonly detune: Param<\"cents\">;\n\t\n\t/**\n\t * The Q factor of the filter.\n\t * For lowpass and highpass filters the Q value is interpreted to be in dB. \n\t * For these filters the nominal range is [−𝑄𝑙𝑖𝑚,𝑄𝑙𝑖𝑚] where 𝑄𝑙𝑖𝑚 is the largest value for which 10𝑄/20 does not overflow. This is approximately 770.63678.\n\t * For the bandpass, notch, allpass, and peaking filters, this value is a linear value. \n\t * The value is related to the bandwidth of the filter and hence should be a positive value. The nominal range is \n\t * [0,3.4028235𝑒38], the upper limit being the most-positive-single-float.\n\t * This is not used for the lowshelf and highshelf filters.\n\t */\n\treadonly Q: Param<\"number\">;\n\n\t/**\n\t * The gain of the filter. Its value is in dB units. The gain is only used for lowshelf, highshelf, and peaking filters.\n\t */\n\treadonly gain: Param<\"decibels\">;\n\n\tprivate readonly _filter: BiquadFilterNode;\n\n\t/**\n\t * @param frequency The cutoff frequency of the filter.\n\t * @param type The type of filter.\n\t */\n\tconstructor(frequency?: Frequency, type?: BiquadFilterType);\n\tconstructor(options?: Partial<BiquadFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis._filter = this.context.createBiquadFilter();\n\t\tthis.input = this.output = this._filter;\n\n\t\tthis.Q = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"number\",\n\t\t\tvalue: options.Q,\n\t\t\tparam: this._filter.Q,\n\t\t});\n\t\t\n\t\tthis.frequency = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t\tparam: this._filter.frequency,\n\t\t});\n\t\t\n\t\tthis.detune = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t\tparam: this._filter.detune,\n\t\t});\n\t\t\n\t\tthis.gain = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tconvert: false,\n\t\t\tvalue: options.gain,\n\t\t\tparam: this._filter.gain,\n\t\t});\n\n\t\tthis.type = options.type;\n\t}\n\n\tstatic getDefaults(): BiquadFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tQ: 1,\n\t\t\ttype: \"lowpass\" as const,\n\t\t\tfrequency: 350,\n\t\t\tdetune: 0,\n\t\t\tgain: 0,\n\t\t});\n\t}\n\n\t/**\n\t * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the\n\t * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)\n\t */\n\tget type(): BiquadFilterType {\n\t\treturn this._filter.type;\n\t}\n\tset type(type) {\n\t\tconst types: BiquadFilterType[] = [\"lowpass\", \"highpass\", \"bandpass\",\n\t\t\t\"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tassert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n\t\tthis._filter.type = type;\n\t}\n\n\t/**\n\t * Get the frequency response curve. This curve represents how the filter\n\t * responses to frequencies between 20hz-20khz.\n\t * @param  len The number of values to return\n\t * @return The frequency response curve between 20-20kHz\n\t */\n\tgetFrequencyResponse(len = 128): Float32Array {\n\t\t// start with all 1s\n\t\tconst freqValues = new Float32Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst norm = Math.pow(i / len, 2);\n\t\t\tconst freq = norm * (20000 - 20) + 20;\n\t\t\tfreqValues[i] = freq;\n\t\t}\n\t\tconst magValues = new Float32Array(len);\n\t\tconst phaseValues = new Float32Array(len);\n\t\t// clone the filter to remove any connections which may be changing the value\n\t\tconst filterClone = this.context.createBiquadFilter();\n\t\tfilterClone.type = this.type;\n\t\tfilterClone.Q.value = this.Q.value;\n\t\tfilterClone.frequency.value = this.frequency.value as number;\n\t\tfilterClone.gain.value = this.gain.value as number;\n\t\tfilterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\treturn magValues;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._filter.disconnect();\n\t\tthis.Q.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.gain.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Frequency } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\nimport { BiquadFilter, BiquadFilterOptions } from \"./BiquadFilter\";\n\nexport type FilterRollOff = -12 | -24 | -48 | -96;\n\nexport type FilterOptions = BiquadFilterOptions & {\n\trolloff: FilterRollOff;\n}\n\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\nexport class Filter extends ToneAudioNode<FilterOptions> {\n\n\treadonly name: string = \"Filter\";\n\n\treadonly input = new Gain({ context: this.context });\n\treadonly output = new Gain({ context: this.context });\n\tprivate _filters: BiquadFilter[] = [];\n\n\t/**\n\t * the rolloff value of the filter\n\t */\n\tprivate _rolloff!: FilterRollOff;\n\tprivate _type: BiquadFilterType;\n\n\t/**\n\t * The Q or Quality of the filter\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * The cutoff frequency of the filter.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune parameter\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The gain of the filter, only used in certain filter types\n\t */\n\treadonly gain: Signal<\"decibels\">;\n\n\t/**\n\t * @param frequency The cutoff frequency of the filter.\n\t * @param type The type of filter.\n\t * @param rolloff The drop in decibels per octave after the cutoff frequency\n\t */\n\tconstructor(frequency?: Frequency, type?: BiquadFilterType, rolloff?: FilterRollOff);\n\tconstructor(options?: Partial<FilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]));\n\t\tconst options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n\n\t\tthis._filters = [];\n\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.Q,\n\t\t});\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\tthis.gain = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tconvert: false,\n\t\t\tvalue: options.gain,\n\t\t});\n\t\tthis._type = options.type;\n\t\tthis.rolloff = options.rolloff;\n\t\treadOnly(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): FilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tQ: 1,\n\t\t\tdetune: 0,\n\t\t\tfrequency: 350,\n\t\t\tgain: 0,\n\t\t\trolloff: -12 as FilterRollOff,\n\t\t\ttype: \"lowpass\" as BiquadFilterType,\n\t\t});\n\t}\n\n\t/**\n\t * The type of the filter. Types: \"lowpass\", \"highpass\",\n\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n\t */\n\tget type(): BiquadFilterType {\n\t\treturn this._type;\n\t}\n\tset type(type: BiquadFilterType) {\n\t\tconst types: BiquadFilterType[] = [\"lowpass\", \"highpass\", \"bandpass\",\n\t\t\t\"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tassert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n\t\tthis._type = type;\n\t\tthis._filters.forEach(filter => filter.type = type);\n\t}\n\n\t/**\n\t * The rolloff of the filter which is the drop in db\n\t * per octave. Implemented internally by cascading filters.\n\t * Only accepts the values -12, -24, -48 and -96.\n\t */\n\tget rolloff(): FilterRollOff {\n\t\treturn this._rolloff;\n\t}\n\tset rolloff(rolloff) {\n\t\tconst rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10) as FilterRollOff;\n\t\tconst possibilities = [-12, -24, -48, -96];\n\t\tlet cascadingCount = possibilities.indexOf(rolloffNum);\n\t\t// check the rolloff is valid\n\t\tassert(cascadingCount !== -1, `rolloff can only be ${possibilities.join(\", \")}`);\n\t\tcascadingCount += 1;\n\n\t\tthis._rolloff = rolloffNum;\n\t\tthis.input.disconnect();\n\t\tthis._filters.forEach(filter => filter.disconnect());\n\n\t\tthis._filters = new Array(cascadingCount);\n\t\tfor (let count = 0; count < cascadingCount; count++) {\n\t\t\tconst filter = new BiquadFilter({\n\t\t\t\tcontext: this.context,\n\t\t\t});\n\t\t\tfilter.type = this._type;\n\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\tthis.detune.connect(filter.detune);\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tthis.gain.connect(filter.gain);\n\t\t\tthis._filters[count] = filter;\n\t\t}\n\t\tthis._internalChannels = this._filters;\n\t\tconnectSeries(this.input, ...this._internalChannels, this.output);\n\t}\n\n\t/**\n\t * Get the frequency response curve. This curve represents how the filter\n\t * responses to frequencies between 20hz-20khz.\n\t * @param  len The number of values to return\n\t * @return The frequency response curve between 20-20kHz\n\t */\n\tgetFrequencyResponse(len = 128): Float32Array {\n\t\tconst filterClone = new BiquadFilter({\n\t\t\tfrequency: this.frequency.value,\n\t\t\tgain: this.gain.value,\n\t\t\tQ: this.Q.value,\n\t\t\ttype: this._type,\n\t\t\tdetune: this.detune.value,\n\t\t});\n\t\t// start with all 1s\n\t\tconst totalResponse = new Float32Array(len).map(() => 1);\n\t\tthis._filters.forEach(() => {\n\t\t\tconst response = filterClone.getFrequencyResponse(len);\n\t\t\tresponse.forEach((val, i) => totalResponse[i] *= val);\n\t\t});\n\t\tfilterClone.dispose();\n\t\treturn totalResponse;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._filters.forEach(filter => {\n\t\t\tfilter.dispose();\n\t\t});\n\t\twritable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.Q.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Frequency, Hertz, NormalRange, Time } from \"../../core/type/Units\";\nimport { Envelope, EnvelopeOptions } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n\nexport interface FrequencyEnvelopeOptions extends EnvelopeOptions {\n\tbaseFrequency: Frequency;\n\toctaves: number;\n\texponent: number;\n}\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps. \n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n * @category Component\n */\nexport class FrequencyEnvelope extends Envelope {\n\n\treadonly name: string = \"FrequencyEnvelope\";\n\n\t/**\n\t * Private reference to the base frequency as a number\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * The number of octaves\n\t */\n\tprivate _octaves: number;\n\n\t/**\n\t * Internal scaler from 0-1 to the final output range\n\t */\n\tprivate _scale: Scale;\n\n\t/**\n\t * Apply a power curve to the output\n\t */\n\tprivate _exponent: Pow;\n\n\t/**\n\t * @param attack\tthe attack time in seconds\n\t * @param decay\t\tthe decay time in seconds\n\t * @param sustain \ta percentage (0-1) of the full amplitude\n\t * @param release\tthe release time in seconds\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<FrequencyEnvelopeOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tconst options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n\n\t\tthis._octaves = options.octaves;\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\n\t\tthis._exponent = this.input = new Pow({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.exponent\n\t\t});\n\t\tthis._scale = this.output = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmin: this._baseFrequency,\n\t\t\tmax: this._baseFrequency * Math.pow(2, this._octaves),\n\t\t});\n\t\tthis._sig.chain(this._exponent, this._scale);\n\t}\n\n\tstatic getDefaults(): FrequencyEnvelopeOptions {\n\t\treturn Object.assign(Envelope.getDefaults(), {\n\t\t\tbaseFrequency: 200,\n\t\t\texponent: 1,\n\t\t\toctaves: 4,\n\t\t});\n\t}\n\n\t/**\n\t * The envelope's minimum output value. This is the value which it\n\t * starts at.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(min) {\n\t\tconst freq = this.toFrequency(min);\n\t\tassertRange(freq, 0);\n\t\tthis._baseFrequency = freq;\n\t\tthis._scale.min = this._baseFrequency;\n\t\t// update the max value when the min changes\n\t\tthis.octaves = this._octaves;\n\t}\n\n\t/**\n\t * The number of octaves above the baseFrequency that the\n\t * envelope will scale to.\n\t */\n\tget octaves(): number {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves: number) {\n\t\tthis._octaves = octaves;\n\t\tthis._scale.max = this._baseFrequency * Math.pow(2, octaves);\n\t}\n\n\t/**\n\t * The envelope's exponent value.\n\t */\n\tget exponent(): number {\n\t\treturn this._exponent.value;\n\t}\n\tset exponent(exponent) {\n\t\tthis._exponent.value = exponent;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._exponent.dispose();\n\t\tthis._scale.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Filter, FilterOptions } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { Monophonic, MonophonicOptions } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope, FrequencyEnvelopeOptions } from \"../component/envelope/FrequencyEnvelope\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { Signal } from \"../signal/Signal\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\n\nexport interface MonoSynthOptions extends MonophonicOptions {\n\toscillator: OmniOscillatorSynthOptions;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tfilterEnvelope: Omit<FrequencyEnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tfilter: Omit<FilterOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class MonoSynth extends Monophonic<MonoSynthOptions> {\n\n\treadonly name = \"MonoSynth\";\n\n\t/**\n\t * The oscillator.\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune control.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The filter.\n\t */\n\treadonly filter: Filter;\n\n\t/**\n\t * The filter envelope.\n\t */\n\treadonly filterEnvelope: FrequencyEnvelope;\n\n\t/**\n\t * The amplitude envelope.\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\tconstructor(options?: RecursivePartial<MonoSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MonoSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n\n\t\tthis.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tonstop: () => this.onsilence(this),\n\t\t}));\n\t\tthis.frequency = this.oscillator.frequency;\n\t\tthis.detune = this.oscillator.detune;\n\t\tthis.filter = new Filter(Object.assign(options.filter, { context: this.context }));\n\t\tthis.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));\n\n\t\t// connect the oscillators to the output\n\t\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\n\t\t// connect the filter envelope\n\t\tthis.filterEnvelope.connect(this.filter.frequency);\n\n\t\treadOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): MonoSynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.005,\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\trelease: 1,\n\t\t\t\t\tsustain: 0.9,\n\t\t\t\t},\n\t\t\t),\n\t\t\tfilter: Object.assign(\n\t\t\t\tomitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tQ: 1,\n\t\t\t\t\trolloff: -12,\n\t\t\t\t\ttype: \"lowpass\",\n\t\t\t\t},\n\t\t\t),\n\t\t\tfilterEnvelope: Object.assign(\n\t\t\t\tomitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.6,\n\t\t\t\t\tbaseFrequency: 200,\n\t\t\t\t\tdecay: 0.2,\n\t\t\t\t\texponent: 2,\n\t\t\t\t\toctaves: 3,\n\t\t\t\t\trelease: 2,\n\t\t\t\t\tsustain: 0.5,\n\t\t\t\t}\n\t\t\t),\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\ttype: \"sawtooth\",\n\t\t\t\t},\n\t\t\t) as OmniOscillatorSynthOptions,\n\t\t});\n\t}\n\n\t/**\n\t * start the attack portion of the envelope\n\t * @param time the time the attack should start\n\t * @param velocity the velocity of the note (0-1)\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity = 1): void {\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.filterEnvelope.triggerAttack(time);\n\t\tthis.oscillator.start(time);\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tconst computedAttack = this.toSeconds(this.envelope.attack);\n\t\t\tconst computedDecay = this.toSeconds(this.envelope.decay);\n\t\t\tthis.oscillator.stop(time + computedAttack + computedDecay);\n\t\t}\n\t}\n\n\t/**\n\t * start the release portion of the envelope\n\t * @param time the time the release should start\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): void {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.filterEnvelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.oscillator.dispose();\n\t\tthis.envelope.dispose();\n\t\tthis.filterEnvelope.dispose();\n\t\tthis.filter.dispose();\n\t\treturn this;\n\t}\n}\n","import { Monophonic, MonophonicOptions } from \"./Monophonic\";\nimport { MonoSynth, MonoSynthOptions } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain, } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Frequency, NormalRange, Positive, Seconds, Time } from \"../core/type/Units\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Param } from \"../core/context/Param\";\n\nexport interface DuoSynthOptions extends MonophonicOptions {\n\tvoice0: Omit<MonoSynthOptions, keyof MonophonicOptions>;\n\tvoice1: Omit<MonoSynthOptions, keyof MonophonicOptions>;\n\tharmonicity: Positive;\n\tvibratoRate: Frequency;\n\tvibratoAmount: Positive;\n}\n\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * const duoSynth = new Tone.DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\nexport class DuoSynth extends Monophonic<DuoSynthOptions> {\n\n\treadonly name: string = \"DuoSynth\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * the first voice\n\t */\n\treadonly voice0: MonoSynth;\n\n\t/**\n\t * the second voice\n\t */\n\treadonly voice1: MonoSynth;\n\n\t/**\n\t * The amount of vibrato\n\t */\n\tpublic vibratoAmount: Param<\"normalRange\">;\n\n\t/**\n\t * the vibrato frequency\n\t */\n\tpublic vibratoRate: Signal<\"frequency\">;\n\n\t/**\n\t * Harmonicity is the ratio between the two voices. A harmonicity of\n\t * 1 is no change. Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const duoSynth = new Tone.DuoSynth().toDestination();\n\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t * // pitch voice1 an octave below voice0\n\t * duoSynth.harmonicity.value = 0.5;\n\t */\n\tpublic harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * The vibrato LFO.\n\t */\n\tprivate _vibrato: LFO;\n\n\t/**\n\t * the vibrato gain\n\t */\n\tprivate _vibratoGain: Gain<\"normalRange\">;\n\n\tconstructor(options?: RecursivePartial<DuoSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(DuoSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n\n\t\tthis.voice0 = new MonoSynth(Object.assign(options.voice0, {\n\t\t\tcontext: this.context,\n\t\t\tonsilence: () => this.onsilence(this)\n\t\t}));\n\t\tthis.voice1 = new MonoSynth(Object.assign(options.voice1, {\n\t\t\tcontext: this.context,\n\t\t}));\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\tthis._vibrato = new LFO({\n\t\t\tfrequency: options.vibratoRate,\n\t\t\tcontext: this.context,\n\t\t\tmin: -50,\n\t\t\tmax: 50\n\t\t});\n\t\t// start the vibrato immediately\n\t\tthis._vibrato.start();\n\t\tthis.vibratoRate = this._vibrato.frequency;\n\t\tthis._vibratoGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"normalRange\",\n\t\t\tgain: options.vibratoAmount\n\t\t});\n\t\tthis.vibratoAmount = this._vibratoGain.gain;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: 440\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune\n\t\t});\n\n\t\t// control the two voices frequency\n\t\tthis.frequency.connect(this.voice0.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this.voice1.frequency);\n\n\t\tthis._vibrato.connect(this._vibratoGain);\n\t\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\n\t\tthis.detune.fan(this.voice0.detune, this.voice1.detune);\n\n\t\tthis.voice0.connect(this.output);\n\t\tthis.voice1.connect(this.output);\n\n\t\treadOnly(this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n\t}\n\n\tstatic getDefaults(): DuoSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), {\n\t\t\tvibratoAmount: 0.5,\n\t\t\tvibratoRate: 5,\n\t\t\tharmonicity: 1.5,\n\t\t\tvoice0: deepMerge(\n\t\t\t\tomitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tfilterEnvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t},\n\t\t\t\t\tenvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\tvoice1: deepMerge(\n\t\t\t\tomitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())),\n\t\t\t\t{\n\n\t\t\t\t\tfilterEnvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t},\n\t\t\t\t\tenvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t}) as unknown as DuoSynthOptions;\n\t}\n\t/**\n\t * Trigger the attack portion of the note\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// @ts-ignore\n\t\tthis.voice0._triggerEnvelopeAttack(time, velocity);\n\t\t// @ts-ignore\n\t\tthis.voice1._triggerEnvelopeAttack(time, velocity);\n\t}\n\n\t/**\n\t * Trigger the release portion of the note\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds) {\n\t\t// @ts-ignore\n\t\tthis.voice0._triggerEnvelopeRelease(time);\n\t\t// @ts-ignore\n\t\tthis.voice1._triggerEnvelopeRelease(time);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.voice0.dispose();\n\t\tthis.voice1.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._vibrato.dispose();\n\t\tthis.vibratoRate.dispose();\n\t\tthis._vibratoGain.dispose();\n\t\tthis.harmonicity.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth, ModulationSynthOptions } from \"./ModulationSynth\";\n\nexport interface FMSynthOptions extends ModulationSynthOptions {\n\tmodulationIndex: Positive;\n}\n\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n * \n * @category Instrument\n */\n\nexport class FMSynth extends ModulationSynth<FMSynthOptions> {\n\treadonly name: string = \"FMSynth\";\n\n\t/**\n\t * The modulation index which essentially the depth or amount of the modulation. It is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t */\n\treadonly modulationIndex: Multiply;\n\n\tconstructor(options?: RecursivePartial<FMSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FMSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n\n\t\tthis.modulationIndex = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.modulationIndex,\n\t\t});\n\n\t\t// control the two voices frequency\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t}\n\n\tstatic getDefaults(): FMSynthOptions {\n\t\treturn Object.assign(ModulationSynth.getDefaults(), {\n\t\t\tmodulationIndex: 10,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.modulationIndex.dispose();\n\t\treturn this;\n\t}\n}\n","import { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport {\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport {\n\tFrequency,\n\tNormalRange,\n\tPositive,\n\tSeconds,\n\tTime,\n} from \"../core/type/Units\";\nimport {\n\tdeepMerge,\n\tomitFromObject,\n\toptionsFromArguments,\n} from \"../core/util/Defaults\";\nimport { noOp, RecursivePartial } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic, MonophonicOptions } from \"./Monophonic\";\n\nexport interface MetalSynthOptions extends MonophonicOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\toctaves: number;\n\tresonance: Frequency;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\nconst inharmRatios: number[] = [1.0, 1.483, 1.932, 2.546, 2.63, 3.897];\n\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * @category Instrument\n */\nexport class MetalSynth extends Monophonic<MetalSynthOptions> {\n\treadonly name: string = \"MetalSynth\";\n\n\t/**\n\t * The frequency of the cymbal\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune applied to the oscillators\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The array of FMOscillators\n\t */\n\tprivate _oscillators: FMOscillator[] = [];\n\n\t/**\n\t * The frequency multipliers\n\t */\n\tprivate _freqMultipliers: Multiply[] = [];\n\n\t/**\n\t * The gain node for the envelope.\n\t */\n\tprivate _amplitude: Gain;\n\n\t/**\n\t * Highpass the output\n\t */\n\tprivate _highpass: Filter;\n\n\t/**\n\t * The number of octaves the highpass\n\t * filter frequency ramps\n\t */\n\tprivate _octaves: number;\n\n\t/**\n\t * Scale the body envelope for the highpass filter\n\t */\n\tprivate _filterFreqScaler: Scale;\n\n\t/**\n\t * The envelope which is connected both to the\n\t * amplitude and a highpass filter's cutoff frequency.\n\t * The lower-limit of the filter is controlled by the [[resonance]]\n\t */\n\treadonly envelope: Envelope;\n\n\tconstructor(options?: RecursivePartial<MetalSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MetalSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(\n\t\t\tMetalSynth.getDefaults(),\n\t\t\targuments\n\t\t);\n\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t});\n\n\t\tthis._amplitude = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: 0,\n\t\t}).connect(this.output);\n\n\t\tthis._highpass = new Filter({\n\t\t\t// Q: -3.0102999566398125,\n\t\t\tQ: 0,\n\t\t\tcontext: this.context,\n\t\t\ttype: \"highpass\",\n\t\t}).connect(this._amplitude);\n\n\t\tfor (let i = 0; i < inharmRatios.length; i++) {\n\t\t\tconst osc = new FMOscillator({\n\t\t\t\tcontext: this.context,\n\t\t\t\tharmonicity: options.harmonicity,\n\t\t\t\tmodulationIndex: options.modulationIndex,\n\t\t\t\tmodulationType: \"square\",\n\t\t\t\tonstop: i === 0 ? () => this.onsilence(this) : noOp,\n\t\t\t\ttype: \"square\",\n\t\t\t});\n\t\t\tosc.connect(this._highpass);\n\t\t\tthis._oscillators[i] = osc;\n\n\t\t\tconst mult = new Multiply({\n\t\t\t\tcontext: this.context,\n\t\t\t\tvalue: inharmRatios[i],\n\t\t\t});\n\t\t\tthis._freqMultipliers[i] = mult;\n\t\t\tthis.frequency.chain(mult, osc.frequency);\n\t\t\tthis.detune.connect(osc.detune);\n\t\t}\n\n\t\tthis._filterFreqScaler = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmax: 7000,\n\t\t\tmin: this.toFrequency(options.resonance),\n\t\t});\n\n\t\tthis.envelope = new Envelope({\n\t\t\tattack: options.envelope.attack,\n\t\t\tattackCurve: \"linear\",\n\t\t\tcontext: this.context,\n\t\t\tdecay: options.envelope.decay,\n\t\t\trelease: options.envelope.release,\n\t\t\tsustain: 0,\n\t\t});\n\n\t\tthis.envelope.chain(this._filterFreqScaler, this._highpass.frequency);\n\t\tthis.envelope.connect(this._amplitude.gain);\n\t\t// set the octaves\n\t\tthis._octaves = options.octaves;\n\t\tthis.octaves = options.octaves;\n\t}\n\n\tstatic getDefaults(): MetalSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tEnvelope.getDefaults(),\n\t\t\t\t\tObject.keys(ToneAudioNode.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.001,\n\t\t\t\t\tdecay: 1.4,\n\t\t\t\t\trelease: 0.2,\n\t\t\t\t}\n\t\t\t),\n\t\t\tharmonicity: 5.1,\n\t\t\tmodulationIndex: 32,\n\t\t\toctaves: 1.5,\n\t\t\tresonance: 4000,\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack.\n\t * @param time When the attack should be triggered.\n\t * @param velocity The velocity that the envelope should be triggered at.\n\t */\n\tprotected _triggerEnvelopeAttack(\n\t\ttime: Seconds,\n\t\tvelocity: NormalRange = 1\n\t): this {\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis._oscillators.forEach((osc) => osc.start(time));\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tthis._oscillators.forEach((osc) => {\n\t\t\t\tosc.stop(\n\t\t\t\t\ttime +\n\t\t\t\t\t\tthis.toSeconds(this.envelope.attack) +\n\t\t\t\t\t\tthis.toSeconds(this.envelope.decay)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release of the envelope.\n\t * @param time When the release should be triggered.\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): this {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis._oscillators.forEach((osc) =>\n\t\t\tosc.stop(time + this.toSeconds(this.envelope.release))\n\t\t);\n\t\treturn this;\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\t/**\n\t * The modulationIndex of the oscillators which make up the source.\n\t * see [[FMOscillator.modulationIndex]]\n\t * @min 1\n\t * @max 100\n\t */\n\tget modulationIndex(): number {\n\t\treturn this._oscillators[0].modulationIndex.value;\n\t}\n\tset modulationIndex(val) {\n\t\tthis._oscillators.forEach((osc) => (osc.modulationIndex.value = val));\n\t}\n\n\t/**\n\t * The harmonicity of the oscillators which make up the source.\n\t * see Tone.FMOscillator.harmonicity\n\t * @min 0.1\n\t * @max 10\n\t */\n\tget harmonicity(): number {\n\t\treturn this._oscillators[0].harmonicity.value;\n\t}\n\tset harmonicity(val) {\n\t\tthis._oscillators.forEach((osc) => (osc.harmonicity.value = val));\n\t}\n\n\t/**\n\t * The lower level of the highpass filter which is attached to the envelope.\n\t * This value should be between [0, 7000]\n\t * @min 0\n\t * @max 7000\n\t */\n\tget resonance(): Frequency {\n\t\treturn this._filterFreqScaler.min;\n\t}\n\tset resonance(val) {\n\t\tthis._filterFreqScaler.min = this.toFrequency(val);\n\t\tthis.octaves = this._octaves;\n\t}\n\n\t/**\n\t * The number of octaves above the \"resonance\" frequency\n\t * that the filter ramps during the attack/decay envelope\n\t * @min 0\n\t * @max 8\n\t */\n\tget octaves(): number {\n\t\treturn this._octaves;\n\t}\n\tset octaves(val) {\n\t\tthis._octaves = val;\n\t\tthis._filterFreqScaler.max =\n\t\t\tthis._filterFreqScaler.min * Math.pow(2, val);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._oscillators.forEach((osc) => osc.dispose());\n\t\tthis._freqMultipliers.forEach((freqMult) => freqMult.dispose());\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._filterFreqScaler.dispose();\n\t\tthis._amplitude.dispose();\n\t\tthis.envelope.dispose();\n\t\tthis._highpass.dispose();\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Positive, Time } from \"../core/type/Units\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n\nexport interface MembraneSynthOptions extends SynthOptions {\n\tpitchDecay: Time;\n\toctaves: Positive;\n}\n\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth<MembraneSynthOptions> {\n\n\treadonly name: string = \"MembraneSynth\";\n\n\t/**\n\t * The number of octaves the pitch envelope ramps.\n\t * @min 0.5\n\t * @max 8\n\t */\n\t@range(0)\n\toctaves: Positive;\n\n\t/**\n\t * The amount of time the frequency envelope takes.\n\t * @min 0\n\t * @max 0.5\n\t */\n\t@timeRange(0)\n\tpitchDecay: Time;\n\n\t/**\n\t * Portamento is ignored in this synth. use pitch decay instead.\n\t */\n\treadonly portamento = 0;\n\n\t/**\n\t * @param options the options available for the synth see defaults\n\t */\n\tconstructor(options?: RecursivePartial<MembraneSynthOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n\n\t\tthis.pitchDecay = options.pitchDecay;\n\t\tthis.octaves = options.octaves;\n\t\treadOnly(this, [\"oscillator\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): MembraneSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n\t\t\tenvelope: {\n\t\t\t\tattack: 0.001,\n\t\t\t\tattackCurve: \"exponential\",\n\t\t\t\tdecay: 0.4,\n\t\t\t\trelease: 1.4,\n\t\t\t\tsustain: 0.01,\n\t\t\t},\n\t\t\toctaves: 10,\n\t\t\toscillator: {\n\t\t\t\ttype: \"sine\",\n\t\t\t},\n\t\t\tpitchDecay: 0.05,\n\t\t});\n\t}\n\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst seconds = this.toSeconds(time);\n\t\tconst hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n\t\tconst maxNote = hertz * this.octaves;\n\t\tthis.oscillator.frequency.setValueAtTime(maxNote, seconds);\n\t\tthis.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Noise, NoiseOptions } from \"../source/Noise\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\nimport {\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n\nexport interface NoiseSynthOptions extends InstrumentOptions {\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tnoise: Omit<NoiseOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].\n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nexport class NoiseSynth extends Instrument<NoiseSynthOptions> {\n\treadonly name = \"NoiseSynth\";\n\n\t/**\n\t * The noise source.\n\t */\n\treadonly noise: Noise;\n\n\t/**\n\t * The amplitude envelope.\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\tconstructor(options?: RecursivePartial<NoiseSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(\n\t\t\tNoiseSynth.getDefaults(),\n\t\t\targuments\n\t\t);\n\t\tthis.noise = new Noise(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t},\n\t\t\t\toptions.noise\n\t\t\t)\n\t\t);\n\n\t\tthis.envelope = new AmplitudeEnvelope(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t},\n\t\t\t\toptions.envelope\n\t\t\t)\n\t\t);\n\n\t\t// connect the noise to the output\n\t\tthis.noise.chain(this.envelope, this.output);\n\t}\n\n\tstatic getDefaults(): NoiseSynthOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tEnvelope.getDefaults(),\n\t\t\t\t\tObject.keys(ToneAudioNode.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\tsustain: 0.0,\n\t\t\t\t}\n\t\t\t),\n\t\t\tnoise: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tNoise.getDefaults(),\n\t\t\t\t\tObject.keys(Source.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\ttype: \"white\",\n\t\t\t\t}\n\t\t\t),\n\t\t});\n\t}\n\n\t/**\n\t * Start the attack portion of the envelopes. Unlike other\n\t * instruments, Tone.NoiseSynth doesn't have a note.\n\t * @example\n\t * const noiseSynth = new Tone.NoiseSynth().toDestination();\n\t * noiseSynth.triggerAttack();\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t// start the noise\n\t\tthis.noise.start(time);\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tthis.noise.stop(\n\t\t\t\ttime +\n\t\t\t\t\tthis.toSeconds(this.envelope.attack) +\n\t\t\t\t\tthis.toSeconds(this.envelope.decay)\n\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the release portion of the envelopes.\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.noise.stop(time + this.toSeconds(this.envelope.release));\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 0);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and then the release after the duration.\n\t * @param duration The amount of time to hold the note for\n\t * @param time The time the note should start\n\t * @param velocity The volume of the note (0-1)\n\t * @example\n\t * const noiseSynth = new Tone.NoiseSynth().toDestination();\n\t * // hold the note for 0.5 seconds\n\t * noiseSynth.triggerAttackRelease(0.5);\n\t */\n\ttriggerAttackRelease(\n\t\tduration: Time,\n\t\ttime?: Time,\n\t\tvelocity: NormalRange = 1\n\t): this {\n\t\ttime = this.toSeconds(time);\n\t\tduration = this.toSeconds(duration);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + duration);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.noise.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext: Set<string> = new Set();\n\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction: string) {\n\tworkletContext.add(classOrFunction);\n}\n\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name: string, classDesc: string) {\n\tconst processor = /* javascript */`registerProcessor(\"${name}\", ${classDesc})`;\n\tworkletContext.add(processor);\n}\n\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope(): string {\n\treturn Array.from(workletContext).join(\"\\n\");\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\n\nexport type ToneAudioWorkletOptions = ToneAudioNodeOptions;\n\nexport abstract class ToneAudioWorklet<Options extends ToneAudioWorkletOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"ToneAudioWorklet\";\n\n\t/**\n\t * The processing node\n\t */\n\tprotected _worklet!: AudioWorkletNode;\n\n\t/**\n\t * A dummy gain node to create a dummy audio param from\n\t */\n\tprivate _dummyGain: GainNode;\n\n\t/**\n\t * A dummy audio param to use when creating Params\n\t */\n\tprotected _dummyParam: AudioParam;\n\n\t/**\n\t * The constructor options for the node\n\t */\n\tprotected workletOptions: Partial<AudioWorkletNodeOptions> = {};\n\n\t/**\n\t * Get the name of the audio worklet\n\t */\n\tprotected abstract _audioWorkletName(): string;\n\n\t/**\n\t * Invoked when the module is loaded and the node is created\n\t */\n\tprotected abstract onReady(node: AudioWorkletNode): void;\n\n\t/**\n\t * Callback which is invoked when there is an error in the processing\n\t */\n\tonprocessorerror: (e: string) => void = noOp;\n\n\tconstructor(options: Options) {\n\t\tsuper(options);\n\n\t\tconst blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n\t\tconst name = this._audioWorkletName();\n\n\t\tthis._dummyGain = this.context.createGain();\n\t\tthis._dummyParam = this._dummyGain.gain;\n\n\t\t// Register the processor\n\t\tthis.context.addAudioWorkletModule(blobUrl).then(() => {\n\t\t\t// create the worklet when it's read\n\t\t\tif (!this.disposed) {\n\t\t\t\tthis._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n\t\t\t\tthis._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n\t\t\t\tthis.onReady(this._worklet);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dummyGain.disconnect();\n\t\tif (this._worklet) {\n\t\t\tthis._worklet.port.postMessage(\"dispose\");\n\t\t\tthis._worklet.disconnect();\n\t\t}\n\t\treturn this;\n\t}\n\n}\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n\naddToWorklet(toneAudioWorkletProcessor);\n","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\n\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\n\naddToWorklet(singleIOProcess);\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\n\naddToWorklet(delayLine);\n","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"feedback-comb-filter\";\n\nconst feedbackCombFilter = /* javascript */`\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, feedbackCombFilter);\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n\nexport interface FeedbackCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n}\n\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n * \n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the \n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the \n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode. \n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet<FeedbackCombFilterOptions> {\n\n\treadonly name = \"FeedbackCombFilter\";\n\n\t/**\n\t * The amount of delay of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param delayTime The delay time of the filter.\n\t * @param resonance The amount of feedback the filter has.\n\t */\n\tconstructor(delayTime?: Time, resonance?: NormalRange);\n\tconstructor(options?: RecursivePartial<FeedbackCombFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n\t\tconst options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.delayTime = new Param<\"time\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tminValue: 0,\n\t\t\tmaxValue: 1,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\tthis.resonance = new Param<\"normalRange\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.resonance,\n\t\t\tunits: \"normalRange\",\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\treadOnly(this, [\"resonance\", \"delayTime\"]);\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\t/**\n\t * The default parameters\n\t */\n\tstatic getDefaults(): FeedbackCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst delayTime = node.parameters.get(\"delayTime\") as AudioParam;\n\t\tthis.delayTime.setParam(delayTime);\n\t\tconst feedback = node.parameters.get(\"feedback\") as AudioParam;\n\t\tthis.resonance.setParam(feedback);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.delayTime.dispose();\n\t\tthis.resonance.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Frequency } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport type OnePoleFilterType = \"highpass\" | \"lowpass\";\n\nexport interface OnePoleFilterOptions extends ToneAudioNodeOptions {\n\tfrequency: Frequency;\n\ttype: OnePoleFilterType;\n}\n\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\". \n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop. \n * References: \n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/  \n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\nexport class OnePoleFilter extends ToneAudioNode<OnePoleFilterOptions> {\n\t\n\treadonly name: string = \"OnePoleFilter\";\n\n\t/**\n\t * Hold the current frequency\n\t */\n\tprivate _frequency: Frequency;\n\n\t/**\n\t * the current one pole type\n\t */\n\tprivate _type: OnePoleFilterType;\n\n\t/**\n\t * the current one pole filter\n\t */\n\tprivate _filter!: IIRFilterNode;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param frequency The frequency\n\t * @param type The  filter type, either \"lowpass\" or \"highpass\"\n\t */\n\tconstructor(frequency?: Frequency, type?: OnePoleFilterType);\n\tconstructor(options?: Partial<OnePoleFilterOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis._frequency = options.frequency;\n\t\tthis._type = options.type;\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\t\tthis._createFilter();\n\t}\n\n\tstatic getDefaults(): OnePoleFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tfrequency: 880,\n\t\t\ttype: \"lowpass\" as OnePoleFilterType\n\t\t});\n\t}\n\n\t/**\n\t * Create a filter and dispose the old one\n\t */\n\tprivate _createFilter() {\n\t\tconst oldFilter = this._filter;\n\t\tconst freq = this.toFrequency(this._frequency);\n\t\tconst t = 1 / (2 * Math.PI * freq);\n\t\tif (this._type === \"lowpass\") {\n\t\t\tconst a0 = 1 / (t * this.context.sampleRate);\n\t\t\tconst b1 = a0 - 1;\n\t\t\tthis._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n\t\t} else {\n\t\t\tconst b1 = 1 / (t * this.context.sampleRate) - 1;\n\t\t\tthis._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n\t\t}\n\t\t\n\t\tthis.input.chain(this._filter, this.output);\n\t\tif (oldFilter) {\n\t\t\t// dispose it on the next block\n\t\t\tthis.context.setTimeout(() => {\n\t\t\t\tif (!this.disposed) {\n\t\t\t\t\tthis.input.disconnect(oldFilter);\n\t\t\t\t\toldFilter.disconnect();\n\t\t\t\t}\n\t\t\t}, this.blockTime);\n\t\t}\n\t}\n\n\t/**\n\t * The frequency value. \n\t */\n\tget frequency(): Frequency {\n\t\treturn this._frequency;\n\t}\n\tset frequency(fq) {\n\t\tthis._frequency = fq;\n\t\tthis._createFilter();\n\t}\n\t\n\t/**\n\t * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n\t */\n\tget type(): OnePoleFilterType {\n\t\treturn this._type;\n\t}\n\tset type(t) {\n\t\tthis._type = t;\n\t\tthis._createFilter();\n\t}\n\n\t/**\n\t * Get the frequency response curve. This curve represents how the filter\n\t * responses to frequencies between 20hz-20khz.\n\t * @param  len The number of values to return\n\t * @return The frequency response curve between 20-20kHz\n\t */\n\tgetFrequencyResponse(len = 128): Float32Array {\n\t\tconst freqValues = new Float32Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst norm = Math.pow(i / len, 2);\n\t\t\tconst freq = norm * (20000 - 20) + 20;\n\t\t\tfreqValues[i] = freq;\n\t\t}\n\t\tconst magValues = new Float32Array(len);\n\t\tconst phaseValues = new Float32Array(len);\n\t\tthis._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\treturn magValues;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis._filter.disconnect();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Frequency, NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { RecursivePartial } from \"../../core/util/Interface\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n\ninterface LowpassCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n\tdampening: Frequency;\n}\n\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode<LowpassCombFilterOptions> {\n\n\treadonly name = \"LowpassCombFilter\";\n\n\t/**\n\t * The delay node\n\t */\n\tprivate _combFilter: FeedbackCombFilter;\n\n\t/**\n\t * The lowpass filter\n\t */\n\tprivate _lowpass: OnePoleFilter;\n\n\t/**\n\t * The delayTime of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * @param delayTime The delay time of the comb filter\n\t * @param resonance The resonance (feedback) of the comb filter\n\t * @param dampening The cutoff of the lowpass filter dampens the signal as it is fedback.\n\t */\n\tconstructor(delayTime?: Time, resonance?: NormalRange, dampening?: Frequency);\n\tconstructor(options?: RecursivePartial<LowpassCombFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]));\n\t\tconst options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n\n\t\tthis._combFilter = this.output = new FeedbackCombFilter({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tresonance: options.resonance,\n\t\t});\n\t\tthis.delayTime = this._combFilter.delayTime;\n\t\tthis.resonance = this._combFilter.resonance;\n\n\t\tthis._lowpass = this.input = new OnePoleFilter({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.dampening,\n\t\t\ttype: \"lowpass\",\n\t\t});\n\n\t\t// connections\n\t\tthis._lowpass.connect(this._combFilter);\n\t}\n\n\tstatic getDefaults(): LowpassCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdampening: 3000,\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\t\n\t/**\n\t * The dampening control of the feedback\n\t */\n\tget dampening(): Frequency {\n\t\treturn this._lowpass.frequency;\n\t}\n\tset dampening(fq) {\n\t\tthis._lowpass.frequency = fq;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._combFilter.dispose();\n\t\tthis._lowpass.dispose();\n\t\treturn this;\n\t}\n}\n","import { Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\n\nexport interface PluckSynthOptions extends InstrumentOptions {\n\tattackNoise: number;\n\tdampening: Frequency;\n\tresonance: NormalRange;\n\trelease: Time;\n}\n\n/**\n * Karplus-Strong string synthesis.\n * @example\n * const plucky = new Tone.PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\nexport class PluckSynth extends Instrument<PluckSynthOptions> {\n\n\treadonly name = \"PluckSynth\";\n\n\t/**\n\t * Noise burst at the beginning\n\t */\n\tprivate _noise: Noise;\n\tprivate _lfcf: LowpassCombFilter;\n\n\t/**\n\t * The amount of noise at the attack.\n\t * Nominal range of [0.1, 20]\n\t * @min 0.1\n\t * @max 20\n\t */\n\tattackNoise: number;\n\n\t/**\n\t * The amount of resonance of the pluck. Also correlates to the sustain duration.\n\t */\n\tresonance: NormalRange;\n\n\t/**\n\t * The release time which corresponds to a resonance ramp down to 0\n\t */\n\trelease: Time;\n\n\tconstructor(options?: RecursivePartial<PluckSynthOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PluckSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n\n\t\tthis._noise = new Noise({\n\t\t\tcontext: this.context,\n\t\t\ttype: \"pink\"\n\t\t});\n\n\t\tthis.attackNoise = options.attackNoise;\n\n\t\tthis._lfcf = new LowpassCombFilter({\n\t\t\tcontext: this.context,\n\t\t\tdampening: options.dampening,\n\t\t\tresonance: options.resonance,\n\t\t});\n\n\t\tthis.resonance = options.resonance;\n\t\tthis.release = options.release;\n\n\t\tthis._noise.connect(this._lfcf);\n\t\tthis._lfcf.connect(this.output);\n\t}\n\n\tstatic getDefaults(): PluckSynthOptions {\n\t\treturn deepMerge(Instrument.getDefaults(), {\n\t\t\tattackNoise: 1,\n\t\t\tdampening: 4000,\n\t\t\tresonance: 0.7,\n\t\t\trelease: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t * @min 0\n\t * @max 7000\n\t */\n\tget dampening(): Frequency {\n\t\treturn this._lfcf.dampening;\n\t}\n\tset dampening(fq) {\n\t\tthis._lfcf.dampening = fq;\n\t}\n\n\ttriggerAttack(note: Frequency, time?: Time): this {\n\t\tconst freq = this.toFrequency(note);\n\t\ttime = this.toSeconds(time);\n\t\tconst delayAmount = 1 / freq;\n\t\tthis._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t\tthis._noise.start(time);\n\t\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\t\tthis._lfcf.resonance.cancelScheduledValues(time);\n\t\tthis._lfcf.resonance.setValueAtTime(this.resonance, time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Ramp down the [[resonance]] to 0 over the duration of the release time.\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis._lfcf.resonance.linearRampTo(0, this.release, time);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._noise.dispose();\n\t\tthis._lfcf.dispose();\n\t\treturn this;\n\t}\n}\n","import { MidiClass } from \"../core/type/Midi\";\nimport { Frequency, MidiNote, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\nimport { MembraneSynth, MembraneSynthOptions } from \"./MembraneSynth\";\nimport { FMSynth, FMSynthOptions } from \"./FMSynth\";\nimport { AMSynth, AMSynthOptions } from \"./AMSynth\";\nimport { MonoSynth, MonoSynthOptions } from \"./MonoSynth\";\nimport { MetalSynth, MetalSynthOptions } from \"./MetalSynth\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n\ntype VoiceConstructor<V> = {\n\tgetDefaults: () => VoiceOptions<V>;\n} & (new (...args: any[]) => V);\n\ntype OmitMonophonicOptions<T> = Omit<T, \"context\" | \"onsilence\">;\n\ntype VoiceOptions<T> =\n\tT extends MembraneSynth ? MembraneSynthOptions :\n\t\tT extends MetalSynth ? MetalSynthOptions :\n\t\t\tT extends FMSynth ? FMSynthOptions :\n\t\t\t\tT extends MonoSynth ? MonoSynthOptions :\n\t\t\t\t\tT extends AMSynth ? AMSynthOptions :\n\t\t\t\t\t\tT extends Synth ? SynthOptions :\n\t\t\t\t\t\t\tT extends Monophonic<infer U> ? U :\n\t\t\t\t\t\t\t\tnever;\n\n/**\n * The settable synth options. excludes monophonic options.\n */\ntype PartialVoiceOptions<T> = RecursivePartial<OmitMonophonicOptions<VoiceOptions<T>>>;\n\nexport interface PolySynthOptions<Voice> extends InstrumentOptions {\n\tmaxPolyphony: number;\n\tvoice: VoiceConstructor<Voice>;\n\toptions: PartialVoiceOptions<Voice>;\n}\n\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second parameter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nexport class PolySynth<Voice extends Monophonic<any> = Synth> extends Instrument<VoiceOptions<Voice>> {\n\n\treadonly name: string = \"PolySynth\";\n\n\t/**\n\t * The voices which are not currently in use\n\t */\n\tprivate _availableVoices: Voice[] = [];\n\n\t/**\n\t * The currently active voices\n\t */\n\tprivate _activeVoices: Array<{ midi: MidiNote; voice: Voice; released: boolean }> = [];\n\n\t/**\n\t * All of the allocated voices for this synth.\n\t */\n\tprivate _voices: Voice[] = [];\n\n\t/**\n\t * The options that are set on the synth.\n\t */\n\tprivate options: VoiceOptions<Voice>;\n\n\t/**\n\t * The polyphony limit.\n\t */\n\tmaxPolyphony: number;\n\n\t/**\n\t * The voice constructor\n\t */\n\tprivate readonly voice: VoiceConstructor<Voice>;\n\n\t/**\n\t * A voice used for holding the get/set values\n\t */\n\tprivate _dummyVoice: Voice;\n\n\t/**\n\t * The GC timeout. Held so that it could be cancelled when the node is disposed.\n\t */\n\tprivate _gcTimeout = -1;\n\n\t/**\n\t * A moving average of the number of active voices\n\t */\n\tprivate _averageActiveVoices = 0;\n\n\t/**\n\t * @param voice The constructor of the voices\n\t * @param options\tThe options object to set the synth voice\n\t */\n\tconstructor(\n\t\tvoice?: VoiceConstructor<Voice>,\n\t\toptions?: PartialVoiceOptions<Voice>,\n\t);\n\tconstructor(options?: Partial<PolySynthOptions<Voice>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n\t\tconst options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n\n\t\t// check against the old API (pre 14.3.0)\n\t\tassert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n\n\t\tconst defaults = options.voice.getDefaults();\n\t\tthis.options = Object.assign(defaults, options.options) as VoiceOptions<Voice>;\n\t\tthis.voice = options.voice as unknown as VoiceConstructor<Voice>;\n\t\tthis.maxPolyphony = options.maxPolyphony;\n\n\t\t// create the first voice\n\t\tthis._dummyVoice = this._getNextAvailableVoice() as Voice;\n\t\t// remove it from the voices list\n\t\tconst index = this._voices.indexOf(this._dummyVoice);\n\t\tthis._voices.splice(index, 1);\n\t\t// kick off the GC interval\n\t\tthis._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n\t}\n\n\tstatic getDefaults(): PolySynthOptions<Synth> {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tmaxPolyphony: 32,\n\t\t\toptions: {},\n\t\t\tvoice: Synth,\n\t\t});\n\t}\n\n\t/**\n\t * The number of active voices.\n\t */\n\tget activeVoices(): number {\n\t\treturn this._activeVoices.length;\n\t}\n\n\t/**\n\t * Invoked when the source is done making sound, so that it can be\n\t * readded to the pool of available voices\n\t */\n\tprivate _makeVoiceAvailable(voice: Voice): void {\n\t\tthis._availableVoices.push(voice);\n\t\t// remove the midi note from 'active voices'\n\t\tconst activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n\t\tthis._activeVoices.splice(activeVoiceIndex, 1);\n\t}\n\n\t/**\n\t * Get an available voice from the pool of available voices.\n\t * If one is not available and the maxPolyphony limit is reached,\n\t * steal a voice, otherwise return null.\n\t */\n\tprivate _getNextAvailableVoice(): Voice | undefined {\n\t\t// if there are available voices, return the first one\n\t\tif (this._availableVoices.length) {\n\t\t\treturn this._availableVoices.shift();\n\t\t} else if (this._voices.length < this.maxPolyphony) {\n\t\t\t// otherwise if there is still more maxPolyphony, make a new voice\n\t\t\tconst voice = new this.voice(Object.assign(this.options, {\n\t\t\t\tcontext: this.context,\n\t\t\t\tonsilence: this._makeVoiceAvailable.bind(this),\n\t\t\t}));\n\t\t\tassert(voice instanceof Monophonic, \"Voice must extend Monophonic class\");\n\t\t\tvoice.connect(this.output);\n\t\t\tthis._voices.push(voice);\n\t\t\treturn voice;\n\t\t} else {\n\t\t\twarn(\"Max polyphony exceeded. Note dropped.\");\n\t\t}\n\t}\n\n\t/**\n\t * Occasionally check if there are any allocated voices which can be cleaned up.\n\t */\n\tprivate _collectGarbage(): void {\n\t\tthis._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n\t\tif (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n\t\t\t// take off an available note\n\t\t\tconst firstAvail = this._availableVoices.shift() as Voice;\n\t\t\tconst index = this._voices.indexOf(firstAvail);\n\t\t\tthis._voices.splice(index, 1);\n\t\t\tif (!this.context.isOffline) {\n\t\t\t\tfirstAvail.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Internal method which triggers the attack\n\t */\n\tprivate _triggerAttack(notes: Frequency[], time: Seconds, velocity?: NormalRange): void {\n\t\tnotes.forEach(note => {\n\t\t\tconst midiNote = new MidiClass(this.context, note).toMidi();\n\t\t\tconst voice = this._getNextAvailableVoice();\n\t\t\tif (voice) {\n\t\t\t\tvoice.triggerAttack(note, time, velocity);\n\t\t\t\tthis._activeVoices.push({\n\t\t\t\t\tmidi: midiNote, voice, released: false,\n\t\t\t\t});\n\t\t\t\tthis.log(\"triggerAttack\", note, time);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Internal method which triggers the release\n\t */\n\tprivate _triggerRelease(notes: Frequency[], time: Seconds): void {\n\t\tnotes.forEach(note => {\n\t\t\tconst midiNote = new MidiClass(this.context, note).toMidi();\n\t\t\tconst event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n\t\t\tif (event) {\n\t\t\t\t// trigger release on that note\n\t\t\t\tevent.voice.triggerRelease(time);\n\t\t\t\t// mark it as released\n\t\t\t\tevent.released = true;\n\t\t\t\tthis.log(\"triggerRelease\", note, time);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n\t * to wait for just-in-time scheduling\n\t */\n\tprivate _scheduleEvent(type: \"attack\" | \"release\", notes: Frequency[], time: Seconds, velocity?: NormalRange): void {\n\t\tassert(!this.disposed, \"Synth was already disposed\");\n\t\t// if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n\t\tif (time <= this.now()) {\n\t\t\t// do it immediately\n\t\t\tif (type === \"attack\") {\n\t\t\t\tthis._triggerAttack(notes, time, velocity);\n\t\t\t} else {\n\t\t\t\tthis._triggerRelease(notes, time);\n\t\t\t}\n\t\t} else {\n\t\t\t// schedule it to start in the future\n\t\t\tthis.context.setTimeout(() => {\n\t\t\t\tif (!this.disposed) {\n\t\t\t\t\tthis._scheduleEvent(type, notes, time, velocity);\n\t\t\t\t}\n\t\t\t}, time - this.now());\n\t\t}\n\t}\n\n\t/**\n\t * Trigger the attack portion of the note\n\t * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n\t * @param  time  The start time of the note.\n\t * @param velocity The velocity of the note.\n\t * @example\n\t * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n\t * // trigger a chord immediately with a velocity of 0.2\n\t * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n\t */\n\ttriggerAttack(notes: Frequency | Frequency[], time?: Time, velocity?: NormalRange): this {\n\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._scheduleEvent(\"attack\", notes, computedTime, velocity);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release of the note. Unlike monophonic instruments,\n\t * a note (or array of notes) needs to be passed in as the first argument.\n\t * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n\t * @param  time  When the release will be triggered.\n\t * @example\n\t * @example\n\t * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n\t * // trigger the release of the given notes.\n\t * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n\t * poly.triggerRelease(\"F5\", \"+3\");\n\t */\n\ttriggerRelease(notes: Frequency | Frequency[], time?: Time): this {\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._scheduleEvent(\"release\", notes, computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and release after the specified duration\n\t * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n\t * @param  duration the duration of the note\n\t * @param  time  if no time is given, defaults to now\n\t * @param  velocity the velocity of the attack (0-1)\n\t * @example\n\t * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n\t * // can pass in an array of durations as well\n\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n\t */\n\ttriggerAttackRelease(\n\t\tnotes: Frequency | Frequency[],\n\t\tduration: Time | Time[],\n\t\ttime?: Time,\n\t\tvelocity?: NormalRange,\n\t): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.triggerAttack(notes, computedTime, velocity);\n\t\tif (isArray(duration)) {\n\t\t\tassert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n\t\t\tnotes = notes as Frequency[];\n\t\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\t\tconst d = duration[Math.min(i, duration.length - 1)];\n\t\t\t\tconst durationSeconds = this.toSeconds(d);\n\t\t\t\tassert(durationSeconds > 0, \"The duration must be greater than 0\");\n\t\t\t\tthis.triggerRelease(notes[i], computedTime + durationSeconds);\n\t\t\t}\n\t\t} else {\n\t\t\tconst durationSeconds = this.toSeconds(duration);\n\t\t\tassert(durationSeconds > 0, \"The duration must be greater than 0\");\n\t\t\tthis.triggerRelease(notes, computedTime + durationSeconds);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 1);\n\n\t\t\t// make sure that the sound doesn't play after its been stopped\n\t\t\tthis.context.transport.on(\"stop\", this._syncedRelease);\n\t\t\tthis.context.transport.on(\"pause\", this._syncedRelease);\n\t\t\tthis.context.transport.on(\"loopEnd\", this._syncedRelease);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The release which is scheduled to the timeline. \n\t */\n\t protected _syncedRelease = (time: number) => this.releaseAll(time);\n\n\t/**\n\t * Set a member/attribute of the voices\n\t * @example\n\t * const poly = new Tone.PolySynth().toDestination();\n\t * // set all of the voices using an options object for the synth type\n\t * poly.set({\n\t * \tenvelope: {\n\t * \t\tattack: 0.25\n\t * \t}\n\t * });\n\t * poly.triggerAttackRelease(\"Bb3\", 0.2);\n\t */\n\tset(options: RecursivePartial<VoiceOptions<Voice>>): this {\n\t\t// remove options which are controlled by the PolySynth\n\t\tconst sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n\t\t// store all of the options\n\t\tthis.options = deepMerge(this.options, sanitizedOptions);\n\t\tthis._voices.forEach(voice => voice.set(sanitizedOptions));\n\t\tthis._dummyVoice.set(sanitizedOptions);\n\t\treturn this;\n\t}\n\n\tget(): VoiceOptions<Voice> {\n\t\treturn this._dummyVoice.get();\n\t}\n\n\t/**\n\t * Trigger the release portion of all the currently active voices immediately.\n\t * Useful for silencing the synth.\n\t */\n\treleaseAll(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeVoices.forEach(({ voice }) => {\n\t\t\tvoice.triggerRelease(computedTime);\n\t\t});\n\t\treturn this;\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dummyVoice.dispose();\n\t\tthis._voices.forEach(v => v.dispose());\n\t\tthis._activeVoices = [];\n\t\tthis._availableVoices = [];\n\t\tthis.context.clearInterval(this._gcTimeout);\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Interval, MidiNote, NormalRange, Note, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { ToneBufferSource, ToneBufferSourceCurve } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n\ninterface SamplesMap {\n\t[note: string]: ToneAudioBuffer | AudioBuffer | string;\n\t[midi: number]: ToneAudioBuffer | AudioBuffer | string;\n}\n\nexport interface SamplerOptions extends InstrumentOptions {\n\tattack: Time;\n\trelease: Time;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tcurve: ToneBufferSourceCurve;\n\turls: SamplesMap;\n}\n\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument<SamplerOptions> {\n\n\treadonly name: string = \"Sampler\";\n\n\t/**\n\t * The stored and loaded buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t */\n\tprivate _activeSources: Map<MidiNote, ToneBufferSource[]> = new Map();\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The shape of the attack/release curve.\n\t * Either \"linear\" or \"exponential\"\n\t */\n\tcurve: ToneBufferSourceCurve;\n\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param onload The callback to invoke when all of the samples are loaded.\n\t * @param baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n\t */\n\tconstructor(samples?: SamplesMap, onload?: () => void, baseUrl?: string);\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param options The remaining options associated with the sampler\n\t */\n\tconstructor(samples?: SamplesMap, options?: Partial<Omit<SamplerOptions, \"urls\">>);\n\tconstructor(options?: Partial<SamplerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n\n\t\tconst urlMap = {};\n\t\tObject.keys(options.urls).forEach((note) => {\n\t\t\tconst noteNumber = parseInt(note, 10);\n\t\t\tassert(isNote(note)\n\t\t\t\t|| (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n\t\t\tif (isNote(note)) {\n\t\t\t\t// convert the note name to MIDI\n\t\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\t\turlMap[mid] = options.urls[note];\n\t\t\t} else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n\t\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\t\turlMap[noteNumber] = options.urls[noteNumber];\n\t\t\t}\n\t\t});\n\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: urlMap,\n\t\t\tonload: options.onload,\n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror,\n\t\t});\n\t\tthis.attack = options.attack;\n\t\tthis.release = options.release;\n\t\tthis.curve = options.curve;\n\n\t\t// invoke the callback if it's already loaded\n\t\tif (this._buffers.loaded) {\n\t\t\t// invoke onload deferred\n\t\t\tPromise.resolve().then(options.onload);\n\t\t}\n\t}\n\n\tstatic getDefaults(): SamplerOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tattack: 0,\n\t\t\tbaseUrl: \"\",\n\t\t\tcurve: \"exponential\" as const,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\trelease: 0.1,\n\t\t\turls: {},\n\t\t});\n\t}\n\n\t/**\n\t * Returns the difference in steps between the given midi note at the closets sample.\n\t */\n\tprivate _findClosest(midi: MidiNote): Interval {\n\t\t// searches within 8 octaves of the given midi note\n\t\tconst MAX_INTERVAL = 96;\n\t\tlet interval = 0;\n\t\twhile (interval < MAX_INTERVAL) {\n\t\t\t// check above and below\n\t\t\tif (this._buffers.has(midi + interval)) {\n\t\t\t\treturn -interval;\n\t\t\t} else if (this._buffers.has(midi - interval)) {\n\t\t\t\treturn interval;\n\t\t\t}\n\t\t\tinterval++;\n\t\t}\n\t\tthrow new Error(`No available buffers for note: ${midi}`);\n\t}\n\n\t/**\n\t * @param  notes\tThe note to play, or an array of notes.\n\t * @param  time     When to play the note\n\t * @param  velocity The velocity to play the sample back.\n\t */\n\ttriggerAttack(notes: Frequency | Frequency[], time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", notes, time, velocity);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n\t\t\tconst midi = Math.round(midiFloat) as MidiNote;\n\t\t\tconst remainder = midiFloat - midi;\n\t\t\t// find the closest note pitch\n\t\t\tconst difference = this._findClosest(midi);\n\t\t\tconst closestNote = midi - difference;\n\t\t\tconst buffer = this._buffers.get(closestNote);\n\t\t\tconst playbackRate = intervalToFrequencyRatio(difference + remainder);\n\t\t\t// play that note\n\t\t\tconst source = new ToneBufferSource({\n\t\t\t\turl: buffer,\n\t\t\t\tcontext: this.context,\n\t\t\t\tcurve: this.curve,\n\t\t\t\tfadeIn: this.attack,\n\t\t\t\tfadeOut: this.release,\n\t\t\t\tplaybackRate,\n\t\t\t}).connect(this.output);\n\t\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t\t// add it to the active sources\n\t\t\tif (!isArray(this._activeSources.get(midi))) {\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t\t(this._activeSources.get(midi) as ToneBufferSource[]).push(source);\n\n\t\t\t// remove it when it's done\n\t\t\tsource.onended = () => {\n\t\t\t\tif (this._activeSources && this._activeSources.has(midi)) {\n\t\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\t\tconst index = sources.indexOf(source);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tsources.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param  notes\tThe note to release, or an array of notes.\n\t * @param  time     \tWhen to release the note.\n\t */\n\ttriggerRelease(notes: Frequency | Frequency[], time?: Time): this {\n\t\tthis.log(\"triggerRelease\", notes, time);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midi = new FrequencyClass(this.context, note).toMidi();\n\t\t\t// find the note\n\t\t\tif (this._activeSources.has(midi) && (this._activeSources.get(midi) as ToneBufferSource[]).length) {\n\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\ttime = this.toSeconds(time);\n\t\t\t\tsources.forEach(source => {\n\t\t\t\t\tsource.stop(time);\n\t\t\t\t});\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Release all currently active notes.\n\t * @param  time     \tWhen to release the notes.\n\t */\n\treleaseAll(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(sources => {\n\t\t\twhile (sources.length) {\n\t\t\t\tconst source = sources.shift() as ToneBufferSource;\n\t\t\t\tsource.stop(computedTime);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the attack phase, then after the duration, invoke the release.\n\t * @param  notes\tThe note to play and release, or an array of notes.\n\t * @param  duration The time the note should be held\n\t * @param  time     When to start the attack\n\t * @param  velocity The velocity of the attack\n\t */\n\ttriggerAttackRelease(\n\t\tnotes: Frequency[] | Frequency,\n\t\tduration: Time | Time[],\n\t\ttime?: Time,\n\t\tvelocity: NormalRange = 1,\n\t): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.triggerAttack(notes, computedTime, velocity);\n\t\tif (isArray(duration)) {\n\t\t\tassert(isArray(notes), \"notes must be an array when duration is array\");\n\t\t\t(notes as Frequency[]).forEach((note, index) => {\n\t\t\t\tconst d = duration[Math.min(index, duration.length - 1)];\n\t\t\t\tthis.triggerRelease(note, computedTime + this.toSeconds(d));\n\t\t\t});\n\t\t} else {\n\t\t\tthis.triggerRelease(notes, computedTime + this.toSeconds(duration));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a note to the sampler.\n\t * @param  note      The buffer's pitch.\n\t * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(note: Note | MidiNote, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n\t\tif (isNote(note)) {\n\t\t\t// convert the note name to MIDI\n\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\tthis._buffers.add(mid, url, callback);\n\t\t} else {\n\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\tthis._buffers.add(note, url, callback);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.dispose();\n\t\tthis._activeSources.forEach(sources => {\n\t\t\tsources.forEach(source => source.dispose());\n\t\t});\n\t\tthis._activeSources.clear();\n\t\treturn this;\n\t}\n}\n","import \"../core/clock/Transport\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { NormalRange, Positive, Seconds, Ticks, Time, TransportTime } from \"../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { BasicPlaybackState, StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n\nexport type ToneEventCallback<T> = (time: Seconds, value: T) => void;\n\nexport interface ToneEventOptions<T> extends ToneWithContextOptions {\n\tcallback: ToneEventCallback<T>;\n\tloop: boolean | number;\n\tloopEnd: Time;\n\tloopStart: Time;\n\tplaybackRate: Positive;\n\tvalue?: T;\n\tprobability: NormalRange;\n\tmute: boolean;\n\thumanize: boolean | Time;\n}\n\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * const chordEvent = new Tone.ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\nexport class ToneEvent<ValueType = any> extends ToneWithContext<ToneEventOptions<ValueType>> {\n\n\treadonly name: string = \"ToneEvent\";\n\n\t/**\n\t * Loop value\n\t */\n\tprotected _loop: boolean | number;\n\n\t/**\n\t * The callback to invoke.\n\t */\n\tcallback: ToneEventCallback<ValueType>;\n\n\t/**\n\t * The value which is passed to the\n\t * callback function.\n\t */\n\tvalue: ValueType;\n\n\t/**\n\t * When the note is scheduled to start.\n\t */\n\tprotected _loopStart: Ticks;\n\n\t/**\n\t * When the note is scheduled to start.\n\t */\n\tprotected _loopEnd: Ticks;\n\n\t/**\n\t * Tracks the scheduled events\n\t */\n\tprotected _state: StateTimeline<{\n\t\tid: number;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The playback speed of the note. A speed of 1\n\t * is no change.\n\t */\n\tprotected _playbackRate: Positive;\n\n\t/**\n\t * A delay time from when the event is scheduled to start\n\t */\n\tprotected _startOffset: Ticks = 0;\n\n\t/**\n\t * private holder of probability value\n\t */\n\tprotected _probability: NormalRange;\n\n\t/**\n\t * the amount of variation from the given time.\n\t */\n\tprotected _humanize: boolean | Time;\n\n\t/**\n\t * If mute is true, the callback won't be invoked.\n\t */\n\tmute: boolean;\n\n\t/**\n\t * @param callback The callback to invoke at the time.\n\t * @param value The value or values which should be passed to the callback function on invocation.\n\t */\n\tconstructor(callback?: ToneEventCallback<ValueType>, value?: ValueType);\n\tconstructor(options?: Partial<ToneEventOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]));\n\t\tconst options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n\n\t\tthis._loop = options.loop;\n\t\tthis.callback = options.callback;\n\t\tthis.value = options.value;\n\t\tthis._loopStart = this.toTicks(options.loopStart);\n\t\tthis._loopEnd = this.toTicks(options.loopEnd);\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis._probability = options.probability;\n\t\tthis._humanize = options.humanize;\n\t\tthis.mute = options.mute;\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis._state.increasing = true;\n\t\t// schedule the events for the first time\n\t\tthis._rescheduleEvents();\n\t}\n\n\tstatic getDefaults(): ToneEventOptions<any> {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tcallback: noOp,\n\t\t\thumanize: false,\n\t\t\tloop: false,\n\t\t\tloopEnd: \"1m\",\n\t\t\tloopStart: 0,\n\t\t\tmute: false,\n\t\t\tplaybackRate: 1,\n\t\t\tprobability: 1,\n\t\t\tvalue: null,\n\t\t});\n\t}\n\n\t/**\n\t * Reschedule all of the events along the timeline\n\t * with the updated values.\n\t * @param after Only reschedules events after the given time.\n\t */\n\tprivate _rescheduleEvents(after: Ticks = -1): void {\n\t\t// if no argument is given, schedules all of the events\n\t\tthis._state.forEachFrom(after, event => {\n\t\t\tlet duration;\n\t\t\tif (event.state === \"started\") {\n\t\t\t\tif (event.id !== -1) {\n\t\t\t\t\tthis.context.transport.clear(event.id);\n\t\t\t\t}\n\t\t\t\tconst startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t\t\tif (this._loop === true || isNumber(this._loop) && this._loop > 1) {\n\t\t\t\t\tduration = Infinity;\n\t\t\t\t\tif (isNumber(this._loop)) {\n\t\t\t\t\t\tduration = (this._loop) * this._getLoopDuration();\n\t\t\t\t\t}\n\t\t\t\t\tconst nextEvent = this._state.getAfter(startTick);\n\t\t\t\t\tif (nextEvent !== null) {\n\t\t\t\t\t\tduration = Math.min(duration, nextEvent.time - startTick);\n\t\t\t\t\t}\n\t\t\t\t\tif (duration !== Infinity) {\n\t\t\t\t\t\tduration = new TicksClass(this.context, duration);\n\t\t\t\t\t}\n\t\t\t\t\tconst interval = new TicksClass(this.context, this._getLoopDuration());\n\t\t\t\t\tevent.id = this.context.transport.scheduleRepeat(\n\t\t\t\t\t\tthis._tick.bind(this), interval, new TicksClass(this.context, startTick), duration);\n\t\t\t\t} else {\n\t\t\t\t\tevent.id = this.context.transport.schedule(this._tick.bind(this), new TicksClass(this.context, startTick));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the note, either \"started\" or \"stopped\".\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._state.getValueAtTime(this.context.transport.ticks) as BasicPlaybackState;\n\t}\n\n\t/**\n\t * The start from the scheduled start time.\n\t */\n\tget startOffset(): Ticks {\n\t\treturn this._startOffset;\n\t}\n\tset startOffset(offset) {\n\t\tthis._startOffset = offset;\n\t}\n\n\t/**\n\t * The probability of the notes being triggered.\n\t */\n\tget probability(): NormalRange {\n\t\treturn this._probability;\n\t}\n\tset probability(prob) {\n\t\tthis._probability = prob;\n\t}\n\n\t/**\n\t * If set to true, will apply small random variation\n\t * to the callback time. If the value is given as a time, it will randomize\n\t * by that amount.\n\t * @example\n\t * const event = new Tone.ToneEvent();\n\t * event.humanize = true;\n\t */\n\tget humanize(): Time | boolean {\n\t\treturn this._humanize;\n\t}\n\n\tset humanize(variation) {\n\t\tthis._humanize = variation;\n\t}\n\n\t/**\n\t * Start the note at the given time.\n\t * @param  time  When the event should start.\n\t */\n\tstart(time?: TransportTime | TransportTimeClass): this {\n\t\tconst ticks = this.toTicks(time);\n\t\tif (this._state.getValueAtTime(ticks) === \"stopped\") {\n\t\t\tthis._state.add({\n\t\t\t\tid: -1,\n\t\t\t\tstate: \"started\",\n\t\t\t\ttime: ticks,\n\t\t\t});\n\t\t\tthis._rescheduleEvents(ticks);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the Event at the given time.\n\t * @param  time  When the event should stop.\n\t */\n\tstop(time?: TransportTime | TransportTimeClass): this {\n\t\tthis.cancel(time);\n\t\tconst ticks = this.toTicks(time);\n\t\tif (this._state.getValueAtTime(ticks) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n\t\t\tconst previousEvent = this._state.getBefore(ticks);\n\t\t\tlet rescheduleTime = ticks;\n\t\t\tif (previousEvent !== null) {\n\t\t\t\trescheduleTime = previousEvent.time;\n\t\t\t}\n\t\t\tthis._rescheduleEvents(rescheduleTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel all scheduled events greater than or equal to the given time\n\t * @param  time  The time after which events will be cancel.\n\t */\n\tcancel(time?: TransportTime | TransportTimeClass): this {\n\t\ttime = defaultArg(time, -Infinity);\n\t\tconst ticks = this.toTicks(time);\n\t\tthis._state.forEachFrom(ticks, event => {\n\t\t\tthis.context.transport.clear(event.id);\n\t\t});\n\t\tthis._state.cancel(ticks);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The callback function invoker. Also\n\t * checks if the Event is done playing\n\t * @param  time  The time of the event in seconds\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tconst ticks = this.context.transport.getTicksAtTime(time);\n\t\tif (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n\t\t\tif (this.probability < 1 && Math.random() > this.probability) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.humanize) {\n\t\t\t\tlet variation = 0.02;\n\t\t\t\tif (!isBoolean(this.humanize)) {\n\t\t\t\t\tvariation = this.toSeconds(this.humanize);\n\t\t\t\t}\n\t\t\t\ttime += (Math.random() * 2 - 1) * variation;\n\t\t\t}\n\t\t\tthis.callback(time, this.value);\n\t\t}\n\t}\n\n\t/**\n\t * Get the duration of the loop.\n\t */\n\tprotected _getLoopDuration(): Ticks {\n\t\treturn (this._loopEnd - this._loopStart) / this._playbackRate;\n\t}\n\n\t/**\n\t * If the note should loop or not\n\t * between ToneEvent.loopStart and\n\t * ToneEvent.loopEnd. If set to true,\n\t * the event will loop indefinitely,\n\t * if set to a number greater than 1\n\t * it will play a specific number of\n\t * times, if set to false, 0 or 1, the\n\t * part will only play once.\n\t */\n\tget loop(): boolean | number {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\tthis._loop = loop;\n\t\tthis._rescheduleEvents();\n\t}\n\n\t/**\n\t * The playback rate of the event. Defaults to 1.\n\t * @example\n\t * const note = new Tone.ToneEvent();\n\t * note.loop = true;\n\t * // repeat the note twice as fast\n\t * note.playbackRate = 2;\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tthis._rescheduleEvents();\n\t}\n\n\t/**\n\t * The loopEnd point is the time the event will loop\n\t * if ToneEvent.loop is true.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TicksClass(this.context, this._loopEnd).toSeconds();\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop) {\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n\n\t/**\n\t * The time when the loop should start.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TicksClass(this.context, this._loopStart).toSeconds();\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop) {\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n\n\t/**\n\t * The current progress of the loop interval.\n\t * Returns 0 if the event is not started yet or\n\t * it is not set to loop.\n\t */\n\tget progress(): NormalRange {\n\t\tif (this._loop) {\n\t\t\tconst ticks = this.context.transport.ticks;\n\t\t\tconst lastEvent = this._state.get(ticks);\n\t\t\tif (lastEvent !== null && lastEvent.state === \"started\") {\n\t\t\t\tconst loopDuration = this._getLoopDuration();\n\t\t\t\tconst progress = (ticks - lastEvent.time) % loopDuration;\n\t\t\t\treturn progress / loopDuration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.cancel();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneEvent } from \"./ToneEvent\";\nimport { NormalRange, Positive, Seconds, Time, TransportTime } from \"../core/type/Units\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { BasicPlaybackState } from \"../core/util/StateTimeline\";\n\nexport interface LoopOptions extends ToneWithContextOptions {\n\tcallback: (time: Seconds) => void;\n\tinterval: Time;\n\tplaybackRate: Positive;\n\titerations: number;\n\tprobability: NormalRange;\n\tmute: boolean;\n\thumanize: boolean | Time;\n}\n\n/**\n * Loop creates a looped callback at the \n * specified interval. The callback can be \n * started, stopped and scheduled along\n * the Transport's timeline. \n * @example\n * const loop = new Tone.Loop((time) => {\n * \t// triggered every eighth note. \n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Loop<Options extends LoopOptions = LoopOptions> extends ToneWithContext<Options> {\n\n\treadonly name: string = \"Loop\";\n\n\t/**\n\t * The event which produces the callbacks\n\t */\n\tprivate _event: ToneEvent;\n\n\t/**\n\t * The callback to invoke with the next event in the pattern\n\t */\n\tcallback: (time: Seconds) => void\n\n\t/**\n\t * @param callback The callback to invoke at the time.\n\t * @param interval The time between successive callback calls. \n\t */\n\tconstructor(callback?: (time: Seconds) => void, interval?: Time);\n\tconstructor(options?: Partial<LoopOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]));\n\t\tconst options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n\n\t\tthis._event = new ToneEvent({\n\t\t\tcontext: this.context,\n\t\t\tcallback: this._tick.bind(this),\n\t\t\tloop: true,\n\t\t\tloopEnd: options.interval,\n\t\t\tplaybackRate: options.playbackRate,\n\t\t\tprobability: options.probability\n\t\t});\n\n\t\tthis.callback = options.callback;\n\t\t// set the iterations\n\t\tthis.iterations = options.iterations;\n\t}\n\n\tstatic getDefaults(): LoopOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tinterval: \"4n\",\n\t\t\tcallback: noOp,\n\t\t\tplaybackRate: 1,\n\t\t\titerations: Infinity,\n\t\t\tprobability: 1,\n\t\t\tmute: false,\n\t\t\thumanize: false\n\t\t});\n\t}\n\n\t/**\n\t * Start the loop at the specified time along the Transport's timeline.\n\t * @param  time  When to start the Loop.\n\t */\n\tstart(time?: TransportTime): this {\n\t\tthis._event.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the loop at the given time.\n\t * @param  time  When to stop the Loop.\n\t */\n\tstop(time?: TransportTime): this {\n\t\tthis._event.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel all scheduled events greater than or equal to the given time\n\t * @param  time  The time after which events will be cancel.\n\t */\n\tcancel(time?: TransportTime): this {\n\t\tthis._event.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal function called when the notes should be called\n\t * @param time  The time the event occurs\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tthis.callback(time);\n\t}\n\n\t/**\n\t * The state of the Loop, either started or stopped.\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._event.state;\n\t}\n\n\t/**\n\t * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating. \n\t */\n\tget progress(): NormalRange {\n\t\treturn this._event.progress;\n\t}\n\n\t/**\n\t * The time between successive callbacks. \n\t * @example\n\t * const loop = new Tone.Loop();\n\t * loop.interval = \"8n\"; // loop every 8n\n\t */\n\tget interval(): Time {\n\t\treturn this._event.loopEnd;\n\t}\n\tset interval(interval) {\n\t\tthis._event.loopEnd = interval;\n\t}\n\n\t/**\n\t * The playback rate of the loop. The normal playback rate is 1 (no change). \n\t * A `playbackRate` of 2 would be twice as fast. \n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._event.playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._event.playbackRate = rate;\n\t}\n\n\t/**\n\t * Random variation +/-0.01s to the scheduled time. \n\t * Or give it a time value which it will randomize by.\n\t */\n\tget humanize(): boolean | Time {\n\t\treturn this._event.humanize;\n\t}\n\tset humanize(variation) {\n\t\tthis._event.humanize = variation;\n\t}\n\n\t/**\n\t * The probably of the callback being invoked.\n\t */\n\tget probability(): NormalRange {\n\t\treturn this._event.probability;\n\t}\n\n\tset probability(prob) {\n\t\tthis._event.probability = prob;\n\t}\n\n\t/**\n\t * Muting the Loop means that no callbacks are invoked.\n\t */\n\tget mute(): boolean {\n\t\treturn this._event.mute;\n\t}\n\n\tset mute(mute) {\n\t\tthis._event.mute = mute;\n\t}\n\n\t/**\n\t * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n\t */\n\tget iterations(): number {\n\t\tif (this._event.loop === true) {\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn this._event.loop as number;\n\t\t}\n\t}\n\tset iterations(iters) {\n\t\tif (iters === Infinity) {\n\t\t\tthis._event.loop = true;\n\t\t} else {\n\t\t\tthis._event.loop = iters;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._event.dispose();\n\t\treturn this;\n\t}\n}\n","import { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { NormalRange, Positive, Seconds, Ticks, Time, TransportTime } from \"../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent, ToneEventCallback, ToneEventOptions } from \"./ToneEvent\";\n\ntype CallbackType<T> =\n\tT extends {\n\t\ttime: Time;\n\t\t[key: string]: any;\n\t} ? T :\n\t\tT extends ArrayLike<any> ? T[1] :\n\t\t\tT extends Time ? null : never;\n\ninterface PartOptions<T> extends Omit<ToneEventOptions<CallbackType<T>>, \"value\"> {\n\tevents: T[];\n}\n\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const part = new Tone.Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]).start(0);\n * Tone.Transport.start();\n * @example\n * const synth = new Tone.Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Tone.Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Part<ValueType = any> extends ToneEvent<ValueType> {\n\n\treadonly name: string = \"Part\";\n\n\t/**\n\t * Tracks the scheduled events\n\t */\n\tprotected _state: StateTimeline<{\n\t\tid: number;\n\t\toffset: number;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The events that belong to this part\n\t */\n\tprivate _events: Set<ToneEvent> = new Set();\n\n\t/**\n\t * @param callback The callback to invoke on each event\n\t * @param events the array of events\n\t */\n\tconstructor(callback?: ToneEventCallback<CallbackType<ValueType>>, value?: ValueType[]);\n\tconstructor(options?: Partial<PartOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]));\n\t\tconst options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n\n\t\t// make sure things are assigned in the right order\n\t\tthis._state.increasing = true;\n\n\t\t// add the events\n\t\toptions.events.forEach(event => {\n\t\t\tif (isArray(event)) {\n\t\t\t\tthis.add(event[0], event[1]);\n\t\t\t} else {\n\t\t\t\tthis.add(event);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic getDefaults(): PartOptions<any> {\n\t\treturn Object.assign(ToneEvent.getDefaults(), {\n\t\t\tevents: [],\n\t\t});\n\t}\n\n\t/**\n\t * Start the part at the given time.\n\t * @param  time    When to start the part.\n\t * @param  offset  The offset from the start of the part to begin playing at.\n\t */\n\tstart(time?: TransportTime, offset?: Time): this {\n\t\tconst ticks = this.toTicks(time);\n\t\tif (this._state.getValueAtTime(ticks) !== \"started\") {\n\t\t\toffset = defaultArg(offset, this._loop ? this._loopStart : 0);\n\t\t\tif (this._loop) {\n\t\t\t\toffset = defaultArg(offset, this._loopStart);\n\t\t\t} else {\n\t\t\t\toffset = defaultArg(offset, 0);\n\t\t\t}\n\t\t\tconst computedOffset = this.toTicks(offset);\n\t\t\tthis._state.add({\n\t\t\t\tid: -1,\n\t\t\t\toffset: computedOffset,\n\t\t\t\tstate: \"started\",\n\t\t\t\ttime: ticks,\n\t\t\t});\n\t\t\tthis._forEach(event => {\n\t\t\t\tthis._startNote(event, ticks, computedOffset);\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the event in the given event at the correct time given\n\t * the ticks and offset and looping.\n\t * @param  event\n\t * @param  ticks\n\t * @param  offset\n\t */\n\tprivate _startNote(event: ToneEvent, ticks: Ticks, offset: Ticks): void {\n\t\tticks -= offset;\n\t\tif (this._loop) {\n\t\t\tif (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t\t\t\tif (event.startOffset < offset) {\n\t\t\t\t\t// start it on the next loop\n\t\t\t\t\tticks += this._getLoopDuration();\n\t\t\t\t}\n\t\t\t\tevent.start(new TicksClass(this.context, ticks));\n\t\t\t} else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t\t\t\tevent.loop = false;\n\t\t\t\tevent.start(new TicksClass(this.context, ticks));\n\t\t\t}\n\t\t} else if (event.startOffset >= offset) {\n\t\t\tevent.start(new TicksClass(this.context, ticks));\n\t\t}\n\t}\n\n\tget startOffset(): Ticks {\n\t\treturn this._startOffset;\n\t}\n\tset startOffset(offset) {\n\t\tthis._startOffset = offset;\n\t\tthis._forEach(event => {\n\t\t\tevent.startOffset += this._startOffset;\n\t\t});\n\t}\n\n\t/**\n\t * Stop the part at the given time.\n\t * @param  time  When to stop the part.\n\t */\n\tstop(time?: TransportTime): this {\n\t\tconst ticks = this.toTicks(time);\n\t\tthis._state.cancel(ticks);\n\t\tthis._state.setStateAtTime(\"stopped\", ticks);\n\t\tthis._forEach(event => {\n\t\t\tevent.stop(time);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get/Set an Event's value at the given time.\n\t * If a value is passed in and no event exists at\n\t * the given time, one will be created with that value.\n\t * If two events are at the same time, the first one will\n\t * be returned.\n\t * @example\n\t * const part = new Tone.Part();\n\t * part.at(\"1m\"); // returns the part at the first measure\n\t * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n\t * // if an event didn't exist at that time, it will be created.\n\t * @param time The time of the event to get or set.\n\t * @param value If a value is passed in, the value of the event at the given time will be set to it.\n\t */\n\tat(time: Time, value?: any): ToneEvent | null {\n\t\tconst timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n\t\tconst tickTime = new TicksClass(this.context, 1).toSeconds();\n\n\t\tconst iterator = this._events.values();\n\t\tlet result = iterator.next();\n\t\twhile (!result.done) {\n\t\t\tconst event = result.value;\n\t\t\tif (Math.abs(timeInTicks - event.startOffset) < tickTime) {\n\t\t\t\tif (isDefined(value)) {\n\t\t\t\t\tevent.value = value;\n\t\t\t\t}\n\t\t\t\treturn event;\n\t\t\t}\n\t\t\tresult = iterator.next();\n\t\t}\n\t\t// if there was no event at that time, create one\n\t\tif (isDefined(value)) {\n\t\t\tthis.add(time, value);\n\t\t\t// return the new event\n\t\t\treturn this.at(time);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Add a an event to the part.\n\t * @param time The time the note should start. If an object is passed in, it should\n\t * \t\thave a 'time' attribute and the rest of the object will be used as the 'value'.\n\t * @param  value\n\t * @example\n\t * const part = new Tone.Part();\n\t * part.add(\"1m\", \"C#+11\");\n\t */\n\tadd(obj: {\n\t\ttime: Time;\n\t\t[key: string]: any;\n\t}): this;\n\tadd(time: Time, value?: any): this;\n\tadd(time: Time | object, value?: any): this {\n\t\t// extract the parameters\n\t\tif (time instanceof Object && Reflect.has(time, \"time\")) {\n\t\t\tvalue = time;\n\t\t\ttime = value.time;\n\t\t}\n\t\tconst ticks = this.toTicks(time);\n\t\tlet event: ToneEvent;\n\t\tif (value instanceof ToneEvent) {\n\t\t\tevent = value;\n\t\t\tevent.callback = this._tick.bind(this);\n\t\t} else {\n\t\t\tevent = new ToneEvent({\n\t\t\t\tcallback: this._tick.bind(this),\n\t\t\t\tcontext: this.context,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t}\n\t\t// the start offset\n\t\tevent.startOffset = ticks;\n\n\t\t// initialize the values\n\t\tevent.set({\n\t\t\thumanize: this.humanize,\n\t\t\tloop: this.loop,\n\t\t\tloopEnd: this.loopEnd,\n\t\t\tloopStart: this.loopStart,\n\t\t\tplaybackRate: this.playbackRate,\n\t\t\tprobability: this.probability,\n\t\t});\n\n\t\tthis._events.add(event);\n\n\t\t// start the note if it should be played right now\n\t\tthis._restartEvent(event);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restart the given event\n\t */\n\tprivate _restartEvent(event: ToneEvent): void {\n\t\tthis._state.forEach((stateEvent) => {\n\t\t\tif (stateEvent.state === \"started\") {\n\t\t\t\tthis._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t\t} else {\n\t\t\t\t// stop the note\n\t\t\t\tevent.stop(new TicksClass(this.context, stateEvent.time));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Remove an event from the part. If the event at that time is a Part,\n\t * it will remove the entire part.\n\t * @param time The time of the event\n\t * @param value Optionally select only a specific event value\n\t */\n\tremove(obj: {\n\t\ttime: Time;\n\t\t[key: string]: any;\n\t}): this;\n\tremove(time: Time, value?: any): this;\n\tremove(time: Time | object, value?: any): this {\n\t\t// extract the parameters\n\t\tif (isObject(time) && time.hasOwnProperty(\"time\")) {\n\t\t\tvalue = time;\n\t\t\ttime = value.time;\n\t\t}\n\t\ttime = this.toTicks(time);\n\t\tthis._events.forEach(event => {\n\t\t\tif (event.startOffset === time) {\n\t\t\t\tif (isUndef(value) || (isDefined(value) && event.value === value)) {\n\t\t\t\t\tthis._events.delete(event);\n\t\t\t\t\tevent.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove all of the notes from the group.\n\t */\n\tclear(): this {\n\t\tthis._forEach(event => event.dispose());\n\t\tthis._events.clear();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t * @param after The time after which to cancel the scheduled events.\n\t */\n\tcancel(after?: TransportTime | TransportTimeClass): this {\n\t\tthis._forEach(event => event.cancel(after));\n\t\tthis._state.cancel(this.toTicks(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over all of the events\n\t */\n\tprivate _forEach(callback: (event: ToneEvent) => void): this {\n\t\tif (this._events) {\n\t\t\tthis._events.forEach(event => {\n\t\t\t\tif (event instanceof Part) {\n\t\t\t\t\tevent._forEach(callback);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the attribute of all of the events\n\t * @param  attr  the attribute to set\n\t * @param  value      The value to set it to\n\t */\n\tprivate _setAll(attr: string, value: any): void {\n\t\tthis._forEach(event => {\n\t\t\tevent[attr] = value;\n\t\t});\n\t}\n\n\t/**\n\t * Internal tick method\n\t * @param  time  The time of the event in seconds\n\t */\n\tprotected _tick(time: Seconds, value?: any): void {\n\t\tif (!this.mute) {\n\t\t\tthis.callback(time, value);\n\t\t}\n\t}\n\n\t/**\n\t * Determine if the event should be currently looping\n\t * given the loop boundries of this Part.\n\t * @param  event  The event to test\n\t */\n\tprivate _testLoopBoundries(event: ToneEvent): void {\n\t\tif (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n\t\t\tevent.cancel(0);\n\t\t} else if (event.state === \"stopped\") {\n\t\t\t// reschedule it if it's stopped\n\t\t\tthis._restartEvent(event);\n\t\t}\n\t}\n\n\tget probability(): NormalRange {\n\t\treturn this._probability;\n\t}\n\tset probability(prob) {\n\t\tthis._probability = prob;\n\t\tthis._setAll(\"probability\", prob);\n\t}\n\n\tget humanize(): boolean | Time {\n\t\treturn this._humanize;\n\t}\n\tset humanize(variation) {\n\t\tthis._humanize = variation;\n\t\tthis._setAll(\"humanize\", variation);\n\t}\n\n\t/**\n\t * If the part should loop or not\n\t * between Part.loopStart and\n\t * Part.loopEnd. If set to true,\n\t * the part will loop indefinitely,\n\t * if set to a number greater than 1\n\t * it will play a specific number of\n\t * times, if set to false, 0 or 1, the\n\t * part will only play once.\n\t * @example\n\t * const part = new Tone.Part();\n\t * // loop the part 8 times\n\t * part.loop = 8;\n\t */\n\tget loop(): boolean | number {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\tthis._loop = loop;\n\t\tthis._forEach(event => {\n\t\t\tevent.loopStart = this.loopStart;\n\t\t\tevent.loopEnd = this.loopEnd;\n\t\t\tevent.loop = loop;\n\t\t\tthis._testLoopBoundries(event);\n\t\t});\n\t}\n\n\t/**\n\t * The loopEnd point determines when it will\n\t * loop if Part.loop is true.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TicksClass(this.context, this._loopEnd).toSeconds();\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop) {\n\t\t\tthis._forEach(event => {\n\t\t\t\tevent.loopEnd = loopEnd;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * The loopStart point determines when it will\n\t * loop if Part.loop is true.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TicksClass(this.context, this._loopStart).toSeconds();\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop) {\n\t\t\tthis._forEach(event => {\n\t\t\t\tevent.loopStart = this.loopStart;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * The playback rate of the part\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tthis._setAll(\"playbackRate\", rate);\n\t}\n\n\t/**\n\t * The number of scheduled notes in the part.\n\t */\n\tget length(): number {\n\t\treturn this._events.size;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.clear();\n\t\treturn this;\n\t}\n}\n","import { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n\n/**\n * The name of the patterns\n */\nexport type PatternName = \"up\" | \"down\" | \"upDown\" | \"downUp\" | \"alternateUp\" | \"alternateDown\" | \"random\" | \"randomOnce\" | \"randomWalk\";\n\n/**\n * Start at the first value and go up to the last\n */\nfunction* upPatternGen<T>(numValues: number): IterableIterator<number> {\n\tlet index = 0;\n\twhile (index < numValues) {\n\t\tindex = clamp(index, 0, numValues - 1);\n\t\tyield index;\n\t\tindex++;\n\t}\n}\n\n/**\n * Start at the last value and go down to 0\n */\nfunction* downPatternGen<T>(numValues: number): IterableIterator<number> {\n\tlet index = numValues - 1;\n\twhile (index >= 0) {\n\t\tindex = clamp(index, 0, numValues - 1);\n\t\tyield index;\n\t\tindex--;\n\t}\n}\n\n/**\n * Infinitely yield the generator\n */\nfunction* infiniteGen<T>(numValues: number, gen: typeof upPatternGen): IterableIterator<number> {\n\twhile (true) {\n\t\tyield* gen(numValues);\n\t}\n}\n\n/**\n * Alternate between two generators\n */\nfunction* alternatingGenerator<T>(numValues: number, directionUp: boolean): IterableIterator<number> {\n\tlet index = directionUp ? 0 : numValues - 1;\n\twhile (true) {\n\t\tindex = clamp(index, 0, numValues - 1);\n\t\tyield index;\n\t\tif (directionUp) {\n\t\t\tindex++;\n\t\t\tif (index >= numValues - 1) {\n\t\t\t\tdirectionUp = false;\n\t\t\t}\n\t\t} else {\n\t\t\tindex--;\n\t\t\tif (index <= 0) {\n\t\t\t\tdirectionUp = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Starting from the bottom move up 2, down 1\n */\nfunction* jumpUp<T>(numValues: number): IterableIterator<number> {\n\tlet index = 0;\n\tlet stepIndex = 0;\n\twhile (index < numValues) {\n\t\tindex = clamp(index, 0, numValues - 1);\n\t\tyield index;\n\t\tstepIndex++;\n\t\tindex += (stepIndex % 2 ? 2 : -1);\n\t}\n}\n\n/**\n * Starting from the top move down 2, up 1\n */\nfunction* jumpDown<T>(numValues: number): IterableIterator<number> {\n\tlet index = numValues - 1;\n\tlet stepIndex = 0;\n\twhile (index >= 0) {\n\t\tindex = clamp(index, 0, numValues - 1);\n\t\tyield index;\n\t\tstepIndex++;\n\t\tindex += (stepIndex % 2 ? -2 : 1);\n\t}\n}\n\n/**\n * Choose a random index each time\n */\nfunction* randomGen<T>(numValues: number): IterableIterator<number> {\n\twhile (true) {\n\t\tconst randomIndex = Math.floor(Math.random() * numValues);\n\t\tyield randomIndex;\n\t}\n}\n\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\nfunction* randomOnce<T>(numValues: number): IterableIterator<number> {\n\t// create an array of indices\n\tconst copy: number[] = [];\n\tfor (let i = 0; i < numValues; i++) {\n\t\tcopy.push(i);\n\t}\n\twhile (copy.length > 0) {\n\t\t// random choose an index, and then remove it so it's not chosen again\n\t\tconst randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\tconst index = clamp(randVal[0], 0, numValues - 1);\n\t\tyield index;\n\t}\n}\n\n/**\n * Randomly choose to walk up or down 1 index\n */\nfunction* randomWalk<T>(numValues: number): IterableIterator<number> {\n\t// randomly choose a starting index\n\tlet index = Math.floor(Math.random() * numValues);\n\twhile (true) {\n\t\tif (index === 0) {\n\t\t\tindex++; // at bottom, so force upward step\n\t\t} else if (index === numValues - 1) {\n\t\t\tindex--; // at top, so force downward step\n\t\t} else if (Math.random() < 0.5) { // else choose random downward or upward step\n\t\t\tindex--;\n\t\t} else {\n\t\t\tindex++;\n\t\t}\n\t\tyield index;\n\t}\n}\n\n/**\n * PatternGenerator returns a generator which will yield numbers between 0 and numValues\n * according to the passed in pattern that can be used as indexes into an array of size numValues.\n * @param numValues The size of the array to emit indexes for\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\nexport function* PatternGenerator(numValues: number, pattern: PatternName = \"up\", index = 0): Iterator<number> {\n\t// safeguards\n\tassert(numValues >= 1, \"The number of values must be at least one\");\n\tswitch (pattern) {\n\t\tcase \"up\" :\n\t\t\tyield* infiniteGen(numValues, upPatternGen);\n\t\tcase \"down\" :\n\t\t\tyield* infiniteGen(numValues, downPatternGen);\n\t\tcase \"upDown\" :\n\t\t\tyield* alternatingGenerator(numValues, true);\n\t\tcase \"downUp\" :\n\t\t\tyield* alternatingGenerator(numValues, false);\n\t\tcase \"alternateUp\":\n\t\t\tyield* infiniteGen(numValues, jumpUp);\n\t\tcase \"alternateDown\":\n\t\t\tyield* infiniteGen(numValues, jumpDown);\n\t\tcase \"random\":\n\t\t\tyield* randomGen(numValues);\n\t\tcase \"randomOnce\":\n\t\t\tyield* infiniteGen(numValues, randomOnce);\n\t\tcase \"randomWalk\":\n\t\t\tyield* randomWalk(numValues);\n\t}\n}\n","import { Loop, LoopOptions } from \"./Loop\";\nimport { PatternGenerator, PatternName } from \"./PatternGenerator\";\nimport { ToneEventCallback } from \"./ToneEvent\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Seconds } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\n\nexport interface PatternOptions<ValueType> extends LoopOptions {\n\tpattern: PatternName;\n\tvalues: ValueType[];\n\tcallback: (time: Seconds, value?: ValueType) => void;\n}\n\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns. \n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nexport class Pattern<ValueType> extends Loop<PatternOptions<ValueType>> {\n\n\treadonly name: string = \"Pattern\";\n\n\t/**\n\t * The pattern generator function\n\t */\n\tprivate _pattern: Iterator<number>;\n\n\t/**\n\t * The current index\n\t */\n\t private _index?: number;\n\n\t/**\n\t * The current value\n\t */\n\t private _value?: ValueType;\n\n\t/**\n\t * Hold the pattern type\n\t */\n\tprivate _type: PatternName;\n\n\t/**\n\t * Hold the values\n\t */\n\tprivate _values: ValueType[];\n\n\t/**\n\t * The callback to be invoked at a regular interval\n\t */\n\tcallback: (time: Seconds, value?: ValueType) => void;\n\n\t/**\n\t * @param  callback The callback to invoke with the event.\n\t * @param  values The values to arpeggiate over.\n\t * @param  pattern  The name of the pattern\n\t */\n\tconstructor(\n\t\tcallback?: ToneEventCallback<ValueType>,\n\t\tvalues?: ValueType[],\n\t\tpattern?: PatternName,\n\t);\n\tconstructor(options?: Partial<PatternOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]));\n\t\tconst options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._values = options.values;\n\t\tthis._pattern = PatternGenerator(options.values.length, options.pattern);\n\t\tthis._type = options.pattern;\n\t}\n\n\tstatic getDefaults(): PatternOptions<any> {\n\t\treturn Object.assign(Loop.getDefaults(), {\n\t\t\tpattern: \"up\" as const,\n\t\t\tvalues: [],\n\t\t\tcallback: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Internal function called when the notes should be called\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tconst index = this._pattern.next() as IteratorResult<ValueType>;\n\t\tthis._index = index.value;\n\t\tthis._value = this._values[index.value];\n\t\tthis.callback(time, this._value);\n\t}\n\n\t/**\n\t * The array of events.\n\t */\n\tget values(): ValueType[] {\n\t\treturn this._values;\n\t}\n\tset values(val) {\n\t\tthis._values = val;\n\t\t// reset the pattern\n\t\tthis.pattern = this._type;\n\t}\n\n\t/**\n\t * The current value of the pattern.\n\t */\n\tget value(): ValueType | undefined {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * The current index of the pattern.\n\t */\n\t get index(): number | undefined {\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t */\n\tget pattern(): PatternName {\n\t\treturn this._type;\n\t}\n\tset pattern(pattern) {\n\t\tthis._type = pattern;\n\t\tthis._pattern = PatternGenerator(this._values.length, this._type);\n\t}\n}\n\n","import { TicksClass } from \"../core/type/Ticks\";\nimport { NormalRange, Positive, Seconds, Ticks, Time, TransportTime } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent, ToneEventCallback, ToneEventOptions } from \"./ToneEvent\";\n\ntype SequenceEventDescription<T> = Array<T | Array<T | Array<T | Array<T | Array<T | T[]>>>>>;\n\ninterface SequenceOptions<T> extends Omit<ToneEventOptions<T>, \"value\"> {\n\tloopStart: number;\n\tloopEnd: number;\n\tsubdivision: Time;\n\tevents: SequenceEventDescription<T>;\n}\n\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal Cycles](http://tidalcycles.org/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Sequence<ValueType = any> extends ToneEvent<ValueType> {\n\n\treadonly name: string = \"Sequence\";\n\n\t/**\n\t * The subdivison of each note\n\t */\n\tprivate _subdivision: Ticks;\n\n\t/**\n\t * The object responsible for scheduling all of the events\n\t */\n\tprivate _part: Part = new Part({\n\t\tcallback: this._seqCallback.bind(this),\n\t\tcontext: this.context,\n\t});\n\n\t/**\n\t * private reference to all of the sequence proxies\n\t */\n\tprivate _events: SequenceEventDescription<ValueType> = [];\n\n\t/**\n\t * The proxied array\n\t */\n\tprivate _eventsArray: SequenceEventDescription<ValueType> = [];\n\n\t/**\n\t * @param  callback  The callback to invoke with every note\n\t * @param  sequence  The sequence\n\t * @param  subdivision  The subdivision between which events are placed.\n\t */\n\tconstructor(\n\t\tcallback?: ToneEventCallback<ValueType>,\n\t\tevents?: SequenceEventDescription<ValueType>,\n\t\tsubdivision?: Time,\n\t);\n\tconstructor(options?: Partial<SequenceOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]));\n\t\tconst options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n\n\t\tthis._subdivision = this.toTicks(options.subdivision);\n\n\t\tthis.events = options.events;\n\n\t\t// set all of the values\n\t\tthis.loop = options.loop;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis.playbackRate = options.playbackRate;\n\t\tthis.probability = options.probability;\n\t\tthis.humanize = options.humanize;\n\t\tthis.mute = options.mute;\n\t\tthis.playbackRate = options.playbackRate;\n\t}\n\n\tstatic getDefaults(): SequenceOptions<any> {\n\t\treturn Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n\t\t\tevents: [],\n\t\t\tloop: true,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tsubdivision: \"8n\",\n\t\t});\n\t}\n\n\t/**\n\t * The internal callback for when an event is invoked\n\t */\n\tprivate _seqCallback(time: Seconds, value: any): void {\n\t\tif (value !== null && !this.mute) {\n\t\t\tthis.callback(time, value);\n\t\t}\n\t}\n\n\t/**\n\t * The sequence\n\t */\n\tget events(): any[] {\n\t\treturn this._events;\n\t}\n\tset events(s) {\n\t\tthis.clear();\n\t\tthis._eventsArray = s;\n\t\tthis._events = this._createSequence(this._eventsArray);\n\t\tthis._eventsUpdated();\n\t}\n\n\t/**\n\t * Start the part at the given time.\n\t * @param  time    When to start the part.\n\t * @param  offset  The offset index to start at\n\t */\n\tstart(time?: TransportTime, offset?: number): this {\n\t\tthis._part.start(time, offset ? this._indexTime(offset) : offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the part at the given time.\n\t * @param  time  When to stop the part.\n\t */\n\tstop(time?: TransportTime): this {\n\t\tthis._part.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The subdivision of the sequence. This can only be\n\t * set in the constructor. The subdivision is the\n\t * interval between successive steps.\n\t */\n\tget subdivision(): Seconds {\n\t\treturn new TicksClass(this.context, this._subdivision).toSeconds();\n\t}\n\n\t/**\n\t * Create a sequence proxy which can be monitored to create subsequences\n\t */\n\tprivate _createSequence(array: any[]): any[] {\n\t\treturn new Proxy(array, {\n\t\t\tget: (target: any[], property: PropertyKey): any => {\n\t\t\t\t// property is index in this case\n\t\t\t\treturn target[property];\n\t\t\t},\n\t\t\tset: (target: any[], property: PropertyKey, value: any): boolean => {\n\t\t\t\tif (isString(property) && isFinite(parseInt(property, 10))) {\n\t\t\t\t\tif (isArray(value)) {\n\t\t\t\t\t\ttarget[property] = this._createSequence(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[property] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttarget[property] = value;\n\t\t\t\t}\n\t\t\t\tthis._eventsUpdated();\n\t\t\t\t// return true to accept the changes\n\t\t\t\treturn true;\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * When the sequence has changed, all of the events need to be recreated\n\t */\n\tprivate _eventsUpdated(): void {\n\t\tthis._part.clear();\n\t\tthis._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n\t\t// update the loopEnd\n\t\tthis.loopEnd = this.loopEnd;\n\t}\n\n\t/**\n\t * reschedule all of the events that need to be rescheduled\n\t */\n\tprivate _rescheduleSequence(sequence: any[], subdivision: Ticks, startOffset: Ticks): void {\n\t\tsequence.forEach((value, index) => {\n\t\t\tconst eventOffset = index * (subdivision) + startOffset;\n\t\t\tif (isArray(value)) {\n\t\t\t\tthis._rescheduleSequence(value, subdivision / value.length, eventOffset);\n\t\t\t} else {\n\t\t\t\tconst startTime = new TicksClass(this.context, eventOffset, \"i\").toSeconds();\n\t\t\t\tthis._part.add(startTime, value);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Get the time of the index given the Sequence's subdivision\n\t * @param  index\n\t * @return The time of that index\n\t */\n\tprivate _indexTime(index: number): Seconds {\n\t\treturn new TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();\n\t}\n\n\t/**\n\t * Clear all of the events\n\t */\n\tclear(): this {\n\t\tthis._part.clear();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._part.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// PROXY CALLS\n\t//-------------------------------------\n\n\tget loop(): boolean | number {\n\t\treturn this._part.loop;\n\t}\n\tset loop(l) {\n\t\tthis._part.loop = l;\n\t}\n\n\t/**\n\t * The index at which the sequence should start looping\n\t */\n\tget loopStart(): number {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(index) {\n\t\tthis._loopStart = index;\n\t\tthis._part.loopStart = this._indexTime(index);\n\t}\n\n\t/**\n\t * The index at which the sequence should end looping\n\t */\n\tget loopEnd(): number {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(index) {\n\t\tthis._loopEnd = index;\n\t\tif (index === 0) {\n\t\t\tthis._part.loopEnd = this._indexTime(this._eventsArray.length);\n\t\t} else {\n\t\t\tthis._part.loopEnd = this._indexTime(index);\n\t\t}\n\t}\n\n\tget startOffset(): Ticks {\n\t\treturn this._part.startOffset;\n\t}\n\tset startOffset(start) {\n\t\tthis._part.startOffset = start;\n\t}\n\n\tget playbackRate(): Positive {\n\t\treturn this._part.playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._part.playbackRate = rate;\n\t}\n\n\tget probability(): NormalRange {\n\t\treturn this._part.probability;\n\t}\n\tset probability(prob) {\n\t\tthis._part.probability = prob;\n\t}\n\n\tget progress(): NormalRange {\n\t\treturn this._part.progress;\n\t}\n\n\tget humanize(): boolean | Time {\n\t\treturn this._part.humanize;\n\t}\n\tset humanize(variation) {\n\t\tthis._part.humanize = variation;\n\t}\n\n\t/**\n\t * The number of scheduled events\n\t */\n\tget length(): number {\n\t\treturn this._part.length;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n\ninterface CrossFadeOptions extends ToneAudioNodeOptions {\n\tfade: NormalRange;\n}\n\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode<CrossFadeOptions> {\n\n\treadonly name: string = \"CrossFade\";\n\n\t/**\n\t * The crossfading is done by a StereoPannerNode\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\n\t/**\n\t * Split the output of the panner node into two values used to control the gains.\n\t */\n\tprivate _split: ChannelSplitterNode = this.context.createChannelSplitter(2);\n\n\t/**\n\t * Convert the fade value into an audio range value so it can be connected\n\t * to the panner.pan AudioParam\n\t */\n\tprivate _g2a: GainToAudio = new GainToAudio({ context: this.context });\n\n\t/**\n\t * The input which is at full level when fade = 0\n\t */\n\treadonly a: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The input which is at full level when fade = 1\n\t */\n\treadonly b: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output is a mix between `a` and `b` at the ratio of `fade`\n\t */\n\treadonly output: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * CrossFade has no input, you must choose either `a` or `b`\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The mix between the two inputs. A fade value of 0\n\t * will output 100% crossFade.a and\n\t * a value of 1 will output 100% crossFade.b.\n\t */\n\treadonly fade: Signal<\"normalRange\">;\n\n\tprotected _internalChannels = [this.a, this.b];\n\n\t/**\n\t * @param fade The initial fade value [0, 1].\n\t */\n\tconstructor(fade?: NormalRange);\n\tconstructor(options?: Partial<CrossFadeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n\t\tconst options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n\n\t\tthis.fade = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"normalRange\",\n\t\t\tvalue: options.fade,\n\t\t});\n\t\treadOnly(this, \"fade\");\n\n\t\tthis.context.getConstant(1).connect(this._panner);\n\t\tthis._panner.connect(this._split);\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = 1;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\t\tconnect(this._split, this.a.gain, 0);\n\t\tconnect(this._split, this.b.gain, 1);\n\n\t\tthis.fade.chain(this._g2a, this._panner.pan);\n\n\t\tthis.a.connect(this.output);\n\t\tthis.b.connect(this.output);\n\t}\n\n\tstatic getDefaults(): CrossFadeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tfade: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.a.dispose();\n\t\tthis.b.dispose();\n\t\tthis.output.dispose();\n\t\tthis.fade.dispose();\n\t\tthis._g2a.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis._split.disconnect();\n\t\treturn this;\n\t}\n}\n","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\n\nexport interface EffectOptions extends ToneAudioNodeOptions {\n\twet: NormalRange;\n}\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport abstract class Effect<Options extends EffectOptions>\n\textends ToneAudioNode<Options> {\n\n\treadonly name: string = \"Effect\";\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade = new CrossFade({ context: this.context });\n\n\t/**\n\t * The wet control is how much of the effected\n\t * will pass through to the output. 1 = 100% effected\n\t * signal, 0 = 100% dry signal.\n\t */\n\twet: Signal<\"normalRange\"> = this._dryWet.fade;\n\n\t/**\n\t * connect the effectSend to the input of hte effect\n\t */\n\tprotected effectSend: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * connect the output of the effect to the effectReturn\n\t */\n\tprotected effectReturn: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect input node\n\t */\n\tinput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect output\n\t */\n\toutput = this._dryWet;\n\n\tconstructor(options: EffectOptions) {\n\t\tsuper(options);\n\n\t\t// connections\n\t\tthis.input.fan(this._dryWet.a, this.effectSend);\n\t\tthis.effectReturn.connect(this._dryWet.b);\n\t\tthis.wet.setValueAtTime(options.wet, 0);\n\t\tthis._internalChannels = [this.effectReturn, this.effectSend];\n\t\treadOnly(this, \"wet\");\n\t}\n\n\tstatic getDefaults(): EffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\t/**\n\t * chains the effect in between the effectSend and effectReturn\n\t */\n\tprotected connectEffect(effect: ToneAudioNode | AudioNode): this {\n\t\t// add it to the internal channels\n\t\tthis._internalChannels.push(effect);\n\t\tthis.effectSend.chain(effect, this.effectReturn);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis.effectSend.dispose();\n\t\tthis.effectReturn.dispose();\n\t\tthis.wet.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"../effect/Effect\";\nimport { Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Param } from \"../core/context/Param\";\n\nexport interface LFOEffectOptions extends EffectOptions {\n\tfrequency: Frequency;\n\ttype: ToneOscillatorType;\n\tdepth: NormalRange;\n}\n\n/**\n * Base class for LFO-based effects.\n */\nexport abstract class LFOEffect<Options extends LFOEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"LFOEffect\";\n\n\t/**\n\t * the lfo which drives the filter cutoff\n\t */\n\tprotected _lfo: LFO;\n\n\t/**\n\t * The range of the filter modulating between the min and max frequency. \n\t * 0 = no modulation. 1 = full modulation.\n\t */\n\treadonly depth: Param<\"normalRange\">;\n\n\t/**\n\t * How fast the filter modulates between min and max. \n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\tconstructor(options: LFOEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._lfo = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tamplitude: options.depth,\n\t\t});\n\t\tthis.depth = this._lfo.amplitude;\n\t\tthis.frequency = this._lfo.frequency;\n\n\t\tthis.type = options.type;\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t}\n\n\tstatic getDefaults(): LFOEffectOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfrequency: 1,\n\t\t\ttype: \"sine\" as ToneOscillatorType,\n\t\t\tdepth: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Start the effect.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfo.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the lfo\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfo.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the filter to the transport. See [[LFO.sync]]\n\t */\n\tsync(): this {\n\t\tthis._lfo.sync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport.\n\t */\n\tunsync(): this {\n\t\tthis._lfo.unsync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * The type of the LFO's oscillator: See [[Oscillator.type]]\n\t * @example\n\t * const autoFilter = new Tone.AutoFilter().start().toDestination();\n\t * const noise = new Tone.Noise().start().connect(autoFilter);\n\t * autoFilter.type = \"square\";\n\t */\n\tget type() {\n\t\treturn this._lfo.type;\n\t}\n\tset type(type) {\n\t\tthis._lfo.type = type;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfo.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n","import { Frequency, Positive } from \"../core/type/Units\";\nimport { Filter, FilterOptions } from \"../component/filter/Filter\";\nimport { SourceOptions } from \"../source/Source\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect, LFOEffectOptions } from \"./LFOEffect\";\n\nexport interface AutoFilterOptions extends LFOEffectOptions {\n\tbaseFrequency: Frequency;\n\toctaves: Positive;\n\tfilter: Omit<FilterOptions, keyof SourceOptions | \"frequency\" | \"detune\" | \"gain\">;\n}\n\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate \n * and depth.\n *\n * @example\n * // create an autofilter and start it's LFO\n * const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Tone.Oscillator().connect(autoFilter).start();\n * @category Effect\n */\nexport class AutoFilter extends LFOEffect<AutoFilterOptions> {\n\n\treadonly name: string = \"AutoFilter\";\n\n\t/**\n\t * The filter node\n\t */\n\treadonly filter: Filter;\n\n\t/**\n\t * The octaves placeholder\n\t */\n\tprivate _octaves!: Positive;\n\n\t/**\n\t * @param frequency The rate of the LFO.\n\t * @param baseFrequency The lower value of the LFOs oscillation\n\t * @param octaves The number of octaves above the baseFrequency\n\t */\n\tconstructor(frequency?: Frequency, baseFrequency?: Frequency, octaves?: Positive);\n\tconstructor(options?: Partial<AutoFilterOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]));\n\t\tconst options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n\n\t\tthis.filter = new Filter(Object.assign(options.filter, {\n\t\t\tcontext: this.context,\n\t\t}));\n\n\t\t// connections\n\t\tthis.connectEffect(this.filter);\n\t\tthis._lfo.connect(this.filter.frequency);\n\t\tthis.octaves = options.octaves;\n\t\tthis.baseFrequency = options.baseFrequency;\n\t}\n\n\tstatic getDefaults(): AutoFilterOptions {\n\t\treturn Object.assign(LFOEffect.getDefaults(), {\n\t\t\tbaseFrequency: 200,\n\t\t\toctaves: 2.6,\n\t\t\tfilter: {\n\t\t\t\ttype: \"lowpass\" as const,\n\t\t\t\trolloff: -12 as -12,\n\t\t\t\tQ: 1,\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * The minimum value of the filter's cutoff frequency.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._lfo.min;\n\t}\n\tset baseFrequency(freq) {\n\t\tthis._lfo.min = this.toFrequency(freq);\n\t\t// and set the max\n\t\tthis.octaves = this._octaves;\n\t}\n\n\t/**\n\t * The maximum value of the filter's cutoff frequency. \n\t */\n\tget octaves(): Positive {\n\t\treturn this._octaves;\n\t}\n\tset octaves(oct) {\n\t\tthis._octaves = oct;\n\t\tthis._lfo.max = this._lfo.min * Math.pow(2, oct);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.filter.dispose();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface TonePannerOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tchannelCount: number;\n}\n\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode<TonePannerOptions> {\n\n\treadonly name: string = \"Panner\";\n\n\t/**\n\t * the panner node\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\treadonly input: StereoPannerNode = this._panner;\n\treadonly output: StereoPannerNode = this._panner;\n\n\t/**\n\t * The pan control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \t// pan hard right\n\t * \tconst panner = new Tone.Panner(1).toDestination();\n\t * \t// pan hard left\n\t * \tpanner.pan.setValueAtTime(-1, 0.25);\n\t * \tconst osc = new Tone.Oscillator(50, \"triangle\").connect(panner).start();\n\t * }, 0.5, 2);\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\tconstructor(options?: Partial<TonePannerOptions>);\n\t/**\n\t * @param pan The initial panner value (Defaults to 0 = \"center\").\n\t */\n\tconstructor(pan?: AudioRange);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n\t\tconst options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n\n\t\tthis.pan = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.pan,\n\t\t\tvalue: options.pan,\n\t\t\tminValue: -1,\n\t\t\tmaxValue: 1,\n\t\t});\n\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = options.channelCount;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\n\t\t// initial value\n\t\treadOnly(this, \"pan\");\n\t}\n\n\tstatic getDefaults(): TonePannerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis.pan.dispose();\n\t\treturn this;\n\t}\n}\n","import { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect, LFOEffectOptions } from \"./LFOEffect\";\nimport { Frequency } from \"../core/type/Units\";\n\nexport interface AutoPannerOptions extends LFOEffectOptions {\n\tchannelCount: number;\n}\n\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount. \n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect<AutoPannerOptions> {\n\n\treadonly name: string = \"AutoPanner\";\n\n\t/**\n\t * The filter node\n\t */\n\treadonly _panner: Panner;\n\n\t/**\n\t * @param frequency Rate of left-right oscillation. \n\t */\n\tconstructor(frequency?: Frequency);\n\tconstructor(options?: Partial<AutoPannerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis._panner = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tchannelCount: options.channelCount\n\t\t});\n\t\t// connections\n\t\tthis.connectEffect(this._panner);\n\t\tthis._lfo.connect(this._panner.pan);\n\t\tthis._lfo.min = -1;\n\t\tthis._lfo.max = 1;\n\t}\n\n\tstatic getDefaults(): AutoPannerOptions {\n\t\treturn Object.assign(LFOEffect.getDefaults(), {\n\t\t\tchannelCount: 1\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Time } from \"../../core/type/Units\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n\nexport interface FollowerOptions extends ToneAudioNodeOptions {\n\tsmoothing: Time;\n}\n\n/**\n * Follower is a simple envelope follower. \n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal. \n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\nexport class Follower extends ToneAudioNode<FollowerOptions> {\n\n\treadonly name: string = \"Follower\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * Private reference to the smoothing parameter\n\t */\n\tprivate _smoothing: Time;\n\n\t/**\n\t * The lowpass filter\n\t */\n\tprivate _lowpass: OnePoleFilter;\n\n\t/**\n\t * The absolute value\n\t */\n\tprivate _abs: Abs;\n\n\t/**\n\t * @param smoothing The rate of change of the follower.\n\t */\n\tconstructor(smoothing?: Time);\n\tconstructor(options?: Partial<FollowerOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]));\n\t\tconst options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n\n\t\tthis._abs = this.input = new Abs({ context: this.context });\n\t\tthis._lowpass = this.output = new OnePoleFilter({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: 1 / this.toSeconds(options.smoothing),\n\t\t\ttype: \"lowpass\"\n\t\t});\n\t\tthis._abs.connect(this._lowpass);\n\t\tthis._smoothing = options.smoothing;\n\t}\n\n\tstatic getDefaults(): FollowerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsmoothing: 0.05\n\t\t});\n\t}\n\n\t/**\n\t * The amount of time it takes a value change to arrive at the updated value. \n\t */\n\tget smoothing(): Time {\n\t\treturn this._smoothing;\n\t}\n\tset smoothing(smoothing) {\n\t\tthis._smoothing = smoothing;\n\t\tthis._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._abs.dispose();\n\t\tthis._lowpass.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { Decibels, Frequency, GainFactor, Hertz, Positive, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface AutoWahOptions extends EffectOptions {\n\tbaseFrequency: Frequency;\n\toctaves: Positive;\n\tsensitivity: Decibels;\n\tQ: Positive;\n\tgain: GainFactor;\n\tfollower: Time;\n}\n\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]]. \n * The frequency of the filter, follows the input amplitude curve. \n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n * \n * @example\n * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Tone.Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\nexport class AutoWah extends Effect<AutoWahOptions> {\n\n\treadonly name: string = \"AutoWah\";\n\n\t/**\n\t * The envelope follower. Set the attack/release\n\t * timing to adjust how the envelope is followed.\n\t */\n\tprivate _follower: Follower;\n\n\t/**\n\t * scales the follower value to the frequency domain\n\t */\n\tprivate _sweepRange: ScaleExp;\n\n\t/**\n\t * Hold the base frequency value\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * Private holder for the octave count\n\t */\n\tprivate _octaves: Positive;\n\n\t/**\n\t * the input gain to adjust the sensitivity\n\t */\n\tprivate _inputBoost: Gain;\n\n\t/**\n\t * Private holder for the filter\n\t */\n\tprivate _bandpass: Filter;\n\n\t/**\n\t * The peaking fitler\n\t */\n\tprivate _peaking: Filter;\n\n\t/**\n\t * The gain of the filter.\n\t */\n\treadonly gain: Signal<\"decibels\">;\n\n\t/**\n\t * The quality of the filter.\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * @param baseFrequency The frequency the filter is set to at the low point of the wah\n\t * @param octaves The number of octaves above the baseFrequency the filter will sweep to when fully open. \n\t * @param sensitivity The decibel threshold sensitivity for the incoming signal. Normal range of -40 to 0.\n\t */\n\tconstructor(baseFrequency?: Frequency, octaves?: Positive, sensitivity?: Decibels);\n\tconstructor(options?: Partial<AutoWahOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]));\n\t\tconst options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n\n\t\tthis._follower = new Follower({\n\t\t\tcontext: this.context,\n\t\t\tsmoothing: options.follower,\n\t\t});\n\t\tthis._sweepRange = new ScaleExp({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\texponent: 0.5,\n\t\t});\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\t\tthis._octaves = options.octaves;\n\t\tthis._inputBoost = new Gain({ context: this.context });\n\t\tthis._bandpass = new Filter({\n\t\t\tcontext: this.context,\n\t\t\trolloff: -48,\n\t\t\tfrequency: 0,\n\t\t\tQ: options.Q,\n\t\t});\n\t\tthis._peaking = new Filter({\n\t\t\tcontext: this.context,\n\t\t\ttype: \"peaking\"\n\t\t});\n\t\tthis._peaking.gain.value = options.gain;\n\t\tthis.gain = this._peaking.gain;\n\t\tthis.Q = this._bandpass.Q;\n\n\t\t// the control signal path\n\t\tthis.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);\n\t\tthis._sweepRange.connect(this._bandpass.frequency);\n\t\tthis._sweepRange.connect(this._peaking.frequency);\n\t\t// the filtered path\n\t\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t\t// set the initial value\n\t\tthis._setSweepRange();\n\t\tthis.sensitivity = options.sensitivity;\n\n\t\treadOnly(this, [\"gain\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): AutoWahOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tbaseFrequency: 100,\n\t\t\toctaves: 6,\n\t\t\tsensitivity: 0,\n\t\t\tQ: 2,\n\t\t\tgain: 2,\n\t\t\tfollower: 0.2,\n\t\t});\n\t}\n\n\t/**\n\t * The number of octaves that the filter will sweep above the baseFrequency.\n\t */\n\tget octaves() {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves) {\n\t\tthis._octaves = octaves;\n\t\tthis._setSweepRange();\n\t}\n\n\t/**\n\t * The follower's smoothing time\n\t */\n\tget follower(): Time {\n\t\treturn this._follower.smoothing;\n\t}\n\tset follower(follower) {\n\t\tthis._follower.smoothing = follower;\n\t}\n\n\t/**\n\t * The base frequency from which the sweep will start from.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(baseFreq) {\n\t\tthis._baseFrequency = this.toFrequency(baseFreq);\n\t\tthis._setSweepRange();\n\t}\n\n\t/**\n\t * The sensitivity to control how responsive to the input signal the filter is.\n\t */\n\tget sensitivity(): Decibels {\n\t\treturn gainToDb(1 / this._inputBoost.gain.value);\n\t}\n\tset sensitivity(sensitivity) {\n\t\tthis._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n\t}\n\n\t/**\n\t * sets the sweep range of the scaler\n\t */\n\tprivate _setSweepRange() {\n\t\tthis._sweepRange.min = this._baseFrequency;\n\t\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._follower.dispose();\n\t\tthis._sweepRange.dispose();\n\t\tthis._bandpass.dispose();\n\t\tthis._peaking.dispose();\n\t\tthis._inputBoost.dispose();\n\t\treturn this;\n\t}\n}\n","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"bit-crusher\";\n\nexport const bitCrusherWorklet = /* javascript */`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, bitCrusherWorklet);\n","import { ToneAudioWorklet, ToneAudioWorkletOptions } from \"../core/worklet/ToneAudioWorklet\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { Positive } from \"../core/type/Units\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { workletName } from \"./BitCrusher.worklet\";\n\nexport interface BitCrusherOptions extends EffectOptions {\n\tbits: Positive;\n}\n\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n * \n * @category Effect\n */\nexport class BitCrusher extends Effect<BitCrusherOptions> {\n\n\treadonly name: string = \"BitCrusher\";\n\n\t/**\n\t * The bit depth of the effect\n\t * @min 1\n\t * @max 16\n\t */\n\treadonly bits: Param<\"positive\">;\n\n\t/**\n\t * The node which does the bit crushing effect. Runs in an AudioWorklet when possible.\n\t */\n\tprivate _bitCrusherWorklet: BitCrusherWorklet;\n\n\tconstructor(bits?: Positive);\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n\t\tconst options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n\n\t\tthis._bitCrusherWorklet = new BitCrusherWorklet({\n\t\t\tcontext: this.context,\n\t\t\tbits: options.bits,\n\t\t});\n\t\t// connect it up\n\t\tthis.connectEffect(this._bitCrusherWorklet);\n\n\t\tthis.bits = this._bitCrusherWorklet.bits;\n\t}\n\n\tstatic getDefaults(): BitCrusherOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tbits: 4,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._bitCrusherWorklet.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface BitCrusherWorkletOptions extends ToneAudioWorkletOptions {\n\tbits: number;\n}\n\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nclass BitCrusherWorklet extends ToneAudioWorklet<BitCrusherWorkletOptions> {\n\n\treadonly name: string = \"BitCrusherWorklet\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\treadonly bits: Param<\"positive\">;\n\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.bits = new Param<\"positive\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.bits,\n\t\t\tunits: \"positive\",\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 16,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\t}\n\n\tstatic getDefaults(): BitCrusherWorkletOptions {\n\t\treturn Object.assign(ToneAudioWorklet.getDefaults(), {\n\t\t\tbits: 12,\n\t\t});\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst bits = node.parameters.get(\"bits\") as AudioParam;\n\t\tthis.bits.setParam(bits);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.bits.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { assert } from \"../core/util/Debug\";\n\nexport interface ChebyshevOptions extends EffectOptions {\n\torder: Positive;\n\toversample: OverSampleType;\n}\n\n/**\n * Chebyshev is a waveshaper which is good \n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones, \n * and order = 1 is no change. \n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * // create a new cheby\n * const cheby = new Tone.Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new Tone.MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\nexport class Chebyshev extends Effect<ChebyshevOptions> {\n\n\treadonly name: string = \"Chebyshev\";\n\n\t/**\n\t * The private waveshaper node\n\t */\n\tprivate _shaper: WaveShaper;\n\n\t/**\n\t * holds onto the order of the filter\n\t */\n\tprivate _order: number;\n\n\t/**\n\t * @param order The order of the chebyshev polynomial. Normal range between 1-100. \n\t */\n\tconstructor(order?: Positive);\n\tconstructor(options?: Partial<ChebyshevOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]));\n\t\tconst options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n\n\t\tthis._shaper = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 4096\n\t\t});\n\t\tthis._order = options.order;\n\n\t\tthis.connectEffect(this._shaper);\n\t\tthis.order = options.order;\n\t\tthis.oversample = options.oversample;\n\t}\n\n\tstatic getDefaults(): ChebyshevOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\torder: 1,\n\t\t\toversample: \"none\" as const\n\t\t});\n\t}\n\n\t/**\n\t * get the coefficient for that degree\n\t * @param  x the x value\n\t * @param  degree \n\t * @param  memo memoize the computed value. this speeds up computation greatly. \n\t */\n\tprivate _getCoefficient(x: number, degree: number, memo: Map<number, number>): number {\n\t\tif (memo.has(degree)) {\n\t\t\treturn memo.get(degree) as number;\n\t\t} else if (degree === 0) {\n\t\t\tmemo.set(degree, 0);\n\t\t} else if (degree === 1) {\n\t\t\tmemo.set(degree, x);\n\t\t} else {\n\t\t\tmemo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n\t\t}\n\t\treturn memo.get(degree) as number;\n\t}\n\n\t/**\n\t * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming \n\t * signal through a Tone.WaveShaper. Must be an integer. The equations are in the form:\n\t * ```\n\t * order 2: 2x^2 + 1\n\t * order 3: 4x^3 + 3x \n\t * ```\n\t * @min 1\n\t * @max 100\n\t */\n\tget order(): Positive {\n\t\treturn this._order;\n\t}\n\tset order(order) {\n\t\tassert(Number.isInteger(order), \"'order' must be an integer\");\n\t\tthis._order = order;\n\t\tthis._shaper.setMap((x => {\n\t\t\treturn this._getCoefficient(x, order, new Map());\n\t\t}));\n\t}\n\n\t/**\n\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\tset oversample(oversampling) {\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\ninterface SplitOptions extends ToneAudioNodeOptions {\n\tchannels: number;\n}\n\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nexport class Split extends ToneAudioNode<SplitOptions> {\n\treadonly name: string = \"Split\";\n\n\t/**\n\t * The splitting node\n\t */\n\tprivate _splitter: ChannelSplitterNode;\n\n\treadonly input: ChannelSplitterNode;\n\treadonly output: ChannelSplitterNode;\n\n\t/**\n\t * @param channels The number of channels to merge.\n\t */\n\tconstructor(channels?: number);\n\tconstructor(options?: Partial<SplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n\t\tconst options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n\n\t\tthis._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n\t\tthis._internalChannels = [this._splitter];\n\t}\n\n\tstatic getDefaults(): SplitOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tchannels: 2,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._splitter.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Positive } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\ninterface MergeOptions extends ToneAudioNodeOptions {\n\tchannels: Positive;\n}\n\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nexport class Merge extends ToneAudioNode<MergeOptions> {\n\n\treadonly name: string = \"Merge\";\n\n\t/**\n\t * The merger node for the channels.\n\t */\n\tprivate _merger: ChannelMergerNode;\n\n\t/**\n\t * The output is the input channels combined into a single (multichannel) output\n\t */\n\treadonly output: ChannelMergerNode;\n\n\t/**\n\t * Multiple input connections combine into a single output.\n\t */\n\treadonly input: ChannelMergerNode;\n\n\t/**\n\t * @param channels The number of channels to merge.\n\t */\n\tconstructor(channels?: Positive);\n\tconstructor(options?: Partial<MergeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n\t\tconst options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n\n\t\tthis._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n\t}\n\n\tstatic getDefaults(): MergeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tchannels: 2,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merger.disconnect();\n\t\treturn this;\n\t}\n}\n","import { EffectOptions } from \"./Effect\";\nimport { connect, connectSeries, OutputNode, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport type StereoEffectOptions = EffectOptions;\n\n/**\n * Base class for Stereo effects.\n */\nexport class StereoEffect<Options extends StereoEffectOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"StereoEffect\";\n\n\treadonly input: Gain;\n\treadonly output: CrossFade;\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade;\n\t\n\t/**\n\t * The wet control, i.e. how much of the effected\n\t * will pass through to the output.\n\t */\n\treadonly wet: Signal<\"normalRange\">;\n\t\n\t/**\n\t * Split it\n\t */\n\tprotected _split: Split;\n\t\n\t/**\n\t * the stereo effect merger\n\t */\n\tprotected _merge: Merge;\n\n\tconstructor(options: StereoEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\t// force mono sources to be stereo\n\t\tthis.input.channelCount = 2;\n\t\tthis.input.channelCountMode = \"explicit\";\n\n\t\tthis._dryWet = this.output = new CrossFade({\n\t\t\tcontext: this.context,\n\t\t\tfade: options.wet\n\t\t});\n\t\tthis.wet = this._dryWet.fade;\n\t\tthis._split = new Split({ context: this.context, channels: 2 });\n\t\tthis._merge = new Merge({ context: this.context, channels: 2 });\n\n\t\t// connections\n\t\tthis.input.connect(this._split);\n\t\t// dry wet connections\n\t\tthis.input.connect(this._dryWet.a);\n\t\tthis._merge.connect(this._dryWet.b);\n\t\treadOnly(this, [\"wet\"]);\n\t}\n\t\n\t/**\n\t * Connect the left part of the effect\n\t */\n\tprotected connectEffectLeft(...nodes: OutputNode[]): void {\n\t\tthis._split.connect(nodes[0], 0, 0);\n\t\tconnectSeries(...nodes);\n\t\tconnect(nodes[nodes.length-1], this._merge, 0, 0);\n\t}\n\t\n\t/**\n\t * Connect the right part of the effect\n\t */\n\tprotected connectEffectRight(...nodes: OutputNode[]): void {\n\t\tthis._split.connect(nodes[0], 1, 0);\n\t\tconnectSeries(...nodes);\n\t\tconnect(nodes[nodes.length-1], this._merge, 0, 1);\n\t}\n\n\tstatic getDefaults(): StereoEffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis._split.dispose();\n\t\tthis._merge.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n\nexport interface StereoFeedbackEffectOptions extends StereoEffectOptions {\n\tfeedback: NormalRange;\n}\n\n/**\n * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.\n */\nexport class StereoFeedbackEffect<Options extends StereoFeedbackEffectOptions> extends StereoEffect<Options> {\n\t\n\t/**\n\t * The amount of feedback from the output\n\t * back into the input of the effect (routed\n\t * across left and right channels).\n\t */\n\treadonly feedback: Signal<\"normalRange\">;\n\n\t/**\n\t * the left side feedback\n\t */\n\tprotected _feedbackL: Gain;\n\n\t/**\n\t * the right side feedback\n\t */\n\tprotected _feedbackR: Gain;\n\n\t/**\n\t * Split the channels for feedback\n\t */\n\tprotected _feedbackSplit: Split;\n\n\t/**\n\t * Merge the channels for feedback\n\t */\n\tprotected _feedbackMerge: Merge;\n\n\tconstructor(options: StereoFeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis.feedback = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.feedback, \n\t\t\tunits: \"normalRange\"\n\t\t});\n\t\tthis._feedbackL = new Gain({ context: this.context });\n\t\tthis._feedbackR = new Gain({ context: this.context });\n\n\t\tthis._feedbackSplit = new Split({ context: this.context, channels: 2 });\n\t\tthis._feedbackMerge = new Merge({ context: this.context, channels: 2 });\n\n\t\tthis._merge.connect(this._feedbackSplit);\n\t\tthis._feedbackMerge.connect(this._split);\n\t\t\n\t\t// the left output connected to the left input\n\t\tthis._feedbackSplit.connect(this._feedbackL, 0, 0);\n\t\tthis._feedbackL.connect(this._feedbackMerge, 0, 0);\n\n\t\t// the right output connected to the right input\n\t\tthis._feedbackSplit.connect(this._feedbackR, 1, 0);\n\t\tthis._feedbackR.connect(this._feedbackMerge, 0, 1);\n\t\t\n\t\t// the feedback control\n\t\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\treadOnly(this, [\"feedback\"]);\n\t}\n\n\tstatic getDefaults(): StereoFeedbackEffectOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfeedback: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.feedback.dispose();\n\t\tthis._feedbackL.dispose();\n\t\tthis._feedbackR.dispose();\n\t\tthis._feedbackSplit.dispose();\n\t\tthis._feedbackMerge.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoFeedbackEffect, StereoFeedbackEffectOptions } from \"../effect/StereoFeedbackEffect\";\nimport { Degrees, Frequency, Milliseconds, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface ChorusOptions extends StereoFeedbackEffectOptions {\n\tfrequency: Frequency;\n\tdelayTime: Milliseconds;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n\tspread: Degrees;\n}\n\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects. \n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n * \n * @category Effect\n */\nexport class Chorus extends StereoFeedbackEffect<ChorusOptions> {\n\n\treadonly name: string = \"Chorus\";\n\n\t/**\n\t * the depth of the chorus\n\t */\n\tprivate _depth: NormalRange;\n\n\t/**\n\t * the delayTime in seconds.\n\t */\n\tprivate _delayTime: Seconds;\n\n\t/**\n\t * the lfo which controls the delayTime\n\t */\n\tprivate _lfoL: LFO\n\n\t/**\n\t * another LFO for the right side with a 180 degree phase diff\n\t */\n\tprivate _lfoR: LFO\n\n\t/**\n\t * delay for left\n\t */\n\tprivate _delayNodeL: Delay;\n\n\t/**\n\t * delay for right\n\t */\n\tprivate _delayNodeR: Delay;\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t */\n\treadonly frequency: Signal<\"frequency\">\n\n\t/**\n\t * @param frequency The frequency of the LFO.\n\t * @param delayTime The delay of the chorus effect in ms.\n\t * @param depth The depth of the chorus.\n\t */\n\tconstructor(frequency?: Frequency, delayTime?: Milliseconds, depth?: NormalRange);\n\tconstructor(options?: Partial<ChorusOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n\n\t\tthis._depth = options.depth;\n\t\tthis._delayTime = options.delayTime / 1000;\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tphase: 180\n\t\t});\n\t\tthis._delayNodeL = new Delay({ context: this.context });\n\t\tthis._delayNodeR = new Delay({ context: this.context });\n\t\tthis.frequency = this._lfoL.frequency;\n\t\treadOnly(this, [\"frequency\"]);\n\t\t// have one LFO frequency control the other\n\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\n\t\t// connections\n\t\tthis.connectEffectLeft(this._delayNodeL);\n\t\tthis.connectEffectRight(this._delayNodeR);\n\t\t// lfo setup\n\t\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\t\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t\t// set the initial values\n\t\tthis.depth = this._depth;\n\t\tthis.type = options.type;\n\t\tthis.spread = options.spread;\n\t}\n\n\tstatic getDefaults(): ChorusOptions {\n\t\treturn Object.assign(StereoFeedbackEffect.getDefaults(), {\n\t\t\tfrequency: 1.5,\n\t\t\tdelayTime: 3.5,\n\t\t\tdepth: 0.7,\n\t\t\ttype: \"sine\" as const,\n\t\t\tspread: 180,\n\t\t\tfeedback: 0,\n\t\t\twet: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * The depth of the effect. A depth of 1 makes the delayTime\n\t * modulate between 0 and 2*delayTime (centered around the delayTime).\n\t */\n\tget depth(): NormalRange {\n\t\treturn this._depth;\n\t}\n\tset depth(depth) {\n\t\tthis._depth = depth;\n\t\tconst deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n\n\t/**\n\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t * will give a more pronounced effect. Nominal range a delayTime\n\t * is between 2 and 20ms.\n\t */\n\tget delayTime(): Milliseconds {\n\t\treturn this._delayTime * 1000;\n\t}\n\tset delayTime(delayTime) {\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n\n\t/**\n\t * The oscillator type of the LFO.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfoL.type;\n\t}\n\tset type(type) {\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n\n\t/**\n\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t */\n\tget spread(): Degrees {\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t}\n\tset spread(spread) {\n\t\tthis._lfoL.phase = 90 - (spread / 2);\n\t\tthis._lfoR.phase = (spread / 2) + 90;\n\t}\n\n\t/**\n\t * Start the effect.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfoL.start(time);\n\t\tthis._lfoR.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the lfo\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfoL.stop(time);\n\t\tthis._lfoR.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the filter to the transport. See [[LFO.sync]]\n\t */\n\tsync(): this {\n\t\tthis._lfoL.sync();\n\t\tthis._lfoR.sync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport.\n\t */\n\tunsync(): this {\n\t\tthis._lfoL.unsync();\n\t\tthis._lfoR.unsync();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._delayNodeL.dispose();\n\t\tthis._delayNodeR.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface DistortionOptions extends EffectOptions {\n\tdistortion: number;\n\toversample: OverSampleType;\n}\n\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\nexport class Distortion extends Effect<DistortionOptions> {\n\n\treadonly name: string = \"Distortion\";\n\n\t/**\n\t * The waveshaper which does the distortion\n\t */\n\tprivate _shaper: WaveShaper;\n\n\t/**\n\t * Stores the distortion value\n\t */\n\tprivate _distortion: number;\n\n\t/**\n\t * @param distortion The amount of distortion (nominal range of 0-1)\n\t */\n\tconstructor(distortion?: number);\n\tconstructor(options?: Partial<DistortionOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]));\n\t\tconst options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n\n\t\tthis._shaper = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 4096,\n\t\t});\n\n\t\tthis._distortion = options.distortion;\n\n\t\tthis.connectEffect(this._shaper);\n\t\tthis.distortion = options.distortion;\n\t\tthis.oversample = options.oversample;\n\t}\n\n\tstatic getDefaults(): DistortionOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tdistortion: 0.4,\n\t\t\toversample: \"none\" as OverSampleType,\n\t\t});\n\t}\n\n\t/**\n\t * The amount of distortion. Nominal range is between 0 and 1.\n\t */\n\tget distortion(): number {\n\t\treturn this._distortion;\n\t}\n\tset distortion(amount) {\n\t\tthis._distortion = amount;\n\t\tconst k = amount * 100;\n\t\tconst deg = Math.PI / 180;\n\t\tthis._shaper.setMap((x) => {\n\t\t\tif (Math.abs(x) < 0.001) {\n\t\t\t\t// should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\tset oversample(oversampling) {\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface FeedbackEffectOptions extends EffectOptions {\n\t/**\n\t * The feedback from the output back to the input\n\t * ```\n\t * +---<--------<---+\n\t * |                |\n\t * |  +----------+  |\n\t * +--> feedback +>-+\n\t *    +----------+\n\t * ```\n\t */\n\tfeedback: NormalRange;\n}\n\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport abstract class FeedbackEffect<Options extends FeedbackEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"FeedbackEffect\";\n\n\t/**\n\t * the gain which controls the feedback\n\t */\n\tprivate _feedbackGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amount of signal which is fed back into the effect input.\n\t */\n\tfeedback: Param<\"normalRange\">;\n\n\tconstructor(options: FeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._feedbackGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.feedback,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\tthis.feedback = this._feedbackGain.gain;\n\t\treadOnly(this, \"feedback\");\n\n\t\t// the feedback loop\n\t\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t}\n\n\tstatic getDefaults(): FeedbackEffectOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfeedback: 0.125,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._feedbackGain.dispose();\n\t\tthis.feedback.dispose();\n\t\treturn this;\n\t}\n}\n","import { Delay } from \"../core/context/Delay\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect, FeedbackEffectOptions } from \"./FeedbackEffect\";\n\ninterface FeedbackDelayOptions extends FeedbackEffectOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect<FeedbackDelayOptions> {\n\n\treadonly name: string = \"FeedbackDelay\";\n\n\t/**\n\t * the delay node\n\t */\n\tprivate _delayNode: Delay;\n\n\t/**\n\t * The delayTime of the FeedbackDelay.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\tconstructor(delayTime?: Time, feedback?: NormalRange);\n\tconstructor(options?: Partial<FeedbackDelayOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n\t\tconst options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis.delayTime = this._delayNode.delayTime;\n\n\t\t// connect it up\n\t\tthis.connectEffect(this._delayNode);\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): FeedbackDelayOptions {\n\t\treturn Object.assign(FeedbackEffect.getDefaults(), {\n\t\t\tdelayTime: 0.25,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\n\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\nexport class PhaseShiftAllpass extends ToneAudioNode<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"PhaseShiftAllpass\";\n\n\treadonly input = new Gain({ context: this.context });\n\n\t/**\n\t * The Allpass filter in the first bank\n\t */\n\tprivate _bank0: IIRFilterNode[];\n\n\t/**\n\t * The Allpass filter in the seconds bank\n\t */\n\tprivate _bank1: IIRFilterNode[];\n\n\t/**\n\t * A IIR filter implementing a delay by one sample used by the first bank\n\t */\n\tprivate _oneSampleDelay: IIRFilterNode;\n\n\t/**\n\t * The phase shifted output\n\t */\n\treadonly output = new Gain({ context: this.context });\n\n\t/**\n\t * The PhaseShifted allpass output\n\t */\n\treadonly offset90 = new Gain({ context: this.context });\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>) {\n\n\t\tsuper(options);\n\n\t\tconst allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n\t\tconst allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n\n\t\tthis._bank0 = this._createAllPassFilterBank(allpassBank1Values);\n\t\tthis._bank1 = this._createAllPassFilterBank(allpassBank2Values);\n\t\tthis._oneSampleDelay = this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]);\n\n\t\t// connect Allpass filter banks\n\t\tconnectSeries(this.input, ...this._bank0, this._oneSampleDelay, this.output);\n\t\tconnectSeries(this.input, ...this._bank1, this.offset90);\n\t}\n\n\t/**\n\t * Create all of the IIR filters from an array of values using the coefficient calculation.\n\t */\n\tprivate _createAllPassFilterBank(bankValues: number[]): IIRFilterNode[] {\n\t\tconst nodes: IIRFilterNode[] = bankValues.map(value => {\n\t\t\tconst coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n\t\t\treturn this.context.createIIRFilter(coefficients[0], coefficients[1]);\n\t\t});\n\n\t\treturn nodes;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.offset90.dispose();\n\t\tthis._bank0.forEach(f => f.disconnect());\n\t\tthis._bank1.forEach(f => f.disconnect());\n\t\tthis._oneSampleDelay.disconnect();\n\t\treturn this;\n\t}\n}\n","import { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { Frequency } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect, EffectOptions } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n\ninterface FrequencyShifterOptions extends EffectOptions {\n\tfrequency: Frequency;\n}\n\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * const input = new Tone.Oscillator(230, \"sawtooth\").start();\n * const shift = new Tone.FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\nexport class FrequencyShifter extends Effect<FrequencyShifterOptions> {\n\n\treadonly name: string = \"FrequencyShifter\";\n\n\t/**\n\t * The ring modulators carrier frequency. This frequency determines\n\t * by how many Hertz the input signal will be shifted up or down. Default is 0.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The ring modulators sine carrier\n\t */\n\tprivate _sine: ToneOscillatorNode;\n\n\t/**\n\t * The ring modulators cosine carrier\n\t */\n\tprivate _cosine: Oscillator;\n\n\t/**\n\t * The sine multiply operator\n\t */\n\tprivate _sineMultiply: Multiply;\n\n\t/**\n\t * The cosine multiply operator\n\t */\n\tprivate _cosineMultiply: Multiply;\n\n\t/**\n\t * The negate operator\n\t */\n\tprivate _negate: Negate;\n\n\t/**\n\t * The final add operator\n\t */\n\tprivate _add: Add;\n\n\t/**\n\t * The phase shifter to create the initial 90° phase offset\n\t */\n\tprivate _phaseShifter: PhaseShiftAllpass;\n\n\t/**\n\t * @param frequency The incoming signal is shifted by this frequency value.\n\t */\n\tconstructor(frequency?: Frequency);\n\tconstructor(options?: Partial<FrequencyShifterOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t\tminValue: -this.context.sampleRate / 2,\n\t\t\tmaxValue: this.context.sampleRate / 2,\n\t\t});\n\n\t\tthis._sine = new ToneOscillatorNode({\n\t\t\tcontext: this.context,\n\t\t\ttype: \"sine\",\n\t\t});\n\n\t\tthis._cosine = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: -90,\n\t\t\ttype: \"sine\",\n\t\t});\n\n\t\tthis._sineMultiply = new Multiply({ context: this.context });\n\t\tthis._cosineMultiply = new Multiply({ context: this.context });\n\t\tthis._negate = new Negate({ context: this.context });\n\t\tthis._add = new Add({ context: this.context });\n\n\t\tthis._phaseShifter = new PhaseShiftAllpass({ context: this.context });\n\t\tthis.effectSend.connect(this._phaseShifter);\n\n\t\t// connect the carrier frequency signal to the two oscillators\n\t\tthis.frequency.fan(this._sine.frequency, this._cosine.frequency);\n\n\t\tthis._phaseShifter.offset90.connect(this._cosineMultiply);\n\t\tthis._cosine.connect(this._cosineMultiply.factor);\n\n\t\tthis._phaseShifter.connect(this._sineMultiply);\n\t\tthis._sine.connect(this._sineMultiply.factor);\n\t\tthis._sineMultiply.connect(this._negate);\n\n\t\tthis._cosineMultiply.connect(this._add);\n\t\tthis._negate.connect(this._add.addend);\n\n\t\tthis._add.connect(this.effectReturn);\n\n\t\t// start the oscillators at the same time\n\t\tconst now = this.immediate();\n\t\tthis._sine.start(now);\n\t\tthis._cosine.start(now);\n\t}\n\n\tstatic getDefaults(): FrequencyShifterOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfrequency: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis._add.dispose();\n\t\tthis._cosine.dispose();\n\t\tthis._cosineMultiply.dispose();\n\t\tthis._negate.dispose();\n\t\tthis._phaseShifter.dispose();\n\t\tthis._sine.dispose();\n\t\tthis._sineMultiply.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { Frequency, NormalRange } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n\nexport interface FreeverbOptions extends StereoEffectOptions {\n\tdampening: Frequency;\n\troomSize: NormalRange;\n}\n\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\nconst combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\nconst allpassFilterFrequencies = [225, 556, 441, 341];\n\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].\n * @example\n * const freeverb = new Tone.Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new Tone.NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\nexport class Freeverb extends StereoEffect<FreeverbOptions> {\n\n\treadonly name: string = \"Freeverb\";\n\n\t/**\n\t * The roomSize value between 0 and 1. A larger roomSize will result in a longer decay.\n\t */\n\treadonly roomSize: Signal<\"normalRange\">;\n\n\t/**\n\t * the comb filters\n\t */\n\tprivate _combFilters: LowpassCombFilter[] = [];\n\n\t/**\n\t * the allpass filters on the left\n\t */\n\tprivate _allpassFiltersL: BiquadFilterNode[] = [];\n\n\t/**\n\t * the allpass filters on the right\n\t */\n\tprivate _allpassFiltersR: BiquadFilterNode[] = [];\n\n\t/**\n\t * @param roomSize Correlated to the decay time.\n\t * @param dampening The cutoff frequency of a lowpass filter as part of the reverb.\n\t */\n\tconstructor(roomSize?: NormalRange, dampening?: Frequency);\n\tconstructor(options?: Partial<FreeverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]));\n\t\tconst options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n\n\t\tthis.roomSize = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.roomSize,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\t// make the allpass filters on the right\n\t\tthis._allpassFiltersL = allpassFilterFrequencies.map(freq => {\n\t\t\tconst allpassL = this.context.createBiquadFilter();\n\t\t\tallpassL.type = \"allpass\";\n\t\t\tallpassL.frequency.value = freq;\n\t\t\treturn allpassL;\n\t\t});\n\n\t\t// make the allpass filters on the left\n\t\tthis._allpassFiltersR = allpassFilterFrequencies.map(freq => {\n\t\t\tconst allpassR = this.context.createBiquadFilter();\n\t\t\tallpassR.type = \"allpass\";\n\t\t\tallpassR.frequency.value = freq;\n\t\t\treturn allpassR;\n\t\t});\n\n\t\t// make the comb filters\n\t\tthis._combFilters = combFilterTunings.map((delayTime, index) => {\n\t\t\tconst lfpf = new LowpassCombFilter({\n\t\t\t\tcontext: this.context,\n\t\t\t\tdampening: options.dampening,\n\t\t\t\tdelayTime,\n\t\t\t});\n\t\t\tif (index < combFilterTunings.length / 2) {\n\t\t\t\tthis.connectEffectLeft(lfpf, ...this._allpassFiltersL);\n\t\t\t} else {\n\t\t\t\tthis.connectEffectRight(lfpf, ...this._allpassFiltersR);\n\t\t\t}\n\t\t\tthis.roomSize.connect(lfpf.resonance);\n\t\t\treturn lfpf;\n\t\t});\n\n\t\treadOnly(this, [\"roomSize\"]);\n\t}\n\n\tstatic getDefaults(): FreeverbOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\troomSize: 0.7,\n\t\t\tdampening: 3000\n\t\t});\n\t}\n\n\t/**\n\t * The amount of dampening of the reverberant signal.\n\t */\n\n\tget dampening(): Frequency {\n\t\treturn this._combFilters[0].dampening;\n\t}\n\tset dampening(d) {\n\t\tthis._combFilters.forEach(c => c.dampening = d);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._allpassFiltersL.forEach(al => al.disconnect());\n\t\tthis._allpassFiltersR.forEach(ar => ar.disconnect());\n\t\tthis._combFilters.forEach(cf => cf.dispose());\n\t\tthis.roomSize.dispose();\n\t\treturn this;\n\t}\n}\n","import { NormalRange } from \"../core/type/Units\";\nimport { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface JCReverbOptions extends StereoEffectOptions {\n\troomSize: NormalRange;\n}\n\n/**\n * an array of the comb filter delay time values\n */\nconst combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n/**\n * the resonances of each of the comb filters\n */\nconst combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n * the allpass filter frequencies\n */\nconst allpassFilterFreqs = [347, 113, 37];\n\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n * \n * @category Effect\n */\nexport class JCReverb extends StereoEffect<JCReverbOptions> {\n\n\treadonly name: string = \"JCReverb\";\n\n\t/**\n\t * Room size control values. \n\t */\n\treadonly roomSize: Signal<\"normalRange\">\n\n\t/**\n\t * Scale the room size\n\t */\n\tprivate _scaleRoomSize: Scale;\n\n\t/**\n\t * a series of allpass filters\n\t */\n\tprivate _allpassFilters: BiquadFilterNode[] = [];\n\n\t/**\n\t * parallel feedback comb filters\n\t */\n\tprivate _feedbackCombFilters: FeedbackCombFilter[] = [];\n\n\t/**\n\t * @param roomSize Correlated to the decay time.\n\t */\n\tconstructor(roomSize?: NormalRange);\n\tconstructor(options?: Partial<JCReverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]));\n\t\tconst options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n\n\t\tthis.roomSize = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.roomSize,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\tthis._scaleRoomSize = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmin: -0.733,\n\t\t\tmax: 0.197,\n\t\t});\n\n\t\t// make the allpass filters\n\t\tthis._allpassFilters = allpassFilterFreqs.map(freq => {\n\t\t\tconst allpass = this.context.createBiquadFilter();\n\t\t\tallpass.type = \"allpass\";\n\t\t\tallpass.frequency.value = freq;\n\t\t\treturn allpass;\n\t\t});\n\n\t\t// and the comb filters\n\t\tthis._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index) => {\n\t\t\tconst fbcf = new FeedbackCombFilter({\n\t\t\t\tcontext: this.context,\n\t\t\t\tdelayTime,\n\t\t\t});\n\t\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\t\tfbcf.resonance.value = combFilterResonances[index];\n\t\t\tif (index < combFilterDelayTimes.length / 2) {\n\t\t\t\tthis.connectEffectLeft(...this._allpassFilters, fbcf);\n\t\t\t} else {\n\t\t\t\tthis.connectEffectRight(...this._allpassFilters, fbcf);\n\t\t\t}\n\t\t\treturn fbcf;\n\t\t});\n\n\t\t// chain the allpass filters together\n\t\tthis.roomSize.connect(this._scaleRoomSize);\n\t\treadOnly(this, [\"roomSize\"]);\n\t}\n\n\tstatic getDefaults(): JCReverbOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\troomSize: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._allpassFilters.forEach(apf => apf.disconnect());\n\t\tthis._feedbackCombFilters.forEach(fbcf => fbcf.dispose());\n\t\tthis.roomSize.dispose();\n\t\tthis._scaleRoomSize.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoFeedbackEffect, StereoFeedbackEffectOptions } from \"./StereoFeedbackEffect\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface StereoXFeedbackEffectOptions extends StereoFeedbackEffectOptions {\n\tfeedback: NormalRange;\n}\n\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\nexport class StereoXFeedbackEffect<Options extends StereoXFeedbackEffectOptions> extends StereoFeedbackEffect<Options> {\n\t\n\tconstructor(options: StereoXFeedbackEffectOptions) {\n\n\t\tsuper(options);\n\t\t// the left output connected to the right input\n\t\tthis._feedbackL.disconnect();\n\t\tthis._feedbackL.connect(this._feedbackMerge, 0, 1);\n\n\t\t// the left output connected to the right input\n\t\tthis._feedbackR.disconnect();\n\t\tthis._feedbackR.connect(this._feedbackMerge, 0, 0);\n\t\t\n\t\treadOnly(this, [\"feedback\"]);\n\t}\n}\n","import { StereoXFeedbackEffect, StereoXFeedbackEffectOptions } from \"./StereoXFeedbackEffect\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface PingPongDelayOptions extends StereoXFeedbackEffectOptions {\n\tdelayTime: Time;\n\tmaxDelay: Seconds;\n}\n\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\nexport class PingPongDelay extends StereoXFeedbackEffect<PingPongDelayOptions> {\n\n\treadonly name: string = \"PingPongDelay\";\n\n\t/**\n\t * the delay node on the left side\n\t */\n\tprivate _leftDelay: Delay;\n\n\t/**\n\t * the delay node on the right side\n\t */\n\tprivate _rightDelay: Delay;\n\n\t/**\n\t * the predelay on the right side\n\t */\n\tprivate _rightPreDelay: Delay;\n\n\t/**\n\t * the delay time signal\n\t */\n\treadonly delayTime: Signal<\"time\">;\n\n\t/**\n\t * @param delayTime The delayTime between consecutive echos.\n\t * @param feedback The amount of the effected signal which is fed back through the delay.\n\t */\n\tconstructor(delayTime?: Time, feedback?: NormalRange);\n\tconstructor(options?: Partial<PingPongDelayOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n\t\tconst options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n\n\t\tthis._leftDelay = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis._rightDelay = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tmaxDelay: options.maxDelay\n\t\t});\n\t\tthis._rightPreDelay = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tmaxDelay: options.maxDelay\n\t\t});\n\t\tthis.delayTime = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.delayTime,\n\t\t});\n\n\t\t// connect it up\n\t\tthis.connectEffectLeft(this._leftDelay);\n\t\tthis.connectEffectRight(this._rightPreDelay, this._rightDelay);\n\t\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t\t// rearranged the feedback to be after the rightPreDelay\n\t\tthis._feedbackL.disconnect();\n\t\tthis._feedbackL.connect(this._rightDelay);\n\t\treadOnly(this, [\"delayTime\"]);\n\t}\n\n\tstatic getDefaults(): PingPongDelayOptions {\n\t\treturn Object.assign(StereoXFeedbackEffect.getDefaults(), {\n\t\t\tdelayTime: 0.25,\n\t\t\tmaxDelay: 1\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._leftDelay.dispose();\n\t\tthis._rightDelay.dispose();\n\t\tthis._rightPreDelay.dispose();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { Interval, Seconds, Time } from \"../core/type/Units\";\nimport { FeedbackEffect, FeedbackEffectOptions } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Param } from \"../core/context/Param\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n\nexport interface PitchShiftOptions extends FeedbackEffectOptions {\n\tpitch: Interval;\n\twindowSize: Seconds;\n\tdelayTime: Time;\n}\n\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\nexport class PitchShift extends FeedbackEffect<PitchShiftOptions> {\n\n\treadonly name: string = \"PitchShift\";\n\n\t/**\n\t * The pitch signal\n\t */\n\tprivate _frequency: Signal<\"frequency\">;\n\n\t/**\n\t * Uses two DelayNodes to cover up the jump in the sawtooth wave.\n\t */\n\tprivate _delayA: Delay;\n\n\t/**\n\t * The first LFO.\n\t */\n\tprivate _lfoA: LFO;\n\n\t/**\n\t * The second DelayNode\n\t */\n\tprivate _delayB: Delay;\n\n\t/**\n\t * The second LFO.\n\t */\n\tprivate _lfoB: LFO;\n\n\t/**\n\t * Cross fade quickly between the two delay lines to cover up the jump in the sawtooth wave\n\t */\n\tprivate _crossFade: CrossFade;\n\n\t/**\n\t * LFO which alternates between the two delay lines to cover up the disparity in the\n\t * sawtooth wave.\n\t */\n\tprivate _crossFadeLFO: LFO;\n\n\t/**\n\t * The delay node\n\t */\n\tprivate _feedbackDelay: Delay;\n\n\t/**\n\t * The amount of delay on the input signal\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * Hold the current pitch\n\t */\n\tprivate _pitch: Interval;\n\n\t/**\n\t * Hold the current windowSize\n\t */\n\tprivate _windowSize;\n\n\t/**\n\t * @param pitch The interval to transpose the incoming signal by.\n\t */\n\tconstructor(pitch?: Interval);\n\tconstructor(options?: Partial<PitchShiftOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]));\n\t\tconst options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n\n\t\tthis._frequency = new Signal({ context: this.context });\n\t\tthis._delayA = new Delay({\n\t\t\tmaxDelay: 1,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._lfoA = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 0.1,\n\t\t\ttype: \"sawtooth\"\n\t\t}).connect(this._delayA.delayTime);\n\t\tthis._delayB = new Delay({\n\t\t\tmaxDelay: 1,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._lfoB = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 0.1,\n\t\t\ttype: \"sawtooth\",\n\t\t\tphase: 180\n\t\t}).connect(this._delayB.delayTime);\n\t\tthis._crossFade = new CrossFade({ context: this.context });\n\t\tthis._crossFadeLFO = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\ttype: \"triangle\",\n\t\t\tphase: 90\n\t\t}).connect(this._crossFade.fade);\n\t\tthis._feedbackDelay = new Delay({\n\t\t\tdelayTime: options.delayTime,\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis.delayTime = this._feedbackDelay.delayTime;\n\t\treadOnly(this, \"delayTime\");\n\t\tthis._pitch = options.pitch;\n\n\t\tthis._windowSize = options.windowSize;\n\n\t\t// connect the two delay lines up\n\t\tthis._delayA.connect(this._crossFade.a);\n\t\tthis._delayB.connect(this._crossFade.b);\n\t\t// connect the frequency\n\t\tthis._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t\t// route the input\n\t\tthis.effectSend.fan(this._delayA, this._delayB);\n\t\tthis._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t\t// start the LFOs at the same time\n\t\tconst now = this.now();\n\t\tthis._lfoA.start(now);\n\t\tthis._lfoB.start(now);\n\t\tthis._crossFadeLFO.start(now);\n\t\t// set the initial value\n\t\tthis.windowSize = this._windowSize;\n\t}\n\n\tstatic getDefaults(): PitchShiftOptions {\n\t\treturn Object.assign(FeedbackEffect.getDefaults(), {\n\t\t\tpitch: 0,\n\t\t\twindowSize: 0.1,\n\t\t\tdelayTime: 0,\n\t\t\tfeedback: 0\n\t\t});\n\t}\n\n\t/**\n\t * Repitch the incoming signal by some interval (measured in semi-tones).\n\t * @example\n\t * const pitchShift = new Tone.PitchShift().toDestination();\n\t * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n\t * pitchShift.pitch = -12; // down one octave\n\t * pitchShift.pitch = 7; // up a fifth\n\t */\n\tget pitch() {\n\t\treturn this._pitch;\n\t}\n\tset pitch(interval) {\n\t\tthis._pitch = interval;\n\t\tlet factor = 0;\n\t\tif (interval < 0) {\n\t\t\tthis._lfoA.min = 0;\n\t\t\tthis._lfoA.max = this._windowSize;\n\t\t\tthis._lfoB.min = 0;\n\t\t\tthis._lfoB.max = this._windowSize;\n\t\t\tfactor = intervalToFrequencyRatio(interval - 1) + 1;\n\t\t} else {\n\t\t\tthis._lfoA.min = this._windowSize;\n\t\t\tthis._lfoA.max = 0;\n\t\t\tthis._lfoB.min = this._windowSize;\n\t\t\tthis._lfoB.max = 0;\n\t\t\tfactor = intervalToFrequencyRatio(interval) - 1;\n\t\t}\n\t\tthis._frequency.value = factor * (1.2 / this._windowSize);\n\t}\n\n\t/**\n\t * The window size corresponds roughly to the sample length in a looping sampler.\n\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t * signal, but larger values will result in smoother pitch shifting for larger intervals.\n\t * A nominal range of 0.03 to 0.1 is recommended.\n\t */\n\tget windowSize(): Seconds {\n\t\treturn this._windowSize;\n\t}\n\tset windowSize(size) {\n\t\tthis._windowSize = this.toSeconds(size);\n\t\tthis.pitch = this._pitch;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._frequency.dispose();\n\t\tthis._delayA.dispose();\n\t\tthis._delayB.dispose();\n\t\tthis._lfoA.dispose();\n\t\tthis._lfoB.dispose();\n\t\tthis._crossFade.dispose();\n\t\tthis._crossFadeLFO.dispose();\n\t\tthis._feedbackDelay.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { Frequency, Hertz, Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface PhaserOptions extends StereoEffectOptions {\n\tfrequency: Frequency;\n\toctaves: Positive;\n\tstages: Positive;\n\tQ: Positive;\n\tbaseFrequency: Frequency;\n}\n\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\nexport class Phaser extends StereoEffect<PhaserOptions> {\n\n\treadonly name: string = \"Phaser\";\n\n\t/**\n\t * the lfo which controls the frequency on the left side\n\t */\n\tprivate _lfoL: LFO;\n\n\t/**\n\t * the lfo which controls the frequency on the right side\n\t */\n\tprivate _lfoR: LFO;\n\n\t/**\n\t * the base modulation frequency\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * the octaves of the phasing\n\t */\n\tprivate _octaves: Positive;\n\n\t/**\n\t * The quality factor of the filters\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * the array of filters for the left side\n\t */\n\tprivate _filtersL: BiquadFilterNode[];\n\n\t/**\n\t * the array of filters for the left side\n\t */\n\tprivate _filtersR: BiquadFilterNode[];\n\n\t/**\n\t * the frequency of the effect\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param frequency The speed of the phasing.\n\t * @param octaves The octaves of the effect.\n\t * @param baseFrequency The base frequency of the filters.\n\t */\n\tconstructor(frequency?: Frequency, octaves?: Positive, baseFrequency?: Frequency);\n\tconstructor(options?: Partial<PhaserOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]));\n\t\tconst options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tphase: 180,\n\t\t});\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\t\tthis._octaves = options.octaves;\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.Q,\n\t\t\tunits: \"positive\",\n\t\t});\n\t\tthis._filtersL = this._makeFilters(options.stages, this._lfoL);\n\t\tthis._filtersR = this._makeFilters(options.stages, this._lfoR);\n\n\t\tthis.frequency = this._lfoL.frequency;\n\t\tthis.frequency.value = options.frequency;\n\n\t\t// connect them up\n\t\tthis.connectEffectLeft(...this._filtersL);\n\t\tthis.connectEffectRight(...this._filtersR);\n\t\t// control the frequency with one LFO\n\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t// set the options\n\t\tthis.baseFrequency = options.baseFrequency;\n\t\tthis.octaves = options.octaves;\n\t\t// start the lfo\n\t\tthis._lfoL.start();\n\t\tthis._lfoR.start();\n\t\treadOnly(this, [\"frequency\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): PhaserOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfrequency: 0.5,\n\t\t\toctaves: 3,\n\t\t\tstages: 10,\n\t\t\tQ: 10,\n\t\t\tbaseFrequency: 350,\n\t\t});\n\t}\n\n\tprivate _makeFilters(stages: number, connectToFreq: LFO): BiquadFilterNode[] {\n\t\tconst filters: BiquadFilterNode[] = [];\n\t\t// make all the filters\n\t\tfor (let i = 0; i < stages; i++) {\n\t\t\tconst filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = \"allpass\";\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tconnectToFreq.connect(filter.frequency);\n\t\t\tfilters.push(filter);\n\t\t}\n\t\treturn filters;\n\t}\n\n\t/**\n\t * The number of octaves the phase goes above the baseFrequency\n\t */\n\tget octaves() {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves) {\n\t\tthis._octaves = octaves;\n\t\tconst max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n\n\t/**\n\t * The the base frequency of the filters.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(freq) {\n\t\tthis._baseFrequency = this.toFrequency(freq);\n\t\tthis._lfoL.min = this._baseFrequency;\n\t\tthis._lfoR.min = this._baseFrequency;\n\t\tthis.octaves = this._octaves;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.Q.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._filtersL.forEach(f => f.disconnect());\n\t\tthis._filtersR.forEach(f => f.disconnect());\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n\ninterface ReverbOptions extends EffectOptions {\n\tdecay: Seconds;\n\tpreDelay: Seconds;\n}\n\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound. \n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n * \n * @category Effect\n */\nexport class Reverb extends Effect<ReverbOptions> {\n\n\treadonly name: string = \"Reverb\";\n\n\t/**\n\t * Convolver node\n\t */\n\tprivate _convolver: ConvolverNode = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb.\n\t */\n\tprivate _decay: Seconds;\n\t\n\t/**\n\t * The amount of time before the reverb is fully ramped in.\n\t */\n\tprivate _preDelay: Seconds;\n\n\t/**\n\t * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n\t * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n\t * before the IR is generated with the latest values. \n\t */\n\tready: Promise<void> = Promise.resolve();\n\n\t/**\n\t * @param decay The amount of time it will reverberate for.\n\t */\n\tconstructor(decay?: Seconds);\n\tconstructor(options?: Partial<ReverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n\t\tconst options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n\n\t\tthis._decay = options.decay;\n\t\tthis._preDelay = options.preDelay;\n\t\tthis.generate();\n\n\t\tthis.connectEffect(this._convolver);\n\t}\n\n\tstatic getDefaults(): ReverbOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tdecay: 1.5,\n\t\t\tpreDelay: 0.01,\n\t\t});\n\t}\n\n\t/**\n\t * The duration of the reverb.\n\t */\n\tget decay(): Time {\n\t\treturn this._decay;\n\t}\n\tset decay(time) {\n\t\ttime = this.toSeconds(time);\n\t\tassertRange(time, 0.001);\n\t\tthis._decay = time;\n\t\tthis.generate();\n\t}\n\n\t/**\n\t * The amount of time before the reverb is fully ramped in.\n\t */\n\tget preDelay(): Time {\n\t\treturn this._preDelay;\n\t}\n\tset preDelay(time) {\n\t\ttime = this.toSeconds(time);\n\t\tassertRange(time, 0);\n\t\tthis._preDelay = time;\n\t\tthis.generate();\n\t}\n\n\t/**\n\t * Generate the Impulse Response. Returns a promise while the IR is being generated.\n\t * @return Promise which returns this object.\n\t */\n\tasync generate(): Promise<this> {\n\t\tconst previousReady = this.ready;\n\n\t\t// create a noise burst which decays over the duration in each channel\n\t\tconst context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n\t\tconst noiseL = new Noise({ context });\n\t\tconst noiseR = new Noise({ context });\n\t\tconst merge = new Merge({ context });\n\t\tnoiseL.connect(merge, 0, 0);\n\t\tnoiseR.connect(merge, 0, 1);\n\t\tconst gainNode = new Gain({ context }).toDestination();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t// predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this._preDelay);\n\t\t// decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n\t\t\n\t\t// render the buffer\n\t\tconst renderPromise = context.render();\n\t\tthis.ready = renderPromise.then(noOp);\n\t\t\n\t\t// wait for the previous `ready` to resolve\n\t\tawait previousReady;\n\t\t// set the buffer\n\t\tthis._convolver.buffer = (await renderPromise).get() as AudioBuffer;\n\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._convolver.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport type MidSideSplitOptions = ToneAudioNodeOptions;\n\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideSplit extends ToneAudioNode<MidSideSplitOptions> {\n\t\n\treadonly name: string = \"MidSideSplit\";\n\n\treadonly input: Split;\n\n\t/**\n\t * There is no output node, use either [[mid]] or [[side]] outputs.\n\t */\n\treadonly output: undefined;\n\t/**\n\t * Split the incoming signal into left and right channels\n\t */\n\tprivate _split: Split;\n\n\t/**\n\t * Sums the left and right channels\n\t */\n\tprivate _midAdd: Add;\n\n\t/**\n\t * Subtract left and right channels. \n\t */\n\tprivate _sideSubtract: Subtract;\n\n\t/**\n\t * The \"mid\" output. `(Left+Right)/sqrt(2)`\n\t */\n\treadonly mid: ToneAudioNode;\n\n\t/**\n\t * The \"side\" output. `(Left-Right)/sqrt(2)`\n\t */\n\treadonly side: ToneAudioNode;\n\t\n\tconstructor(options?: Partial<MidSideSplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n\n\t\tthis._split = this.input = new Split({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._midAdd = new Add({ context: this.context });\n\t\tthis.mid = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: Math.SQRT1_2,\n\t\t});\n\t\tthis._sideSubtract = new Subtract({ context: this.context });\n\t\tthis.side = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: Math.SQRT1_2,\n\t\t});\n\n\t\tthis._split.connect(this._midAdd, 0);\n\t\tthis._split.connect(this._midAdd.addend, 1);\n\t\tthis._split.connect(this._sideSubtract, 0);\n\t\tthis._split.connect(this._sideSubtract.subtrahend, 1);\n\t\tthis._midAdd.connect(this.mid);\n\t\tthis._sideSubtract.connect(this.side);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._midAdd.dispose();\n\t\tthis._sideSubtract.dispose();\n\t\tthis._split.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport type MidSideMergeOptions = ToneAudioNodeOptions;\n\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideMerge extends ToneAudioNode<MidSideMergeOptions> {\n\t\n\treadonly name: string = \"MidSideMerge\";\n\n\t/**\n\t * There is no input, connect sources to either [[mid]] or [[side]] inputs.\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The merged signal\n\t */\n\treadonly output: Merge;\n\n\t/**\n\t * Merge the incoming signal into left and right channels\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The \"mid\" input.\n\t */\n\treadonly mid: ToneAudioNode;\n\n\t/**\n\t * The \"side\" input.\n\t */\n\treadonly side: ToneAudioNode;\n\n\t/**\n\t * Recombine the mid/side into Left\n\t */\n\tprivate _left: Add;\n\n\t/**\n\t * Recombine the mid/side into Right\n\t */\n\tprivate _right: Subtract;\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t */\n\tprivate _leftMult: Multiply;\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t */\n\tprivate _rightMult: Multiply;\n\t\n\tconstructor(options?: Partial<MidSideMergeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n\t\tthis.mid = new Gain({ context: this.context });\n\t\tthis.side = new Gain({ context: this.context });\n\t\tthis._left = new Add({ context: this.context });\n\t\tthis._leftMult = new Multiply({\n\t\t\tcontext: this.context, \n\t\t\tvalue: Math.SQRT1_2\n\t\t});\n\t\tthis._right = new Subtract({ context: this.context });\n\t\tthis._rightMult = new Multiply({\n\t\t\tcontext: this.context, \n\t\t\tvalue: Math.SQRT1_2\n\t\t});\n\t\tthis._merge = this.output = new Merge({ context: this.context });\n\n\t\tthis.mid.fan(this._left);\n\t\tthis.side.connect(this._left.addend);\n\t\tthis.mid.connect(this._right);\n\t\tthis.side.connect(this._right.subtrahend);\n\t\tthis._left.connect(this._leftMult);\n\t\tthis._right.connect(this._rightMult);\n\t\tthis._leftMult.connect(this._merge, 0, 0);\n\t\tthis._rightMult.connect(this._merge, 0, 1);\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._leftMult.dispose();\n\t\tthis._rightMult.dispose();\n\t\tthis._left.dispose();\n\t\tthis._right.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\nimport { OutputNode, ToneAudioNode } from \"../core/context/ToneAudioNode\";\n\nexport type MidSideEffectOptions = EffectOptions;\n\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n * @category Effect\n */\nexport abstract class MidSideEffect<Options extends MidSideEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"MidSideEffect\";\n\n\t/**\n\t * The mid/side split\n\t */\n\tprivate _midSideSplit: MidSideSplit;\n\t\n\t/**\n\t * The mid/side merge\n\t */\n\tprivate _midSideMerge: MidSideMerge;\n\t\n\t/**\n\t * The mid send. Connect to mid processing\n\t */\n\tprotected _midSend: ToneAudioNode;\n\t\n\t/**\n\t * The side send. Connect to side processing\n\t */\n\tprotected _sideSend: ToneAudioNode;\n\t\n\t/**\n\t * The mid return connection\n\t */\n\tprotected _midReturn: ToneAudioNode;\n\t\n\t/**\n\t * The side return connection\n\t */\n\tprotected _sideReturn: ToneAudioNode;\n\n\tconstructor(options: MidSideEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._midSideMerge = new MidSideMerge({ context: this.context });\n\t\tthis._midSideSplit = new MidSideSplit({ context: this.context });\n\t\tthis._midSend = this._midSideSplit.mid;\n\t\tthis._sideSend = this._midSideSplit.side;\n\t\tthis._midReturn = this._midSideMerge.mid;\n\t\tthis._sideReturn = this._midSideMerge.side;\n\n\t\t// the connections\n\t\tthis.effectSend.connect(this._midSideSplit);\n\t\tthis._midSideMerge.connect(this.effectReturn);\n\t}\n\n\t/**\n\t * Connect the mid chain of the effect\n\t */\n\tprotected connectEffectMid(...nodes: OutputNode[]): void {\n\t\tthis._midSend.chain(...nodes, this._midReturn);\n\t}\n\t\n\t/**\n\t * Connect the side chain of the effect\n\t */\n\tprotected connectEffectSide(...nodes: OutputNode[]): void {\n\t\tthis._sideSend.chain(...nodes, this._sideReturn);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._midSideSplit.dispose();\n\t\tthis._midSideMerge.dispose();\n\t\tthis._midSend.dispose();\n\t\tthis._sideSend.dispose();\n\t\tthis._midReturn.dispose();\n\t\tthis._sideReturn.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { MidSideEffect, MidSideEffectOptions } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n\nexport interface StereoWidenerOptions extends MidSideEffectOptions {\n\twidth: NormalRange;\n}\n\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\nexport class StereoWidener extends MidSideEffect<StereoWidenerOptions> {\n\n\treadonly name: string = \"StereoWidener\";\n\n\t/**\n\t * The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t */\n\treadonly width: Signal<\"normalRange\">;\n\t\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t */\n\tprivate _twoTimesWidthMid: Multiply;\n\t\n\t/**\n\t * Two times the width for the side channel\n\t */\n\tprivate _twoTimesWidthSide: Multiply;\n\t\n\t/**\n\t * Mid multiplier\n\t */\n\tprivate _midMult: Multiply;\n\t\n\t/**\n\t * 1 - width\n\t */\n\tprivate _oneMinusWidth: Subtract;\n\t\n\t/**\n\t * Side multiplier\n\t */\n\tprivate _sideMult: Multiply;\n\n\t/**\n\t * @param width The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t */\n\tconstructor(width?: NormalRange);\n\tconstructor(options?: Partial<StereoWidenerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n\t\tconst options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.width,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\treadOnly(this, [\"width\"]);\n\t\tthis._twoTimesWidthMid = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 2,\n\t\t});\n\t\tthis._twoTimesWidthSide = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 2,\n\t\t});\n\t\tthis._midMult = new Multiply({ context: this.context });\n\t\tthis._twoTimesWidthMid.connect(this._midMult.factor);\n\t\tthis.connectEffectMid(this._midMult);\n\n\t\tthis._oneMinusWidth = new Subtract({ context: this.context });\n\t\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\t\tconnect(this.context.getConstant(1), this._oneMinusWidth);\n\t\tthis.width.connect(this._oneMinusWidth.subtrahend);\n\n\t\tthis._sideMult = new Multiply({ context: this.context });\n\t\tthis.width.connect(this._twoTimesWidthSide);\n\t\tthis._twoTimesWidthSide.connect(this._sideMult.factor);\n\t\tthis.connectEffectSide(this._sideMult);\n\t}\n\n\tstatic getDefaults(): StereoWidenerOptions {\n\t\treturn Object.assign(MidSideEffect.getDefaults(), {\n\t\t\twidth: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.width.dispose();\n\t\tthis._midMult.dispose();\n\t\tthis._sideMult.dispose();\n\t\tthis._twoTimesWidthMid.dispose();\n\t\tthis._twoTimesWidthSide.dispose();\n\t\tthis._oneMinusWidth.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { Degrees, Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface TremoloOptions extends StereoEffectOptions {\n\tfrequency: Frequency;\n\ttype: ToneOscillatorType;\n\tdepth: NormalRange;\n\tspread: Degrees;\n}\n\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * // create a tremolo and start it's LFO\n * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Tone.Oscillator().connect(tremolo).start();\n * \n * @category Effect\n */\nexport class Tremolo extends StereoEffect<TremoloOptions> {\n\n\treadonly name: string = \"Tremolo\";\n\n\t/**\n\t * The tremolo LFO in the left channel\n\t */\n\tprivate _lfoL: LFO;\n\n\t/**\n\t * The tremolo LFO in the left channel\n\t */\n\tprivate _lfoR: LFO;\n\n\t/**\n\t * Where the gain is multiplied\n\t */\n\tprivate _amplitudeL: Gain;\n\n\t/**\n\t * Where the gain is multiplied\n\t */\n\tprivate _amplitudeR: Gain;\n\n\t/**\n\t * The frequency of the tremolo.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The depth of the effect. A depth of 0, has no effect\n\t * on the amplitude, and a depth of 1 makes the amplitude\n\t * modulate fully between 0 and 1.\n\t */\n\treadonly depth: Signal<\"normalRange\">;\n\n\t/**\n\t * @param frequency The rate of the effect.\n\t * @param depth The depth of the effect.\n\t */\n\tconstructor(frequency?: Frequency, depth?: NormalRange);\n\tconstructor(options?: Partial<TremoloOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 1,\n\t\t\tmax: 0,\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 1,\n\t\t\tmax: 0,\n\t\t});\n\t\tthis._amplitudeL = new Gain({ context: this.context });\n\t\tthis._amplitudeR = new Gain({ context: this.context });\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.frequency,\n\t\t\tunits: \"frequency\",\n\t\t});\n\t\tthis.depth = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.depth,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t\tthis.connectEffectLeft(this._amplitudeL);\n\t\tthis.connectEffectRight(this._amplitudeR);\n\t\tthis._lfoL.connect(this._amplitudeL.gain);\n\t\tthis._lfoR.connect(this._amplitudeR.gain);\n\t\tthis.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t\tthis.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t\tthis.spread = options.spread;\n\t}\n\n\tstatic getDefaults(): TremoloOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfrequency: 10,\n\t\t\ttype: \"sine\" as const,\n\t\t\tdepth: 0.5,\n\t\t\tspread: 180,\n\t\t});\n\t}\n\n\t/**\n\t * Start the tremolo.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfoL.start(time);\n\t\tthis._lfoR.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the tremolo.\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfoL.stop(time);\n\t\tthis._lfoR.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the effect to the transport.\n\t */\n\tsync(): this {\n\t\tthis._lfoL.sync();\n\t\tthis._lfoR.sync();\n\t\tthis.context.transport.syncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport\n\t */\n\tunsync(): this {\n\t\tthis._lfoL.unsync();\n\t\tthis._lfoR.unsync();\n\t\tthis.context.transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The oscillator type.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfoL.type;\n\t}\n\tset type(type) {\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n\n\t/**\n\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t */\n\tget spread(): Degrees {\n\t\treturn this._lfoR.phase - this._lfoL.phase; // 180\n\t}\n\tset spread(spread) {\n\t\tthis._lfoL.phase = 90 - (spread / 2);\n\t\tthis._lfoR.phase = (spread / 2) + 90;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._amplitudeL.dispose();\n\t\tthis._amplitudeR.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { Frequency, NormalRange, Seconds } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { Param } from \"../core/context/Param\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface VibratoOptions extends EffectOptions {\n\tmaxDelay: Seconds;\n\tfrequency: Frequency;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n}\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall. \n * @category Effect\n */\nexport class Vibrato extends Effect<VibratoOptions> {\n\n\treadonly name: string = \"Vibrato\";\n\t/**\n\t * The delay node used for the vibrato effect\n\t */\n\tprivate _delayNode: Delay;\n\t\n\t/**\n\t * The LFO used to control the vibrato\n\t */\n\tprivate _lfo: LFO;\n\t\n\t/**\n\t * The frequency of the vibrato\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\t\n\t/**\n\t * The depth of the vibrato. \n\t */\n\treadonly depth: Param<\"normalRange\">;\n\n\t/**\n\t * @param frequency The frequency of the vibrato.\n\t * @param depth The amount the pitch is modulated.\n\t */\n\tconstructor(frequency?: Frequency, depth?: NormalRange);\n\tconstructor(options?: Partial<VibratoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis._lfo = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 0,\n\t\t\tmax: options.maxDelay, \n\t\t\tfrequency: options.frequency,\n\t\t\tphase: -90 // offse the phase so the resting position is in the center\n\t\t}).start().connect(this._delayNode.delayTime);\n\t\tthis.frequency = this._lfo.frequency;\n\t\tthis.depth = this._lfo.amplitude;\n\n\t\tthis.depth.value = options.depth;\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n\t}\n\n\tstatic getDefaults(): VibratoOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tmaxDelay: 0.005,\n\t\t\tfrequency: 5,\n\t\t\tdepth: 0.1,\n\t\t\ttype: \"sine\" as const\n\t\t});\n\t}\n\n\t/**\n\t * Type of oscillator attached to the Vibrato.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfo.type;\n\t}\n\tset type(type) {\n\t\tthis._lfo.type = type;\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis._lfo.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, PowerOfTwo } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n\nexport type AnalyserType = \"fft\" | \"waveform\";\n\nexport interface AnalyserOptions extends ToneAudioNodeOptions {\n\tsize: PowerOfTwo;\n\ttype: AnalyserType;\n\tsmoothing: NormalRange;\n\tchannels: number;\n}\n\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\nexport class Analyser extends ToneAudioNode<AnalyserOptions> {\n\n\treadonly name: string = \"Analyser\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The analyser node.\n\t */\n\tprivate _analysers: AnalyserNode[] = [];\n\n\t/**\n\t * Input and output are a gain node\n\t */\n\tprivate _gain: Gain;\n\n\t/**\n\t * The channel splitter node\n\t */\n\tprivate _split: Split;\n\n\t/**\n\t * The analysis type\n\t */\n\tprivate _type!: AnalyserType;\n\n\t/**\n\t * The buffer that the FFT data is written to\n\t */\n\tprivate _buffers: Float32Array[] = [];\n\n\t/**\n\t * @param type The return type of the analysis, either \"fft\", or \"waveform\".\n\t * @param size The size of the FFT. This must be a power of two in the range 16 to 16384.\n\t */\n\tconstructor(type?: AnalyserType, size?: number);\n\tconstructor(options?: Partial<AnalyserOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]));\n\t\tconst options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n\n\t\tthis.input = this.output = this._gain = new Gain({ context: this.context });\n\t\tthis._split = new Split({\n\t\t\tcontext: this.context,\n\t\t\tchannels: options.channels,\n\t\t});\n\t\tthis.input.connect(this._split);\n\t\t\n\t\tassertRange(options.channels, 1);\n\t\t\n\t\t// create the analysers\n\t\tfor (let channel = 0; channel < options.channels; channel++) {\n\t\t\tthis._analysers[channel] = this.context.createAnalyser();\n\t\t\tthis._split.connect(this._analysers[channel], channel, 0);\n\t\t}\n\n\t\t// set the values initially\n\t\tthis.size = options.size;\n\t\tthis.type = options.type;\n\t\tthis.smoothing = options.smoothing;\n\t}\n\n\tstatic getDefaults(): AnalyserOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsize: 1024,\n\t\t\tsmoothing: 0.8,\n\t\t\ttype: \"fft\" as AnalyserType,\n\t\t\tchannels: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Run the analysis given the current settings. If [[channels]] = 1,\n\t * it will return a Float32Array. If [[channels]] > 1, it will\n\t * return an array of Float32Arrays where each index in the array\n\t * represents the analysis done on a channel.\n\t */\n\tgetValue(): Float32Array | Float32Array[] {\n\t\tthis._analysers.forEach((analyser, index) => {\n\t\t\tconst buffer = this._buffers[index];\n\t\t\tif (this._type === \"fft\") {\n\t\t\t\tanalyser.getFloatFrequencyData(buffer);\n\t\t\t} else if (this._type === \"waveform\") {\n\t\t\t\tanalyser.getFloatTimeDomainData(buffer);\n\t\t\t}\n\t\t});\n\t\tif (this.channels === 1) {\n\t\t\treturn this._buffers[0];\n\t\t} else {\n\t\t\treturn this._buffers;\n\t\t}\n\t}\n\n\t/**\n\t * The size of analysis. This must be a power of two in the range 16 to 16384.\n\t */\n\tget size(): PowerOfTwo {\n\t\treturn this._analysers[0].frequencyBinCount;\n\t}\n\tset size(size: PowerOfTwo) {\n\t\tthis._analysers.forEach((analyser, index) => {\n\t\t\tanalyser.fftSize = size * 2;\n\t\t\tthis._buffers[index] = new Float32Array(size);\n\t\t});\n\t}\n\n\t/**\n\t * The number of channels the analyser does the analysis on. Channel\n\t * separation is done using [[Split]]\n\t */\n\tget channels(): number {\n\t\treturn this._analysers.length;\n\t}\n\n\t/**\n\t * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n\t */\n\tget type(): AnalyserType {\n\t\treturn this._type;\n\t}\n\tset type(type: AnalyserType) {\n\t\tassert(type === \"waveform\" || type === \"fft\", `Analyser: invalid type: ${type}`);\n\t\tthis._type = type;\n\t}\n\n\t/**\n\t * 0 represents no time averaging with the last analysis frame.\n\t */\n\tget smoothing(): NormalRange {\n\t\treturn this._analysers[0].smoothingTimeConstant;\n\t}\n\tset smoothing(val: NormalRange) {\n\t\tthis._analysers.forEach(a => a.smoothingTimeConstant = val);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analysers.forEach(a => a.disconnect());\n\t\tthis._split.dispose();\n\t\tthis._gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n\nexport type MeterBaseOptions = ToneAudioNodeOptions;\n\n/**\n * The base class for Metering classes.\n */\nexport class MeterBase<Options extends MeterBaseOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"MeterBase\";\n\n\t/**\n\t * The signal to be analysed\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The output is just a pass through of the input\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The analyser node for the incoming signal\n\t */\n\tprotected _analyser: Analyser;\n\n\tconstructor(options?: Partial<MeterBaseOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MeterBase.getDefaults(), arguments));\n\n\t\tthis.input = this.output = this._analyser = new Analyser({\n\t\t\tcontext: this.context,\n\t\t\tsize: 256,\n\t\t\ttype: \"waveform\",\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analyser.dispose();\n\t\treturn this;\n\t}\n}\n","import { gainToDb } from \"../../core/type/Conversions\";\nimport { NormalRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n\nexport interface MeterOptions extends MeterBaseOptions {\n\tsmoothing: NormalRange;\n\tnormalRange: boolean;\n\tchannelCount: number;\n}\n\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * setInterval(() => console.log(meter.getValue()), 100);\n * @category Component\n */\nexport class Meter extends MeterBase<MeterOptions> {\n\n\treadonly name: string = \"Meter\";\n\n\t/**\n\t * If the output should be in decibels or normal range between 0-1. If `normalRange` is false,\n\t * the output range will be the measured decibel value, otherwise the decibel value will be converted to\n\t * the range of 0-1\n\t */\n\tnormalRange: boolean;\n\n\t/**\n\t * A value from between 0 and 1 where 0 represents no time averaging with the last analysis frame.\n\t */\n\tsmoothing: number;\n\n\t/**\n\t * The previous frame's value for each channel.\n\t */\n\tprivate _rms: number[];\n\n\t/**\n\t * @param smoothing The amount of smoothing applied between frames.\n\t */\n\tconstructor(smoothing?: NormalRange);\n\tconstructor(options?: Partial<MeterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]));\n\t\tconst options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n\n\t\tthis.input = this.output = this._analyser = new Analyser({\n\t\t\tcontext: this.context,\n\t\t\tsize: 256,\n\t\t\ttype: \"waveform\",\n\t\t\tchannels: options.channelCount,\n\t\t});\n\n\t\tthis.smoothing = options.smoothing,\n\t\tthis.normalRange = options.normalRange;\n\t\tthis._rms = new Array(options.channelCount);\n\t\tthis._rms.fill(0);\n\t}\n\n\tstatic getDefaults(): MeterOptions {\n\t\treturn Object.assign(MeterBase.getDefaults(), {\n\t\t\tsmoothing: 0.8,\n\t\t\tnormalRange: false,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n\t * @deprecated\n\t */\n\tgetLevel(): number | number[] {\n\t\twarn(\"'getLevel' has been changed to 'getValue'\");\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Get the current value of the incoming signal. \n\t * Output is in decibels when [[normalRange]] is `false`.\n\t * If [[channels]] = 1, then the output is a single number\n\t * representing the value of the input signal. When [[channels]] > 1,\n\t * then each channel is returned as a value in a number array. \n\t */\n\tgetValue(): number | number[] {\n\t\tconst aValues = this._analyser.getValue();\n\t\tconst channelValues = this.channels === 1 ? [aValues as Float32Array] : aValues as Float32Array[];\n\t\tconst vals = channelValues.map((values, index) => {\n\t\t\tconst totalSquared = values.reduce((total, current) => total + current * current, 0);\n\t\t\tconst rms = Math.sqrt(totalSquared / values.length);\n\t\t\t// the rms can only fall at the rate of the smoothing\n\t\t\t// but can jump up instantly\n\t\t\tthis._rms[index] = Math.max(rms, this._rms[index]  * this.smoothing);\n\t\t\treturn this.normalRange ? this._rms[index] : gainToDb(this._rms[index]);\n\t\t});\n\t\tif (this.channels === 1) {\n\t\t\treturn vals[0];\n\t\t} else {\n\t\t\treturn vals;\n\t\t}\n\t}\n\n\t/**\n\t * The number of channels of analysis.\n\t */\n\tget channels(): number {\n\t\treturn this._analyser.channels;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analyser.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { Hertz, NormalRange, PowerOfTwo } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\nimport { assert } from \"../../core/util/Debug\";\n\nexport interface FFTOptions extends MeterBaseOptions {\n\tsize: PowerOfTwo;\n\tsmoothing: NormalRange;\n\tnormalRange: boolean;\n}\n\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\nexport class FFT extends MeterBase<FFTOptions> {\n\n\treadonly name: string = \"FFT\";\n\n\t/**\n\t * If the output should be in decibels or normal range between 0-1. If `normalRange` is false,\n\t * the output range will be the measured decibel value, otherwise the decibel value will be converted to\n\t * the range of 0-1\n\t */\n\tnormalRange: boolean;\n\n\t/**\n\t * @param size The size of the FFT. Value must be a power of two in the range 16 to 16384.\n\t */\n\tconstructor(size?: PowerOfTwo);\n\tconstructor(options?: Partial<FFTOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]));\n\t\tconst options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n\n\t\tthis.normalRange = options.normalRange;\n\t\tthis._analyser.type = \"fft\";\n\t\tthis.size = options.size;\n\t}\n\n\tstatic getDefaults(): FFTOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tnormalRange: false,\n\t\t\tsize: 1024,\n\t\t\tsmoothing: 0.8,\n\t\t});\n\t}\n\n\t/**\n\t * Gets the current frequency data from the connected audio source.\n\t * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n\t */\n\tgetValue(): Float32Array {\n\t\tconst values = this._analyser.getValue() as Float32Array;\n\t\treturn values.map(v => this.normalRange ? dbToGain(v) : v);\n\t}\n\n\t/**\n\t * The size of analysis. This must be a power of two in the range 16 to 16384.\n\t * Determines the size of the array returned by [[getValue]] (i.e. the number of\n\t * frequency bins). Large FFT sizes may be costly to compute.\n\t */\n\tget size(): PowerOfTwo {\n\t\treturn this._analyser.size;\n\t}\n\tset size(size) {\n\t\tthis._analyser.size = size;\n\t}\n\n\t/**\n\t * 0 represents no time averaging with the last analysis frame.\n\t */\n\tget smoothing(): NormalRange {\n\t\treturn this._analyser.smoothing;\n\t}\n\tset smoothing(val) {\n\t\tthis._analyser.smoothing = val;\n\t}\n\n\t/**\n\t * Returns the frequency value in hertz of each of the indices of the FFT's [[getValue]] response.\n\t * @example\n\t * const fft = new Tone.FFT(32);\n\t * console.log([0, 1, 2, 3, 4].map(index => fft.getFrequencyOfIndex(index)));\n\t */\n\tgetFrequencyOfIndex(index: number): Hertz {\n\t\tassert(0 <= index && index < this.size, `index must be greater than or equal to 0 and less than ${this.size}`);\n\t\treturn index * this.context.sampleRate / (this.size * 2);\n\t}\n}\n","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\n\nexport type DCMeterOptions = MeterBaseOptions;\n\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nexport class DCMeter extends MeterBase<DCMeterOptions> {\n\n\treadonly name: string = \"DCMeter\";\n\n\tconstructor(options?: Partial<DCMeterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(DCMeter.getDefaults(), arguments));\n\n\t\tthis._analyser.type = \"waveform\";\n\t\tthis._analyser.size = 256;\n\t}\n\n\t/**\n\t * Get the signal value of the incoming signal\n\t */\n\tgetValue(): number {\n\t\tconst value = this._analyser.getValue() as Float32Array;\n\t\treturn value[0];\n\t}\n}\n","import { PowerOfTwo } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\n\nexport interface WaveformOptions extends MeterBaseOptions {\n\t/**\n\t * The size of the Waveform. Value must be a power of two in the range 16 to 16384.\n\t */\n\tsize: PowerOfTwo;\n}\n\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\nexport class Waveform extends MeterBase<WaveformOptions> {\n\n\treadonly name: string = \"Waveform\";\n\n\t/**\n\t * @param size The size of the Waveform. Value must be a power of two in the range 16 to 16384.\n\t */\n\tconstructor(size?: PowerOfTwo);\n\tconstructor(options?: Partial<WaveformOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]));\n\t\tconst options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n\n\t\tthis._analyser.type = \"waveform\";\n\t\tthis.size = options.size;\n\t}\n\n\tstatic getDefaults(): WaveformOptions {\n\t\treturn Object.assign(MeterBase.getDefaults(), {\n\t\t\tsize: 1024,\n\t\t});\n\t}\n\n\t/**\n\t * Return the waveform for the current time as a Float32Array where each value in the array\n\t * represents a sample in the waveform.\n\t */\n\tgetValue(): Float32Array {\n\t\treturn this._analyser.getValue() as Float32Array;\n\t}\n\n\t/**\n\t * The size of analysis. This must be a power of two in the range 16 to 16384.\n\t * Determines the size of the array returned by [[getValue]].\n\t */\n\tget size(): PowerOfTwo {\n\t\treturn this._analyser.size;\n\t}\n\tset size(size) {\n\t\tthis._analyser.size = size;\n\t}\n}\n","import { BaseContext } from \"../../core/context/BaseContext\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport interface SoloOptions extends ToneAudioNodeOptions {\n\tsolo: boolean;\n}\n\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode<SoloOptions> {\n\n\treadonly name: string = \"Solo\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param solo If the connection should be initially solo'ed.\n\t */\n\tconstructor(solo?: boolean);\n\tconstructor(options?: Partial<SoloOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n\t\tconst options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tif (!Solo._allSolos.has(this.context)) {\n\t\t\tSolo._allSolos.set(this.context, new Set());\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).add(this);\n\n\t\t// set initially\n\t\tthis.solo = options.solo;\n\t}\n\n\tstatic getDefaults(): SoloOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsolo: false,\n\t\t});\n\t}\n\n\t/**\n\t * Hold all of the solo'ed tracks belonging to a specific context\n\t */\n\tprivate static _allSolos: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Hold the currently solo'ed instance(s)\n\t */\n\tprivate static _soloed: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Isolates this instance and mutes all other instances of Solo.\n\t * Only one instance can be soloed at a time. A soloed\n\t * instance will report `solo=false` when another instance is soloed.\n\t */\n\tget solo(): boolean {\n\t\treturn this._isSoloed();\n\t}\n\tset solo(solo) {\n\t\tif (solo) {\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).forEach(instance => instance._updateSolo());\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed\n\t */\n\tget muted(): boolean {\n\t\treturn this.input.gain.value === 0;\n\t}\n\n\t/**\n\t * Add this to the soloed array\n\t */\n\tprivate _addSolo(): void {\n\t\tif (!Solo._soloed.has(this.context)) {\n\t\t\tSolo._soloed.set(this.context, new Set());\n\t\t}\n\t\t(Solo._soloed.get(this.context) as Set<Solo>).add(this);\n\t}\n\n\t/**\n\t * Remove this from the soloed array\n\t */\n\tprivate _removeSolo(): void {\n\t\tif (Solo._soloed.has(this.context)) {\n\t\t\t(Solo._soloed.get(this.context) as Set<Solo>).delete(this);\n\t\t}\n\t}\n\n\t/**\n\t * Is this on the soloed array\n\t */\n\tprivate _isSoloed(): boolean {\n\t\treturn Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).has(this);\n\t}\n\n\t/**\n\t * Returns true if no one is soloed\n\t */\n\tprivate _noSolos(): boolean {\n\t\t// either does not have any soloed added\n\t\treturn !Solo._soloed.has(this.context) ||\n\t\t\t// or has a solo set but doesn't include any items\n\t\t\t(Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).size === 0);\n\t}\n\n\t/**\n\t * Solo the current instance and unsolo all other instances.\n\t */\n\tprivate _updateSolo(): void {\n\t\tif (this._isSoloed()) {\n\t\t\tthis.input.gain.value = 1;\n\t\t} else if (this._noSolos()) {\n\t\t\t// no one is soloed\n\t\t\tthis.input.gain.value = 1;\n\t\t} else {\n\t\t\tthis.input.gain.value = 0;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).delete(this);\n\t\tthis._removeSolo();\n\t\treturn this;\n\t}\n}\n","import { readOnly } from \"../../core/util/Interface\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n\nexport interface PanVolOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode<PanVolOptions> {\n\n\treadonly name: string = \"PanVol\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The panning node\n\t */\n\tprivate _panner: Panner;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param pan the initial pan\n\t * @param volume The output volume.\n\t */\n\tconstructor(pan?: AudioRange, volume?: Decibels);\n\tconstructor(options?: Partial<PanVolOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n\t\tconst options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n\n\t\tthis._panner = this.input = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tchannelCount: options.channelCount,\n\t\t});\n\t\tthis.pan = this._panner.pan;\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\n\t\t// connections\n\t\tthis._panner.connect(this._volume);\n\t\tthis.mute = options.mute;\n\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): PanVolOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\tthis.pan.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { Param } from \"../../core/context/Param\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport interface ChannelOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tsolo: boolean;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls. \n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode<ChannelOptions> {\n\n\treadonly name: string = \"Channel\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The soloing interface\n\t */\n\tprivate _solo: Solo;\n\n\t/**\n\t * The panning and volume node\n\t */\n\tprivate _panVol: PanVol;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume The output volume.\n\t * @param pan the initial pan\n\t */\n\tconstructor(volume?: Decibels, pan?: AudioRange);\n\tconstructor(options?: Partial<ChannelOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n\t\tconst options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n\n\t\tthis._solo = this.input = new Solo({\n\t\t\tsolo: options.solo,\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis._panVol = this.output = new PanVol({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tvolume: options.volume,\n\t\t\tmute: options.mute,\n\t\t\tchannelCount: options.channelCount\n\t\t});\n\t\tthis.pan = this._panVol.pan;\n\t\tthis.volume = this._panVol.volume;\n\n\t\tthis._solo.connect(this._panVol);\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): ChannelOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tmute: false,\n\t\t\tsolo: false,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n\t */\n\tget solo(): boolean {\n\t\treturn this._solo.solo;\n\t}\n\tset solo(solo) {\n\t\tthis._solo.solo = solo;\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed,\n\t * or the channel is muted\n\t */\n\tget muted(): boolean {\n\t\treturn this._solo.muted || this.mute;\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._panVol.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._panVol.mute = mute;\n\t}\n\n\t/**\n\t * Store the send/receive channels by name. \n\t */\n\tprivate static buses: Map<string, Gain> = new Map();\n\n\t/**\n\t * Get the gain node belonging to the bus name. Create it if\n\t * it doesn't exist\n\t * @param name The bus name\n\t */\n\tprivate _getBus(name: string): Gain {\n\t\tif (!Channel.buses.has(name)) {\n\t\t\tChannel.buses.set(name, new Gain({ context: this.context }));\n\t\t}\n\t\treturn Channel.buses.get(name) as Gain;\n\t}\n\n\t/**\n\t * Send audio to another channel using a string. `send` is a lot like\n\t * [[connect]], except it uses a string instead of an object. This can \n\t * be useful in large applications to decouple sections since [[send]]\n\t * and [[receive]] can be invoked separately in order to connect an object\n\t * @param name The channel name to send the audio\n\t * @param volume The amount of the signal to send. \n\t * \tDefaults to 0db, i.e. send the entire signal\n\t * @returns Returns the gain node of this connection.\n\t */\n\tsend(name: string, volume: Decibels = 0): Gain<\"decibels\"> {\n\t\tconst bus = this._getBus(name);\n\t\tconst sendKnob = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tgain: volume,\n\t\t});\n\t\tthis.connect(sendKnob);\n\t\tsendKnob.connect(bus);\n\t\treturn sendKnob;\n\t}\n\n\t/**\n\t * Receive audio from a channel which was connected with [[send]]. \n\t * @param name The channel name to receive audio from.\n\t */\n\treceive(name: string): this {\n\t\tconst bus = this._getBus(name);\n\t\tbus.connect(this);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panVol.dispose();\n\t\tthis.pan.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._solo.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Merge } from \"./Merge\";\n\nexport type MonoOptions = ToneAudioNodeOptions;\n\n/**\n * Mono coerces the incoming mono or stereo signal into a mono signal\n * where both left and right channels have the same value. This can be useful\n * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n * @category Component\n */\nexport class Mono extends ToneAudioNode<MonoOptions> {\n\n\treadonly name: string = \"Mono\";\n\n\t/**\n\t * merge the signal\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The summed output of the multiple inputs\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * The stereo signal to sum to mono\n\t */\n\treadonly input: Gain;\n\n\tconstructor(options?: Partial<MonoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Mono.getDefaults(), arguments));\n\n\t\tthis.input = new Gain({ context: this.context });\n\n\t\tthis._merge = this.output = new Merge({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tthis.input.connect(this._merge, 0, 0);\n\t\tthis.input.connect(this._merge, 0, 1);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merge.dispose();\n\t\tthis.input.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Frequency, Positive } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n\ninterface MultibandSplitOptions extends ToneAudioNodeOptions {\n\tQ: Positive;\n\tlowFrequency: Frequency;\n\thighFrequency: Frequency;\n}\n\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\nexport class MultibandSplit extends ToneAudioNode<MultibandSplitOptions> {\n\n\treadonly name: string = \"MultibandSplit\";\n\n\t/**\n\t * the input\n\t */\n\treadonly input = new Gain({ context: this.context });\n\n\t/**\n\t * no output node, use either low, mid or high outputs\n\t */\n\treadonly output = undefined;\n\n\t/**\n\t * The low band.\n\t */\n\treadonly low = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"lowpass\",\n\t});\n\n\t/**\n\t * the lower filter of the mid band\n\t */\n\tprivate _lowMidFilter = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"highpass\",\n\t});\n\n\t/**\n\t * The mid band output.\n\t */\n\treadonly mid = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"lowpass\",\n\t});\n\n\t/**\n\t * The high band output.\n\t */\n\treadonly high = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"highpass\",\n\t});\n\n\t/**\n\t * The low/mid crossover frequency.\n\t */\n\treadonly lowFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The mid/high crossover frequency.\n\t */\n\treadonly highFrequency: Signal<\"frequency\">;\n\n\tprotected _internalChannels = [this.low, this.mid, this.high];\n\n\t/**\n\t * The Q or Quality of the filter\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * @param lowFrequency the low/mid crossover frequency\n\t * @param highFrequency the mid/high crossover frequency\n\t */\n\tconstructor(lowFrequency?: Frequency, highFrequency?: Frequency);\n\tconstructor(options?: Partial<MultibandSplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]));\n\t\tconst options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n\n\t\tthis.lowFrequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.lowFrequency,\n\t\t});\n\n\t\tthis.highFrequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.highFrequency,\n\t\t});\n\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.Q,\n\t\t});\n\n\t\tthis.input.fan(this.low, this.high);\n\t\tthis.input.chain(this._lowMidFilter, this.mid);\n\t\t// the frequency control signal\n\t\tthis.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);\n\t\tthis.highFrequency.fan(this.mid.frequency, this.high.frequency);\n\t\t// the Q value\n\t\tthis.Q.connect(this.low.Q);\n\t\tthis.Q.connect(this._lowMidFilter.Q);\n\t\tthis.Q.connect(this.mid.Q);\n\t\tthis.Q.connect(this.high.Q);\n\n\t\treadOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\t}\n\n\tstatic getDefaults(): MultibandSplitOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tQ: 1,\n\t\t\thighFrequency: 2500,\n\t\t\tlowFrequency: 400,\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\twritable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\t\tthis.low.dispose();\n\t\tthis._lowMidFilter.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.high.dispose();\n\t\tthis.lowFrequency.dispose();\n\t\tthis.highFrequency.dispose();\n\t\tthis.Q.dispose();\n\t\treturn this;\n\t}\n\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n\nexport interface ListenerOptions extends ToneAudioNodeOptions{\n\tpositionX: number;\n\tpositionY: number;\n\tpositionZ: number;\n\tforwardX: number;\n\tforwardY: number;\n\tforwardZ: number;\n\tupX: number;\n\tupY: number;\n\tupZ: number;\n}\n\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you \n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context. \n */\nexport class Listener extends ToneAudioNode<ListenerOptions> {\n\n\treadonly name: string = \"Listener\";\n\n\t/**\n\t * The listener has no inputs or outputs. \n\t */\n\toutput: undefined; \n\tinput: undefined; \n\n\treadonly positionX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionX,\n\t})\n\n\treadonly positionY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionY,\n\t})\n\n\treadonly positionZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionZ,\n\t})\n\n\treadonly forwardX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardX,\n\t})\n\n\treadonly forwardY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardY,\n\t})\n\n\treadonly forwardZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardZ,\n\t})\n\n\treadonly upX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upX,\n\t})\n\n\treadonly upY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upY,\n\t})\n\n\treadonly upZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upZ,\n\t})\n\n\tstatic getDefaults(): ListenerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\tpositionZ: 0,\n\t\t\tforwardX: 0,\n\t\t\tforwardY: 0,\n\t\t\tforwardZ: -1,\n\t\t\tupX: 0,\n\t\t\tupY: 1,\n\t\t\tupZ: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.positionX.dispose();\n\t\tthis.positionY.dispose();\n\t\tthis.positionZ.dispose();\n\t\tthis.forwardX.dispose();\n\t\tthis.forwardY.dispose();\n\t\tthis.forwardZ.dispose();\n\t\tthis.upX.dispose();\n\t\tthis.upY.dispose();\n\t\tthis.upZ.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.listener = new Listener({ context });\n});\n\nonContextClose(context => {\n\tcontext.listener.dispose();\n});\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Degrees, GainFactor } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n\nexport interface Panner3DOptions extends ToneAudioNodeOptions {\n\tconeInnerAngle: Degrees;\n\tconeOuterAngle: Degrees;\n\tconeOuterGain: GainFactor;\n\tdistanceModel: DistanceModelType;\n\tmaxDistance: number;\n\torientationX: number;\n\torientationY: number;\n\torientationZ: number;\n\tpanningModel: PanningModelType;\n\tpositionX: number;\n\tpositionY: number;\n\tpositionZ: number;\n\trefDistance: number;\n\trolloffFactor: number;\n}\n\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\nexport class Panner3D extends ToneAudioNode<Panner3DOptions> {\n\n\treadonly name: string = \"Panner3D\";\n\n\t/**\n\t * The panning object\n\t */\n\tprivate _panner: PannerNode;\n\treadonly input: PannerNode;\n\treadonly output: PannerNode;\n\n\treadonly positionX: Param<\"number\">;\n\treadonly positionY: Param<\"number\">;\n\treadonly positionZ: Param<\"number\">;\n\n\treadonly orientationX: Param<\"number\">;\n\treadonly orientationY: Param<\"number\">;\n\treadonly orientationZ: Param<\"number\">;\n\n\t/**\n\t * @param positionX The initial x position.\n\t * @param positionY The initial y position.\n\t * @param positionZ The initial z position.\n\t */\n\tconstructor(positionX: number, positionY: number, positionZ: number);\n\tconstructor(options?: Partial<Panner3DOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]));\n\t\tconst options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n\n\t\tthis._panner = this.input = this.output = this.context.createPanner();\n\t\t// set some values\n\t\tthis.panningModel = options.panningModel;\n\t\tthis.maxDistance = options.maxDistance;\n\t\tthis.distanceModel = options.distanceModel;\n\t\tthis.coneOuterGain = options.coneOuterGain;\n\t\tthis.coneOuterAngle = options.coneOuterAngle;\n\t\tthis.coneInnerAngle = options.coneInnerAngle;\n\t\tthis.refDistance = options.refDistance;\n\t\tthis.rolloffFactor = options.rolloffFactor;\n\n\t\tthis.positionX = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.positionX,\n\t\t\tvalue: options.positionX,\n\t\t});\n\t\tthis.positionY = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.positionY,\n\t\t\tvalue: options.positionY,\n\t\t});\n\t\tthis.positionZ = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.positionZ,\n\t\t\tvalue: options.positionZ,\n\t\t});\n\t\tthis.orientationX = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.orientationX,\n\t\t\tvalue: options.orientationX,\n\t\t});\n\t\tthis.orientationY = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.orientationY,\n\t\t\tvalue: options.orientationY,\n\t\t});\n\t\tthis.orientationZ = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.orientationZ,\n\t\t\tvalue: options.orientationZ,\n\t\t});\n\t}\n\n\tstatic getDefaults(): Panner3DOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconeInnerAngle: 360,\n\t\t\tconeOuterAngle: 360,\n\t\t\tconeOuterGain: 0,\n\t\t\tdistanceModel: \"inverse\" as DistanceModelType,\n\t\t\tmaxDistance: 10000,\n\t\t\torientationX: 0,\n\t\t\torientationY: 0,\n\t\t\torientationZ: 0,\n\t\t\tpanningModel: \"equalpower\" as PanningModelType,\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\tpositionZ: 0,\n\t\t\trefDistance: 1,\n\t\t\trolloffFactor: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Sets the position of the source in 3d space.\n\t */\n\tsetPosition(x: number, y: number, z: number): this {\n\t\tthis.positionX.value = x;\n\t\tthis.positionY.value = y;\n\t\tthis.positionZ.value = z;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the orientation of the source in 3d space.\n\t */\n\tsetOrientation(x: number, y: number, z: number): this {\n\t\tthis.orientationX.value = x;\n\t\tthis.orientationY.value = y;\n\t\tthis.orientationZ.value = z;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The panning model. Either \"equalpower\" or \"HRTF\".\n\t */\n\tget panningModel(): PanningModelType {\n\t\treturn this._panner.panningModel;\n\t}\n\tset panningModel(val) {\n\t\tthis._panner.panningModel = val;\n\t}\n\n\t/**\n\t * A reference distance for reducing volume as source move further from the listener\n\t */\n\tget refDistance(): number {\n\t\treturn this._panner.refDistance;\n\t}\n\tset refDistance(val) {\n\t\tthis._panner.refDistance = val;\n\t}\n\n\t/**\n\t * Describes how quickly the volume is reduced as source moves away from listener.\n\t */\n\tget rolloffFactor(): number {\n\t\treturn this._panner.rolloffFactor;\n\t}\n\tset rolloffFactor(val) {\n\t\tthis._panner.rolloffFactor = val;\n\t}\n\n\t/**\n\t * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t */\n\tget distanceModel(): DistanceModelType {\n\t\treturn this._panner.distanceModel;\n\t}\n\tset distanceModel(val) {\n\t\tthis._panner.distanceModel = val;\n\t}\n\n\t/**\n\t * The angle, in degrees, inside of which there will be no volume reduction\n\t */\n\tget coneInnerAngle(): Degrees {\n\t\treturn this._panner.coneInnerAngle;\n\t}\n\tset coneInnerAngle(val) {\n\t\tthis._panner.coneInnerAngle = val;\n\t}\n\n\t/**\n\t * The angle, in degrees, outside of which the volume will be reduced\n\t * to a constant value of coneOuterGain\n\t */\n\tget coneOuterAngle(): Degrees {\n\t\treturn this._panner.coneOuterAngle;\n\t}\n\tset coneOuterAngle(val) {\n\t\tthis._panner.coneOuterAngle = val;\n\t}\n\n\t/**\n\t * The gain outside of the coneOuterAngle\n\t */\n\tget coneOuterGain(): GainFactor {\n\t\treturn this._panner.coneOuterGain;\n\t}\n\tset coneOuterGain(val) {\n\t\tthis._panner.coneOuterGain = val;\n\t}\n\n\t/**\n\t * The maximum distance between source and listener,\n\t * after which the volume will not be reduced any further.\n\t */\n\tget maxDistance(): number {\n\t\treturn this._panner.maxDistance;\n\t}\n\tset maxDistance(val) {\n\t\tthis._panner.maxDistance = val;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis.orientationX.dispose();\n\t\tthis.orientationY.dispose();\n\t\tthis.orientationZ.dispose();\n\t\tthis.positionX.dispose();\n\t\tthis.positionY.dispose();\n\t\tthis.positionZ.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert } from \"../../core/util/Debug\";\nimport { theWindow } from \"../../core/context/AudioContext\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { PlaybackState } from \"../../core/util/StateTimeline\";\n\nexport interface RecorderOptions extends ToneAudioNodeOptions {\n\tmimeType?: string;\n}\n\n/**\n * A wrapper around the MediaRecorder API. Unlike the rest of Tone.js, this module does not offer\n * any sample-accurate scheduling because it is not a feature of the MediaRecorder API.\n * This is only natively supported in Chrome and Firefox. \n * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill]. \n * @example\n * const recorder = new Tone.Recorder();\n * const synth = new Tone.Synth().connect(recorder);\n * // start recording\n * recorder.start();\n * // generate a few notes\n * synth.triggerAttackRelease(\"C3\", 0.5);\n * synth.triggerAttackRelease(\"C4\", 0.5, \"+1\");\n * synth.triggerAttackRelease(\"C5\", 0.5, \"+2\");\n * // wait for the notes to end and stop the recording\n * setTimeout(async () => {\n * \t// the recorded audio is returned as a blob\n * \tconst recording = await recorder.stop();\n * \t// download the recording by creating an anchor element and blob url\n * \tconst url = URL.createObjectURL(recording);\n * \tconst anchor = document.createElement(\"a\");\n * \tanchor.download = \"recording.webm\";\n * \tanchor.href = url;\n * \tanchor.click();\n * }, 4000);\n * @category Component\n */\nexport class Recorder extends ToneAudioNode<RecorderOptions> {\n\n\treadonly name = \"Recorder\";\n\n\t/**\n\t * Recorder uses the Media Recorder API\n\t */\n\tprivate _recorder: MediaRecorder;\n\n\t/**\n\t * MediaRecorder requires \n\t */\n\tprivate _stream: MediaStreamAudioDestinationNode;\n\n\treadonly input: Gain;\n\treadonly output: undefined;\n\n\tconstructor(options?: Partial<RecorderOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Recorder.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Recorder.getDefaults(), arguments);\n\n\t\tthis.input = new Gain({\n\t\t\tcontext: this.context\n\t\t});\n\n\t\tassert(Recorder.supported, \"Media Recorder API is not available\");\n\n\t\tthis._stream = this.context.createMediaStreamDestination();\n\t\tthis.input.connect(this._stream);\n\t\tthis._recorder = new MediaRecorder(this._stream.stream, {\n\t\t\tmimeType: options.mimeType\n\t\t});\n\t}\n\n\tstatic getDefaults(): RecorderOptions {\n\t\treturn ToneAudioNode.getDefaults();\n\t}\n\n\t/**\n\t * The mime type is the format that the audio is encoded in. For Chrome \n\t * that is typically webm encoded as \"vorbis\". \n\t */\n\tget mimeType(): string {\n\t\treturn this._recorder.mimeType;\n\t}\n\n\t/**\n\t * Test if your platform supports the Media Recorder API. If it's not available, \n\t * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n\t */\n\tstatic get supported(): boolean {\n\t\treturn theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n\t}\n\n\t/**\n\t * Get the playback state of the Recorder, either \"started\", \"stopped\" or \"paused\"\n\t */\n\tget state(): PlaybackState {\n\t\tif (this._recorder.state === \"inactive\") {\n\t\t\treturn \"stopped\";\n\t\t} else if (this._recorder.state === \"paused\") {\n\t\t\treturn \"paused\";\n\t\t} else {\n\t\t\treturn \"started\";\n\t\t}\n\t}\n\n\t/**\n\t * Start the Recorder. Returns a promise which resolves\n\t * when the recorder has started.\n\t */\n\tasync start() {\n\t\tassert(this.state !== \"started\", \"Recorder is already started\");\n\t\tconst startPromise = new Promise<void>(done => {\n\t\t\tconst handleStart = () => {\n\t\t\t\tthis._recorder.removeEventListener(\"start\", handleStart, false);\n\n\t\t\t\tdone();\n\t\t\t};\n\n\t\t\tthis._recorder.addEventListener(\"start\", handleStart, false);\n\t\t});\n\n\t\tthis._recorder.start();\n\t\treturn await startPromise;\n\t}\n\n\t/**\n\t * Stop the recorder. Returns a promise with the recorded content until this point\n\t * encoded as [[mimeType]]\n\t */\n\tasync stop(): Promise<Blob> {\n\t\tassert(this.state !== \"stopped\", \"Recorder is not started\");\n\t\tconst dataPromise: Promise<Blob> = new Promise(done => {\n\t\t\tconst handleData = (e: BlobEvent) => {\n\t\t\t\tthis._recorder.removeEventListener(\"dataavailable\", handleData, false);\n\n\t\t\t\tdone(e.data);\n\t\t\t};\n\n\t\t\tthis._recorder.addEventListener(\"dataavailable\", handleData, false);\n\t\t});\n\t\tthis._recorder.stop();\n\t\treturn await dataPromise;\n\t}\n\n\t/**\n\t * Pause the recorder\n\t */\n\tpause(): this {\n\t\tassert(this.state === \"started\", \"Recorder must be started\");\n\t\tthis._recorder.pause();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis._stream.disconnect();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Positive, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface CompressorOptions extends ToneAudioNodeOptions {\n\tattack: Time;\n\tknee: Decibels;\n\tratio: Positive;\n\trelease: Time;\n\tthreshold: Decibels;\n}\n\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\nexport class Compressor extends ToneAudioNode<CompressorOptions> {\n\n\treadonly name: string = \"Compressor\";\n\n\t/**\n\t * the compressor node\n\t */\n\tprivate _compressor: DynamicsCompressorNode = this.context.createDynamicsCompressor();\n\treadonly input = this._compressor;\n\treadonly output = this._compressor;\n\n\t/**\n\t * The decibel value above which the compression will start taking effect.\n\t * @min -100\n\t * @max 0\n\t */\n\treadonly threshold: Param<\"decibels\">;\n\n\t/**\n\t * The amount of time (in seconds) to reduce the gain by 10dB.\n\t * @min 0\n\t * @max 1\n\t */\n\treadonly attack: Param<\"time\">;\n\n\t/**\n\t * The amount of time (in seconds) to increase the gain by 10dB.\n\t * @min 0\n\t * @max 1\n\t */\n\treadonly release: Param<\"time\">;\n\n\t/**\n\t * A decibel value representing the range above the threshold where the\n\t * curve smoothly transitions to the \"ratio\" portion.\n\t * @min 0\n\t * @max 40\n\t */\n\treadonly knee: Param<\"decibels\">;\n\n\t/**\n\t * The amount of dB change in input for a 1 dB change in output.\n\t * @min 1\n\t * @max 20\n\t */\n\treadonly ratio: Param<\"positive\">;\n\n\t/**\n\t * @param threshold The value above which the compression starts to be applied.\n\t * @param ratio The gain reduction ratio.\n\t */\n\tconstructor(threshold?: Decibels, ratio?: Positive);\n\tconstructor(options?: Partial<CompressorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]));\n\t\tconst options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n\n\t\tthis.threshold = new Param({\n\t\t\tminValue: this._compressor.threshold.minValue,\n\t\t\tmaxValue: this._compressor.threshold.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tconvert: false,\n\t\t\tparam: this._compressor.threshold,\n\t\t\tunits: \"decibels\",\n\t\t\tvalue: options.threshold,\n\t\t});\n\n\t\tthis.attack = new Param({\n\t\t\tminValue: this._compressor.attack.minValue,\n\t\t\tmaxValue: this._compressor.attack.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tparam: this._compressor.attack,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.attack,\n\t\t});\n\n\t\tthis.release = new Param({\n\t\t\tminValue: this._compressor.release.minValue,\n\t\t\tmaxValue: this._compressor.release.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tparam: this._compressor.release,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.release,\n\t\t});\n\n\t\tthis.knee = new Param({\n\t\t\tminValue: this._compressor.knee.minValue,\n\t\t\tmaxValue: this._compressor.knee.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tconvert: false,\n\t\t\tparam: this._compressor.knee,\n\t\t\tunits: \"decibels\",\n\t\t\tvalue: options.knee,\n\t\t});\n\n\t\tthis.ratio = new Param({\n\t\t\tminValue: this._compressor.ratio.minValue,\n\t\t\tmaxValue: this._compressor.ratio.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tconvert: false,\n\t\t\tparam: this._compressor.ratio,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.ratio,\n\t\t});\n\n\t\t// set the defaults\n\t\treadOnly(this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\t}\n\n\tstatic getDefaults(): CompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tattack: 0.003,\n\t\t\tknee: 30,\n\t\t\tratio: 12,\n\t\t\trelease: 0.25,\n\t\t\tthreshold: -24,\n\t\t});\n\t}\n\n\t/**\n\t * A read-only decibel value for metering purposes, representing the current amount of gain\n\t * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n\t */\n\tget reduction(): Decibels {\n\t\treturn this._compressor.reduction;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._compressor.disconnect();\n\t\tthis.attack.dispose();\n\t\tthis.release.dispose();\n\t\tthis.threshold.dispose();\n\t\tthis.ratio.dispose();\n\t\tthis.knee.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Time } from \"../../core/type/Units\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n\nexport interface GateOptions extends ToneAudioNodeOptions {\n\tthreshold: Decibels;\n\tsmoothing: Time;\n}\n\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n * @category Component\n */\nexport class Gate extends ToneAudioNode<GateOptions> {\n\n\treadonly name: string = \"Gate\";\n\n\treadonly input: ToneAudioNode;\n\treadonly output: ToneAudioNode;\n\n\t/**\n\t * Follow the incoming signal\n\t */\n\tprivate _follower: Follower;\n\n\t/**\n\t * Test if it's greater than the threshold\n\t */\n\tprivate _gt: GreaterThan;\n\n\t/**\n\t * Gate the incoming signal when it does not exceed the threshold\n\t */\n\tprivate _gate: Gain;\n\n\t/**\n\t * @param threshold The threshold above which the gate will open.\n\t * @param smoothing The follower's smoothing time\n\t */\n\tconstructor(threshold?: Decibels, smoothing?: Time);\n\tconstructor(options?: Partial<GateOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"])));\n\t\tconst options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n\n\t\tthis._follower = new Follower({\n\t\t\tcontext: this.context,\n\t\t\tsmoothing: options.smoothing,\n\t\t});\n\t\tthis._gt = new GreaterThan({\n\t\t\tcontext: this.context,\n\t\t\tvalue: dbToGain(options.threshold),\n\t\t});\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis._gate = this.output = new Gain({ context: this.context });\n\n\t\t// connections\n\t\tthis.input.connect(this._gate);\n\t\t// the control signal\n\t\tthis.input.chain(this._follower, this._gt, this._gate.gain);\n\t}\n\n\tstatic getDefaults(): GateOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsmoothing: 0.1,\n\t\t\tthreshold: -40\n\t\t});\n\t}\n\n\t/**\n\t * The threshold of the gate in decibels\n\t */\n\tget threshold(): Decibels {\n\t\treturn gainToDb(this._gt.value);\n\t}\n\tset threshold(thresh) {\n\t\tthis._gt.value = dbToGain(thresh);\n\t}\n\n\t/**\n\t * The attack/decay speed of the gate. See [[Follower.smoothing]]\n\t */\n\tget smoothing(): Time {\n\t\treturn this._follower.smoothing;\n\t}\n\tset smoothing(smoothingTime) {\n\t\tthis._follower.smoothing = smoothingTime;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis._follower.dispose();\n\t\tthis._gt.dispose();\n\t\tthis._gate.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { Param } from \"../../core/context/Param\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface LimiterOptions extends ToneAudioNodeOptions {\n\tthreshold: Decibels;\n}\n\n/**\n * Limiter will limit the loudness of an incoming signal.\n * Under the hood it's composed of a [[Compressor]] with a fast attack\n * and release and max compression ratio. \n *\n * @example\n * const limiter = new Tone.Limiter(-20).toDestination();\n * const oscillator = new Tone.Oscillator().connect(limiter);\n * oscillator.start();\n * @category Component\n */\nexport class Limiter extends ToneAudioNode<LimiterOptions> {\n\n\treadonly name: string = \"Limiter\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The compressor which does the limiting\n\t */\n\tprivate _compressor: Compressor;\n\n\treadonly threshold: Param<\"decibels\">\n\n\t/**\n\t * @param threshold The threshold above which the gain reduction is applied.\n\t */\n\tconstructor(threshold?: Decibels);\n\tconstructor(options?: Partial<LimiterOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"])));\n\t\tconst options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n\n\t\tthis._compressor = this.input = this.output = new Compressor({\n\t\t\tcontext: this.context,\n\t\t\tratio: 20,\n\t\t\tattack: 0.003,\n\t\t\trelease: 0.01,\n\t\t\tthreshold: options.threshold\n\t\t});\n\n\t\tthis.threshold = this._compressor.threshold;\n\t\treadOnly(this, \"threshold\");\n\t}\n\n\tstatic getDefaults(): LimiterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tthreshold: -12\n\t\t});\n\t}\n\n\t/**\n\t * A read-only decibel value for metering purposes, representing the current amount of gain\n\t * reduction that the compressor is applying to the signal. \n\t */\n\tget reduction(): Decibels {\n\t\treturn this._compressor.reduction;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._compressor.dispose();\n\t\tthis.threshold.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Compressor, CompressorOptions } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\n\nexport interface MidSideCompressorOptions extends ToneAudioNodeOptions {\n\tmid: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tside: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n * @category Component\n */\nexport class MidSideCompressor extends ToneAudioNode<MidSideCompressorOptions> {\n\n\treadonly name: string = \"MidSideCompressor\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * Split the incoming signal into Mid/Side\n\t */\n\tprivate _midSideSplit: MidSideSplit;\n\n\t/**\n\t * Merge the compressed signal back into a single stream\n\t */\n\tprivate _midSideMerge: MidSideMerge;\n\n\t/**\n\t * The compression applied to the mid signal\n\t */\n\treadonly mid: Compressor;\n\n\t/**\n\t * The compression applied to the side signal\n\t */\n\treadonly side: Compressor;\n\n\tconstructor(options?: RecursivePartial<MidSideCompressorOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments)));\n\t\tconst options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n\n\t\tthis._midSideSplit = this.input = new MidSideSplit({ context: this.context });\n\t\tthis._midSideMerge = this.output = new MidSideMerge({ context: this.context });\n\t\tthis.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n\t\tthis.side = new Compressor(Object.assign(options.side, { context: this.context }));\n\n\t\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t\treadOnly(this, [\"mid\", \"side\"]);\n\t}\n\n\tstatic getDefaults(): MidSideCompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmid: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16\n\t\t\t},\n\t\t\tside: {\n\t\t\t\tratio: 6,\n\t\t\t\tthreshold: -30,\n\t\t\t\trelease: 0.25,\n\t\t\t\tattack: 0.03,\n\t\t\t\tknee: 10\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._midSideSplit.dispose();\n\t\tthis._midSideMerge.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Compressor, CompressorOptions } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\nimport { Frequency } from \"../../core/type/Units\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport interface MultibandCompressorOptions extends ToneAudioNodeOptions {\n\tmid: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tlow: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\thigh: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tlowFrequency: Frequency;\n\thighFrequency: Frequency;\n}\n\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n * @category Component\n */\nexport class MultibandCompressor extends ToneAudioNode<MultibandCompressorOptions> {\n\n\treadonly name: string = \"MultibandCompressor\";\n\n\treadonly input: InputNode;\n\treadonly output: ToneAudioNode;\n\n\t/**\n\t * Split the incoming signal into high/mid/low\n\t */\n\tprivate _splitter: MultibandSplit;\n\n\t/**\n\t * low/mid crossover frequency.\n\t */\n\treadonly lowFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * mid/high crossover frequency.\n\t */\n\treadonly highFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The compressor applied to the low frequencies\n\t */\n\treadonly low: Compressor;\n\n\t/**\n\t * The compressor applied to the mid frequencies\n\t */\n\treadonly mid: Compressor;\n\n\t/**\n\t * The compressor applied to the high frequencies\n\t */\n\treadonly high: Compressor;\n\n\tconstructor(options?: RecursivePartial<MultibandCompressorOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments)));\n\t\tconst options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n\n\t\tthis._splitter = this.input = new MultibandSplit({\n\t\t\tcontext: this.context,\n\t\t\tlowFrequency: options.lowFrequency,\n\t\t\thighFrequency: options.highFrequency\n\t\t});\n\t\tthis.lowFrequency = this._splitter.lowFrequency;\n\t\tthis.highFrequency = this._splitter.highFrequency;\n\t\tthis.output = new Gain({ context: this.context });\n\t\tthis.low = new Compressor(Object.assign(options.low, { context: this.context }));\n\t\tthis.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n\t\tthis.high = new Compressor(Object.assign(options.high, { context: this.context }));\n\n\t\t// connect the compressor\n\t\tthis._splitter.low.chain(this.low, this.output);\n\t\tthis._splitter.mid.chain(this.mid, this.output);\n\t\tthis._splitter.high.chain(this.high, this.output);\n\n\t\treadOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\t}\n\n\tstatic getDefaults(): MultibandCompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tlowFrequency: 250,\n\t\t\thighFrequency: 2000,\n\t\t\tlow: {\n\t\t\t\tratio: 6,\n\t\t\t\tthreshold: -30,\n\t\t\t\trelease: 0.25,\n\t\t\t\tattack: 0.03,\n\t\t\t\tknee: 10\n\t\t\t},\n\t\t\tmid: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16\n\t\t\t},\n\t\t\thigh: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16\n\t\t\t},\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._splitter.dispose();\n\t\tthis.low.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.high.dispose();\n\t\tthis.output.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Frequency } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n\ninterface EQ3Options extends ToneAudioNodeOptions {\n\tlow: Decibels;\n\tmid: Decibels;\n\thigh: Decibels;\n\tlowFrequency: Frequency;\n\thighFrequency: Frequency;\n}\n\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High. \n * @category Component\n */\nexport class EQ3 extends ToneAudioNode<EQ3Options> {\n\n\treadonly name: string = \"EQ3\";\n\n\t/**\n\t * the input\n\t */\n\treadonly input: MultibandSplit;\n\n\t/**\n\t * the output\n\t */\n\treadonly output = new Gain({ context: this.context });\n\n\t/**\n\t * Splits the input into three outputs\n\t */\n\tprivate _multibandSplit: MultibandSplit;\n\n\t/**\n\t * The gain for the lower signals\n\t */\n\tprivate _lowGain: Gain<\"decibels\">;\n\n\t/**\n\t * The gain for the mid signals\n\t */\n\tprivate _midGain: Gain<\"decibels\">;\n\n\t/**\n\t * The gain for the high signals\n\t */\n\tprivate _highGain: Gain<\"decibels\">;\n\n\t/**\n\t * The gain in decibels of the low part\n\t */\n\treadonly low: Param<\"decibels\">;\n\n\t/**\n\t * The gain in decibels of the mid part\n\t */\n\treadonly mid: Param<\"decibels\">;\n\n\t/**\n\t * The gain in decibels of the high part\n\t */\n\treadonly high: Param<\"decibels\">;\n\n\t/**\n\t * The Q value for all of the filters.\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * The low/mid crossover frequency.\n\t */\n\treadonly lowFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The mid/high crossover frequency.\n\t */\n\treadonly highFrequency: Signal<\"frequency\">;\n\n\tprotected _internalChannels: ToneAudioNode[] = [];\n\n\tconstructor(lowLevel?: Decibels, midLevel?: Decibels, highLevel?: Decibels);\n\tconstructor(options: Partial<EQ3Options>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]));\n\t\tconst options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n\n\t\tthis.input = this._multibandSplit = new MultibandSplit({\n\t\t\tcontext: this.context,\n\t\t\thighFrequency: options.highFrequency,\n\t\t\tlowFrequency: options.lowFrequency,\n\t\t});\n\n\t\tthis._lowGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.low,\n\t\t\tunits: \"decibels\",\n\t\t});\n\n\t\tthis._midGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.mid,\n\t\t\tunits: \"decibels\",\n\t\t});\n\n\t\tthis._highGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.high,\n\t\t\tunits: \"decibels\",\n\t\t});\n\n\t\tthis.low = this._lowGain.gain;\n\t\tthis.mid = this._midGain.gain;\n\t\tthis.high = this._highGain.gain;\n\t\tthis.Q = this._multibandSplit.Q;\n\t\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\t\tthis.highFrequency\t= this._multibandSplit.highFrequency;\n\n\t\t// the frequency bands\n\t\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\t\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\t\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\n\t\treadOnly(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\t\tthis._internalChannels = [this._multibandSplit];\n\t}\n\n\tstatic getDefaults(): EQ3Options {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\thigh: 0,\n\t\t\thighFrequency: 2500,\n\t\t\tlow: 0,\n\t\t\tlowFrequency: 400,\n\t\t\tmid: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\twritable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\t\tthis._multibandSplit.dispose();\n\t\tthis.lowFrequency.dispose();\n\t\tthis.highFrequency.dispose();\n\t\tthis._lowGain.dispose();\n\t\tthis._midGain.dispose();\n\t\tthis._highGain.dispose();\n\t\tthis.low.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.high.dispose();\n\t\tthis.Q.dispose();\n\t\treturn this;\n\t}\n\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n\nexport interface ConvolverOptions extends ToneAudioNodeOptions {\n\tonload: () => void;\n\tnormalize: boolean;\n\turl?: string | AudioBuffer | ToneAudioBuffer;\n}\n\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * // initializing the convolver with an impulse response\n * const convolver = new Tone.Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\nexport class Convolver extends ToneAudioNode<ConvolverOptions> {\n\n\treadonly name: string = \"Convolver\";\n\n\t/**\n\t * The native ConvolverNode\n\t */\n\tprivate _convolver: ConvolverNode = this.context.createConvolver();\n\n\t/**\n\t * The Buffer belonging to the convolver\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param url The URL of the impulse response or the ToneAudioBuffer containing the impulse response.\n\t * @param onload The callback to invoke when the url is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<ConvolverOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis._buffer = new ToneAudioBuffer(options.url, buffer => {\n\t\t\tthis.buffer = buffer;\n\t\t\toptions.onload();\n\t\t});\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\t// set if it's already loaded, set it immediately\n\t\tif (this._buffer.loaded) {\n\t\t\tthis.buffer = this._buffer;\n\t\t}\n\n\t\t// initially set normalization\n\t\tthis.normalize = options.normalize;\n\n\t\t// connect it up\n\t\tthis.input.chain(this._convolver, this.output);\n\t}\n\n\tstatic getDefaults(): ConvolverOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tnormalize: true,\n\t\t\tonload: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Load an impulse response url as an audio buffer.\n\t * Decodes the audio asynchronously and invokes\n\t * the callback once the audio buffer loads.\n\t * @param url The url of the buffer to load. filetype support depends on the browser.\n\t */\n\tasync load(url: string): Promise<void> {\n\t\tthis.buffer = await this._buffer.load(url);\n\t}\n\n\t/**\n\t * The convolver's buffer\n\t */\n\tget buffer(): ToneAudioBuffer | null {\n\t\tif (this._buffer.length) {\n\t\t\treturn this._buffer;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tset buffer(buffer) {\n\t\tif (buffer) {\n\t\t\tthis._buffer.set(buffer);\n\t\t}\n\t\t// if it's already got a buffer, create a new one\n\t\tif (this._convolver.buffer) {\n\t\t\t// disconnect the old one\n\t\t\tthis.input.disconnect();\n\t\t\tthis._convolver.disconnect();\n\t\t\t// create and connect a new one\n\t\t\tthis._convolver = this.context.createConvolver();\n\t\t\tthis.input.chain(this._convolver, this.output);\n\t\t}\n\t\tconst buff = this._buffer.get();\n\t\tthis._convolver.buffer = buff ? buff : null;\n\t}\n\n\t/**\n\t * The normalize property of the ConvolverNode interface is a boolean that\n\t * controls whether the impulse response from the buffer will be scaled by\n\t * an equal-power normalization when the buffer attribute is set, or not.\n\t */\n\tget normalize(): boolean {\n\t\treturn this._convolver.normalize;\n\t}\n\tset normalize(norm) {\n\t\tthis._convolver.normalize = norm;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffer.dispose();\n\t\tthis._convolver.disconnect();\n\t\treturn this;\n\t}\n}\n","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nimport { Seconds } from \"./core/type/Units\";\nexport { supported } from \"./core/context/AudioContext\";\n\n/**\n * The current audio context time of the global [[Context]]. \n * See [[Context.now]]\n * @category Core\n */\nexport function now(): Seconds {\n\treturn getContext().now();\n}\n\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate(): Seconds {\n\treturn getContext().immediate();\n}\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport(): import(\"./core/clock/Transport\").Transport {\n\treturn getContext().transport;\n}\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination(): import(\"./core/context/Destination\").Destination {\n\treturn getContext().destination;\n}\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener(): import(\"./core/context/Listener\").Listener {\n\treturn getContext().listener;\n}\n\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n\n/**\n * Get the singleton attached to the global context. \n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport function getDraw(): import(\"./core/util/Draw\").Draw {\n\treturn getContext().draw;\n}\n\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n\n/**\n * Promise which resolves when all of the loading promises are resolved. \n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n\treturn ToneAudioBuffer.loaded();\n}\n\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer: typeof ToneAudioBuffer = ToneAudioBuffer;\nexport const Buffers: typeof ToneAudioBuffers = ToneAudioBuffers;\nexport const BufferSource: typeof ToneBufferSource = ToneBufferSource;\n","import m from 'mithril'\nimport { Transport, Draw } from 'tone'\nimport { TransportClock } from './clock'\nimport './transport.css'\nimport { Observable, Container } from './components'\nimport { state } from '../state'\nimport { Button } from 'construct-ui'\n\nTransport.scheduleRepeat(time => {\n  Draw.schedule(() => {\n    // console.log('drawing', time, state)\n    state.time(state.transportTime.toBarsBeatsSixteenths())\n    let bbs = state.time().split(':')\n    state.bars(Number(bbs[0]))\n    state.beats(Number(bbs[1]))\n    state.sixteenths(Number(bbs[2]))\n    state.bpm(Transport.bpm.value)\n    // state.state(Transport.state)\n  }, time)\n  // console.log('transport time', time)\n}, '.02')\n\nfunction TransportStarted(e) {\n  state.state('started')\n  console.log(state.state(), e)\n}\nfunction TransportStopped(e) {\n  state.state('stopped')\n  console.log(state.state(), e)\n}\nfunction TransportPause(e) {\n  state.state('paused')\n  console.log(state.state(), e)\n}\nTransport.on('start', TransportStarted)\nTransport.on('stop', TransportStopped)\nTransport.on('pause', TransportPause)\n\nexport const Start = {\n  view: vnode =>\n    m(Button, {\n      label: '>',\n      onclick: () => {\n        Transport.start()\n      },\n      ...vnode.attrs,\n    }),\n}\n\nexport const Stop = {\n  view: vnode =>\n    m(Button, {\n      label: '■',\n      onclick: () => Transport.stop(),\n      ...vnode.attrs,\n    }),\n}\nexport const Pause = {\n  view: vnode =>\n    m(Button, {\n      label: '| |',\n      onclick: () => Transport.pause(),\n      ...vnode.attrs,\n    }),\n}\n\nexport const PlayPause = state => ({\n  oncreate: vnode => {\n    state.state.map(s => {\n      console.log('changing play button', s, vnode)\n      m.render(vnode.dom, s == 'started' ? m(Pause) : m(Start))\n    })\n  },\n  view: vnode => m('', vnode.attrs),\n})\n\nexport const TransportControls = m(Container, {}, [\n  TransportClock(state),\n  m(Stop),\n  m(PlayPause(state)),\n])\n","import m from 'mithril'\nimport { Observable } from './components'\nimport { OneIndex, TwoDecimal } from '../utils'\n\nexport const Bars = state => m(Observable(OneIndex(state.bars)))\nexport const Beats = state => m(Observable(OneIndex(state.beats)))\nexport const Sixteenths = state =>\n  m(Observable(TwoDecimal(OneIndex(state.sixteenths))))\n\nexport const Seperator = m('', ':')\n\nexport const TransportClock = state =>\n  m('.clock', {}, [\n    Bars(state),\n    Seperator,\n    Beats(state),\n    Seperator,\n    Sixteenths(state),\n  ])\n","import m from 'mithril'\nimport { Stream } from '../types'\n\nexport const Observable = (s: Stream) => {\n  return {\n    oncreate: vnode => {\n      s.map(value => {\n        m.render(vnode.dom, value)\n      })\n    },\n    onremove: vnode => m.render(vnode.dom, null),\n    view: () => m('', {}, s()),\n  }\n}\n\nexport const Container = {\n  view: vnode => m('.container', vnode.attrs, vnode.children),\n}\n","import { Stream } from './types'\n\nexport const TwoDigit = (s: Stream<Number>) =>\n  s.map(v => String(v).padStart(2, '0'))\n\nexport const TwoDecimal = (s: Stream<Number>) => s.map(v => v.toFixed(2))\n\nexport const NDecimal = (s: Stream<Number>, digits: Number) =>\n  s.map(v => v.toFixed(digits))\n\nexport const OneIndex = (s: Stream<Number>) => s.map(v => v + 1)\n","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","'use strict';\n\nvar curryN = require('ramda/src/curryN');\n\n// Utility\nfunction isFunction(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n}\nfunction trueFn() { return true; }\n\n// Globals\nvar toUpdate = [];\nvar inStream;\nvar order = [];\nvar orderNextIdx = -1;\nvar flushingUpdateQueue = false;\nvar flushingStreamValue = false;\n\nfunction flushing() {\n  return flushingUpdateQueue || flushingStreamValue;\n}\n\n\n/** @namespace */\nvar flyd = {}\n\n// /////////////////////////// API ///////////////////////////////// //\n\n/**\n * Creates a new stream\n *\n * __Signature__: `a -> Stream a`\n *\n * @name flyd.stream\n * @param {*} initialValue - (Optional) the initial value of the stream\n * @return {stream} the stream\n *\n * @example\n * var n = flyd.stream(1); // Stream with initial value `1`\n * var s = flyd.stream(); // Stream with no initial value\n */\nflyd.stream = function(initialValue) {\n  var endStream = createDependentStream([], trueFn);\n  var s = createStream();\n  s.end = endStream;\n  s.fnArgs = [];\n  endStream.listeners.push(s);\n  if (arguments.length > 0) s(initialValue);\n  return s;\n}\n// fantasy-land Applicative\nflyd.stream['fantasy-land/of'] = flyd.stream.of = flyd.stream;\n\n\n/**\n * Create a new dependent stream\n *\n * __Signature__: `(...Stream * -> Stream b -> b) -> [Stream *] -> Stream b`\n *\n * @name flyd.combine\n * @param {Function} fn - the function used to combine the streams\n * @param {Array<stream>} dependencies - the streams that this one depends on\n * @return {stream} the dependent stream\n *\n * @example\n * var n1 = flyd.stream(0);\n * var n2 = flyd.stream(0);\n * var max = flyd.combine(function(n1, n2, self, changed) {\n *   return n1() > n2() ? n1() : n2();\n * }, [n1, n2]);\n */\nflyd.combine = curryN(2, combine);\nfunction combine(fn, streams) {\n  var i, s, deps, depEndStreams;\n  var endStream = createDependentStream([], trueFn);\n  deps = []; depEndStreams = [];\n  for (i = 0; i < streams.length; ++i) {\n    if (streams[i] !== undefined) {\n      deps.push(streams[i]);\n      if (streams[i].end !== undefined) depEndStreams.push(streams[i].end);\n    }\n  }\n  s = createDependentStream(deps, fn);\n  s.depsChanged = [];\n  s.fnArgs = s.deps.concat([s, s.depsChanged]);\n  s.end = endStream;\n  endStream.listeners.push(s);\n  addListeners(depEndStreams, endStream);\n  endStream.deps = depEndStreams;\n  updateStream(s);\n  return s;\n}\n\n/**\n * Returns `true` if the supplied argument is a Flyd stream and `false` otherwise.\n *\n * __Signature__: `* -> Boolean`\n *\n * @name flyd.isStream\n * @param {*} value - the value to test\n * @return {Boolean} `true` if is a Flyd streamn, `false` otherwise\n *\n * @example\n * var s = flyd.stream(1);\n * var n = 1;\n * flyd.isStream(s); //=> true\n * flyd.isStream(n); //=> false\n */\nflyd.isStream = function(stream) {\n  return isFunction(stream) && 'hasVal' in stream;\n}\n\n/**\n * Invokes the body (the function to calculate the value) of a dependent stream\n *\n * By default the body of a dependent stream is only called when all the streams\n * upon which it depends has a value. `immediate` can circumvent this behaviour.\n * It immediately invokes the body of a dependent stream.\n *\n * __Signature__: `Stream a -> Stream a`\n *\n * @name flyd.immediate\n * @param {stream} stream - the dependent stream\n * @return {stream} the same stream\n *\n * @example\n * var s = flyd.stream();\n * var hasItems = flyd.immediate(flyd.combine(function(s) {\n *   return s() !== undefined && s().length > 0;\n * }, [s]);\n * console.log(hasItems()); // logs `false`. Had `immediate` not been\n *                          // used `hasItems()` would've returned `undefined`\n * s([1]);\n * console.log(hasItems()); // logs `true`.\n * s([]);\n * console.log(hasItems()); // logs `false`.\n */\nflyd.immediate = function(s) {\n  if (s.depsMet === false) {\n    s.depsMet = true;\n    updateStream(s);\n  }\n  return s;\n}\n\n/**\n * Changes which `endsStream` should trigger the ending of `s`.\n *\n * __Signature__: `Stream a -> Stream b -> Stream b`\n *\n * @name flyd.endsOn\n * @param {stream} endStream - the stream to trigger the ending\n * @param {stream} stream - the stream to be ended by the endStream\n * @param {stream} the stream modified to be ended by endStream\n *\n * @example\n * var n = flyd.stream(1);\n * var killer = flyd.stream();\n * // `double` ends when `n` ends or when `killer` emits any value\n * var double = flyd.endsOn(flyd.merge(n.end, killer), flyd.combine(function(n) {\n *   return 2 * n();\n * }, [n]);\n*/\nflyd.endsOn = function(endS, s) {\n  detachDeps(s.end);\n  endS.listeners.push(s.end);\n  s.end.deps.push(endS);\n  return s;\n}\n\n/**\n * Map a stream\n *\n * Returns a new stream consisting of every value from `s` passed through\n * `fn`. I.e. `map` creates a new stream that listens to `s` and\n * applies `fn` to every new value.\n * __Signature__: `(a -> result) -> Stream a -> Stream result`\n *\n * @name flyd.map\n * @param {Function} fn - the function that produces the elements of the new stream\n * @param {stream} stream - the stream to map\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = flyd.map(function(n) { return n*n; }, numbers);\n */\n// Library functions use self callback to accept (null, undefined) update triggers.\nfunction map(f, s) {\n  return combine(function(s, self) { self(f(s.val)); }, [s]);\n}\nflyd.map = curryN(2, map)\n\n/**\n * Chain a stream\n *\n * also known as flatMap\n *\n * Where `fn` returns a stream this function will flatten the resulting streams.\n * Every time `fn` is called the context of the returned stream will \"switch\" to that stream.\n *\n * __Signature__: `(a -> Stream b) -> Stream a -> Stream b`\n *\n * @name flyd.chain\n * @param {Function} fn - the function that produces the streams to be flattened\n * @param {stream} stream - the stream to map\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var filter = flyd.stream('who');\n * var items = flyd.chain(function(filter){\n *   return flyd.stream(findUsers(filter));\n * }, filter);\n */\nflyd.chain = curryN(2, chain);\n\n/**\n * Apply a stream\n *\n * Applies the value in `s2` to the function in `s1`.\n *\n * __Signature__: `Stream (a -> b) -> Stream a -> Stream b`\n *\n * @name flyd.ap\n * @param {stream} s1 - The value to be applied\n * @param {stream} s2 - The function expecting the value\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var add = stream(a => b => a + b)\n * var n1 = stream(1)\n * var n2 = stream(2)\n *\n * var added = flyd.ap(n2, flyd.ap(n1, add)) // stream(3)\n * // can also be written using pipe\n * var added_pipe = add\n *   .pipe(ap(n1))\n *   .pipe(ap(n2));\n * added_pipe() // 3\n */\nflyd.ap = curryN(2, ap);\n\n/**\n * Listen to stream events\n *\n * Similar to `map` except that the returned stream is empty. Use `on` for doing\n * side effects in reaction to stream changes. Use the returned stream only if you\n * need to manually end it.\n *\n * __Signature__: `(a -> result) -> Stream a -> Stream undefined`\n *\n * @name flyd.on\n * @param {Function} cb - the callback\n * @param {stream} stream - the stream\n * @return {stream} an empty stream (can be ended)\n */\nflyd.on = curryN(2, function(f, s) {\n  return combine(function(s) { f(s.val); }, [s]);\n})\n\n/**\n * Creates a new stream with the results of calling the function on every incoming\n * stream with and accumulator and the incoming value.\n *\n * __Signature__: `(a -> b -> a) -> a -> Stream b -> Stream a`\n *\n * @name flyd.scan\n * @param {Function} fn - the function to call\n * @param {*} val - the initial value of the accumulator\n * @param {stream} stream - the stream source\n * @return {stream} the new stream\n *\n * @example\n * var numbers = flyd.stream();\n * var sum = flyd.scan(function(sum, n) { return sum+n; }, 0, numbers);\n * numbers(2)(3)(5);\n * sum(); // 10\n */\nflyd.scan = curryN(3, function(f, acc, s) {\n  var ns = combine(function(s, self) {\n    self(acc = f(acc, s.val));\n  }, [s]);\n  if (!ns.hasVal) ns(acc);\n  return ns;\n});\n\n/**\n * Creates a new stream down which all values from both `stream1` and `stream2`\n * will be sent.\n *\n * __Signature__: `Stream a -> Stream a -> Stream a`\n *\n * @name flyd.merge\n * @param {stream} source1 - one stream to be merged\n * @param {stream} source2 - the other stream to be merged\n * @return {stream} a stream with the values from both sources\n *\n * @example\n * var btn1Clicks = flyd.stream();\n * button1Elm.addEventListener(btn1Clicks);\n * var btn2Clicks = flyd.stream();\n * button2Elm.addEventListener(btn2Clicks);\n * var allClicks = flyd.merge(btn1Clicks, btn2Clicks);\n */\nflyd.merge = curryN(2, function(s1, s2) {\n  var s = flyd.immediate(combine(function(s1, s2, self, changed) {\n    if (changed[0]) {\n      self(changed[0]());\n    } else if (s1.hasVal) {\n      self(s1.val);\n    } else if (s2.hasVal) {\n      self(s2.val);\n    }\n  }, [s1, s2]));\n  flyd.endsOn(combine(function() {\n    return true;\n  }, [s1.end, s2.end]), s);\n  return s;\n});\n\n/**\n * Creates a new stream resulting from applying `transducer` to `stream`.\n *\n * __Signature__: `Transducer -> Stream a -> Stream b`\n *\n * @name flyd.transduce\n * @param {Transducer} xform - the transducer transformation\n * @param {stream} source - the stream source\n * @return {stream} the new stream\n *\n * @example\n * var t = require('transducers.js');\n *\n * var results = [];\n * var s1 = flyd.stream();\n * var tx = t.compose(t.map(function(x) { return x * 2; }), t.dedupe());\n * var s2 = flyd.transduce(tx, s1);\n * flyd.combine(function(s2) { results.push(s2()); }, [s2]);\n * s1(1)(1)(2)(3)(3)(3)(4);\n * results; // => [2, 4, 6, 8]\n */\nflyd.transduce = curryN(2, function(xform, source) {\n  xform = xform(new StreamTransformer());\n  return combine(function(source, self) {\n    var res = xform['@@transducer/step'](undefined, source.val);\n    if (res && res['@@transducer/reduced'] === true) {\n      self.end(true);\n      return res['@@transducer/value'];\n    } else {\n      return res;\n    }\n  }, [source]);\n});\n\n/**\n * Returns `fn` curried to `n`. Use this function to curry functions exposed by\n * modules for Flyd.\n *\n * @name flyd.curryN\n * @function\n * @param {Integer} arity - the function arity\n * @param {Function} fn - the function to curry\n * @return {Function} the curried function\n *\n * @example\n * function add(x, y) { return x + y; };\n * var a = flyd.curryN(2, add);\n * a(2)(4) // => 6\n */\nflyd.curryN = curryN\n\n/**\n * Returns a new stream identical to the original except every\n * value will be passed through `f`.\n *\n * _Note:_ This function is included in order to support the fantasy land\n * specification.\n *\n * __Signature__: Called bound to `Stream a`: `(a -> b) -> Stream b`\n *\n * @name stream.map\n * @param {Function} function - the function to apply\n * @return {stream} a new stream with the values mapped\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = numbers.map(function(n) { return n*n; });\n */\nfunction boundMap(f) { return map(f, this); }\n\n/**\n * Returns the result of applying function `fn` to this stream\n *\n * __Signature__: Called bound to `Stream a`: `(a -> Stream b) -> Stream b`\n *\n * @name stream.pipe\n * @param {Function} fn - the function to apply\n * @return {stream} A new stream\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = numbers.pipe(flyd.map(function(n){ return n*n; }));\n */\nfunction operator_pipe(f) { return f(this) }\n\nfunction boundChain(f) {\n  return chain(f, this);\n}\n\nfunction chain(f, s) {\n  // Internal state to end flat map stream\n  var flatEnd = flyd.stream(1);\n  var internalEnded = flyd.on(function() {\n    var alive = flatEnd() - 1;\n    flatEnd(alive);\n    if (alive <= 0) {\n      flatEnd.end(true);\n    }\n  });\n\n  internalEnded(s.end);\n  var last = flyd.stream();\n  var flatStream = flyd.combine(function(s, own) {\n    last.end(true)\n    // Our fn stream makes streams\n    var newS = f(s());\n    flatEnd(flatEnd() + 1);\n    internalEnded(newS.end);\n\n    // Update self on call -- newS is never handed out so deps don't matter\n    last = map(own, newS);\n  }, [s]);\n\n  flyd.endsOn(flatEnd.end, flatStream);\n\n  return flatStream;\n}\n\nflyd.fromPromise = function fromPromise(p) {\n  var s = flyd.stream();\n  p.then(function(val) {\n    s(val);\n    s.end(true);\n  });\n  return s;\n}\n\nflyd.flattenPromise = function flattenPromise(s) {\n  return combine(function(s, self) {\n    s().then(self);\n  }, [s])\n}\n\n\n/**\n * Returns a new stream which is the result of applying the\n * functions from `this` stream to the values in `stream` parameter.\n *\n * `this` stream must be a stream of functions.\n *\n * _Note:_ This function is included in order to support the fantasy land\n * specification.\n *\n * __Signature__: Called bound to `Stream (a -> b)`: `a -> Stream b`\n *\n * @name stream.ap\n * @param {stream} stream - the values stream\n * @return {stream} a new stream with the functions applied to values\n *\n * @example\n * var add = flyd.curryN(2, function(x, y) { return x + y; });\n * var numbers1 = flyd.stream();\n * var numbers2 = flyd.stream();\n * var addToNumbers1 = flyd.map(add, numbers1);\n * var added = addToNumbers1.ap(numbers2);\n */\nfunction ap(s2, s1) {\n  return combine(function(s1, s2, self) { self(s1.val(s2.val)); }, [s1, s2]);\n}\n\nfunction boundAp(s2) {\n  return ap(s2, this);\n}\n\n/**\n * @private\n */\nfunction fantasy_land_ap(s1) {\n  return ap(this, s1);\n}\n\n/**\n * Get a human readable view of a stream\n * @name stream.toString\n * @return {String} the stream string representation\n */\nfunction streamToString() {\n  return 'stream(' + this.val + ')';\n}\n\n/**\n * @name stream.end\n * @memberof stream\n * A stream that emits `true` when the stream ends. If `true` is pushed down the\n * stream the parent stream ends.\n */\n\n/**\n * @name stream.of\n * @function\n * @memberof stream\n * Returns a new stream with `value` as its initial value. It is identical to\n * calling `flyd.stream` with one argument.\n *\n * __Signature__: Called bound to `Stream (a)`: `b -> Stream b`\n *\n * @param {*} value - the initial value\n * @return {stream} the new stream\n *\n * @example\n * var n = flyd.stream(1);\n * var m = n.of(1);\n */\n\n// /////////////////////////// PRIVATE ///////////////////////////////// //\n/**\n * @private\n * Create a stream with no dependencies and no value\n * @return {Function} a flyd stream\n */\nfunction createStream() {\n  function s(n) {\n    if (arguments.length === 0) return s.val\n    updateStreamValue(n, s)\n    return s\n  }\n  s.hasVal = false;\n  s.val = undefined;\n  s.updaters = [];\n  s.listeners = [];\n  s.queued = false;\n  s.end = undefined;\n\n  // fantasy-land compatibility\n  s.ap = boundAp;\n  s['fantasy-land/map'] = s.map = boundMap;\n  s['fantasy-land/ap'] = fantasy_land_ap;\n  s['fantasy-land/of'] = s.of = flyd.stream;\n  s['fantasy-land/chain'] = s.chain = boundChain;\n\n  s.pipe = operator_pipe;\n\n  // According to the fantasy-land Applicative specification\n  // Given a value f, one can access its type representative via the constructor property:\n  // `f.constructor.of`\n  s.constructor = flyd.stream;\n\n  s.toJSON = function() {\n    return s.val;\n  }\n  s.toString = streamToString;\n  return s;\n}\n\n/**\n * @private\n * Create a dependent stream\n * @param {Array<stream>} dependencies - an array of the streams\n * @param {Function} fn - the function used to calculate the new stream value\n * from the dependencies\n * @return {stream} the created stream\n */\nfunction createDependentStream(deps, fn) {\n  var s = createStream();\n  s.fn = fn;\n  s.deps = deps;\n  s.depsMet = false;\n  s.depsChanged = deps.length > 0 ? [] : undefined;\n  s.shouldUpdate = false;\n  addListeners(deps, s);\n  return s;\n}\n\n/**\n * @private\n * Check if all the dependencies have values\n * @param {stream} stream - the stream to check depencencies from\n * @return {Boolean} `true` if all dependencies have vales, `false` otherwise\n */\nfunction initialDependenciesMet(stream) {\n  stream.depsMet = stream.deps.every(function(s) {\n    return s.hasVal;\n  });\n  return stream.depsMet;\n}\n\nfunction dependenciesAreMet(stream) {\n  return stream.depsMet === true || initialDependenciesMet(stream);\n}\n\nfunction isEnded(stream) {\n  return stream.end && stream.end.val === true;\n}\n\nfunction listenersNeedUpdating(s) {\n  return s.listeners.some(function(s) { return s.shouldUpdate; });\n}\n\n/**\n * @private\n * Update a dependent stream using its dependencies in an atomic way\n * @param {stream} stream - the stream to update\n */\nfunction updateStream(s) {\n  if (isEnded(s) || !dependenciesAreMet(s)) return;\n  if (inStream !== undefined) {\n    updateLaterUsing(updateStream, s);\n    return;\n  }\n  inStream = s;\n  if (s.depsChanged) s.fnArgs[s.fnArgs.length - 1] = s.depsChanged;\n  var returnVal = s.fn.apply(s.fn, s.fnArgs);\n  if (returnVal !== undefined) {\n    s(returnVal);\n  }\n  inStream = undefined;\n  if (s.depsChanged !== undefined) s.depsChanged = [];\n  s.shouldUpdate = false;\n  if (flushing() === false) flushUpdate();\n  if (listenersNeedUpdating(s)) {\n    if (!flushingStreamValue) s(s.val)\n    else {\n      s.listeners.forEach(function(listener) {\n        if (listener.shouldUpdate) updateLaterUsing(updateStream, listener);\n      });\n    }\n  }\n}\n\n/**\n * @private\n * Update the dependencies of a stream\n * @param {stream} stream\n */\nfunction updateListeners(s) {\n  var i, o, list\n  var listeners = s.listeners;\n  for (i = 0; i < listeners.length; ++i) {\n    list = listeners[i];\n    if (list.end === s) {\n      endStream(list);\n    } else {\n      if (list.depsChanged !== undefined) list.depsChanged.push(s);\n      list.shouldUpdate = true;\n      findDeps(list);\n    }\n  }\n  for (; orderNextIdx >= 0; --orderNextIdx) {\n    o = order[orderNextIdx];\n    if (o.shouldUpdate === true) updateStream(o);\n    o.queued = false;\n  }\n}\n\n/**\n * @private\n * Add stream dependencies to the global `order` queue.\n * @param {stream} stream\n * @see updateDeps\n */\nfunction findDeps(s) {\n  var i\n  var listeners = s.listeners;\n  if (s.queued === false) {\n    s.queued = true;\n    for (i = 0; i < listeners.length; ++i) {\n      findDeps(listeners[i]);\n    }\n    order[++orderNextIdx] = s;\n  }\n}\n\nfunction updateLaterUsing(updater, stream) {\n  toUpdate.push(stream);\n  stream.updaters.push(updater);\n  stream.shouldUpdate = true;\n}\n\n/**\n * @private\n */\nfunction flushUpdate() {\n  flushingUpdateQueue = true;\n  while (toUpdate.length > 0) {\n    var stream = toUpdate.shift();\n    var nextUpdateFn = stream.updaters.shift();\n    if (nextUpdateFn && stream.shouldUpdate) nextUpdateFn(stream);\n  }\n  flushingUpdateQueue = false;\n}\n\n/**\n * @private\n * Push down a value into a stream\n * @param {stream} stream\n * @param {*} value\n */\nfunction updateStreamValue(n, s) {\n  s.val = n;\n  s.hasVal = true;\n  if (inStream === undefined) {\n    flushingStreamValue = true;\n    updateListeners(s);\n    if (toUpdate.length > 0) flushUpdate();\n    flushingStreamValue = false;\n  } else if (inStream === s) {\n    markListeners(s, s.listeners);\n  } else {\n    updateLaterUsing(function(s) { updateStreamValue(n, s); }, s);\n  }\n}\n\n/**\n * @private\n */\nfunction markListeners(s, lists) {\n  var i, list;\n  for (i = 0; i < lists.length; ++i) {\n    list = lists[i];\n    if (list.end !== s) {\n      if (list.depsChanged !== undefined) {\n        list.depsChanged.push(s);\n      }\n      list.shouldUpdate = true;\n    } else {\n      endStream(list);\n    }\n  }\n}\n\n/**\n * @private\n * Add dependencies to a stream\n * @param {Array<stream>} dependencies\n * @param {stream} stream\n */\nfunction addListeners(deps, s) {\n  for (var i = 0; i < deps.length; ++i) {\n    deps[i].listeners.push(s);\n  }\n}\n\n/**\n * @private\n * Removes an stream from a dependency array\n * @param {stream} stream\n * @param {Array<stream>} dependencies\n */\nfunction removeListener(s, listeners) {\n  var idx = listeners.indexOf(s);\n  listeners[idx] = listeners[listeners.length - 1];\n  listeners.length--;\n}\n\n/**\n * @private\n * Detach a stream from its dependencies\n * @param {stream} stream\n */\nfunction detachDeps(s) {\n  for (var i = 0; i < s.deps.length; ++i) {\n    removeListener(s, s.deps[i].listeners);\n  }\n  s.deps.length = 0;\n}\n\n/**\n * @private\n * Ends a stream\n */\nfunction endStream(s) {\n  if (s.deps !== undefined) detachDeps(s);\n  if (s.end !== undefined) detachDeps(s.end);\n}\n\n/**\n * @private\n */\n/**\n * @private\n * transducer stream transformer\n */\nfunction StreamTransformer() { }\nStreamTransformer.prototype['@@transducer/init'] = function() { };\nStreamTransformer.prototype['@@transducer/result'] = function() { };\nStreamTransformer.prototype['@@transducer/step'] = function(s, v) { return v; };\n\nmodule.exports = flyd;\n","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","import { Transport, TransportTime } from 'tone'\nimport { TransportState } from './types'\n\nimport { stream } from 'flyd'\n\nexport const state: TransportState = {\n  bpm: stream(120),\n  time: stream(0),\n  bars: stream(0),\n  beats: stream(0),\n  sixteenths: stream(0),\n  transportTime: TransportTime(),\n  state: stream(Transport.state),\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export var Classes = {\r\n    // Modifiers\r\n    XS: 'cui-xs',\r\n    SM: 'cui-sm',\r\n    LG: 'cui-lg',\r\n    XL: 'cui-xl',\r\n    PRIMARY: 'cui-primary',\r\n    NEGATIVE: 'cui-negative',\r\n    POSITIVE: 'cui-positive',\r\n    WARNING: 'cui-warning',\r\n    ACTIVE: 'cui-active',\r\n    DISABLED: 'cui-disabled',\r\n    LOADING: 'cui-loading',\r\n    BASIC: 'cui-basic',\r\n    OUTLINED: 'cui-outlined',\r\n    ROUNDED: 'cui-rounded',\r\n    READONLY: 'cui-readonly',\r\n    SELECTED: 'cui-selected',\r\n    INTERACTIVE: 'cui-interactive',\r\n    ELEVATION: 'cui-elevation',\r\n    HIDDEN: 'cui-hidden',\r\n    // Headings\r\n    H1: 'cui-h1',\r\n    H2: 'cui-h2',\r\n    H3: 'cui-h3',\r\n    H4: 'cui-h4',\r\n    H5: 'cui-h5',\r\n    H6: 'cui-h6',\r\n    // Utility\r\n    ALIGN: 'cui-align',\r\n    ALIGN_RIGHT: 'cui-align-right',\r\n    ALIGN_LEFT: 'cui-align-left',\r\n    FLUID: 'cui-fluid',\r\n    TEXT_MUTED: 'cui-text-muted',\r\n    TEXT_DISABLED: 'cui-text-disabled',\r\n    FOCUS_DISABLED: 'cui-focus-disabled',\r\n    COMPACT: 'cui-compact',\r\n    // Component\r\n    BREADCRUMB: 'cui-breadcrumb',\r\n    BREADCRUMB_ITEM: 'cui-breadcrumb-item',\r\n    BREADCRUMB_SEPERATOR: 'cui-breadcrumb-seperator',\r\n    BUTTON: 'cui-button',\r\n    BUTTON_LABEL: 'cui-button-label',\r\n    BUTTON_SUBLABEL: 'cui-button-sublabel',\r\n    BUTTON_GROUP: 'cui-button-group',\r\n    BUTTON_ICON: 'cui-button-icon',\r\n    CARD: 'cui-card',\r\n    CARD_INTERACTIVE: 'cui-card-interactive',\r\n    CALLOUT: 'cui-callout',\r\n    CALLOUT_HEADER: 'cui-callout-header',\r\n    CALLOUT_CONTENT: 'cui-callout-content',\r\n    CALLOUT_ICON: 'cui-callout-icon',\r\n    CALLOUT_DISMISS_ICON: 'cui-callout-dismiss',\r\n    CHECKBOX: 'cui-checkbox',\r\n    COLLAPSE: 'cui-collapse',\r\n    COLLAPSE_BODY: 'cui-collapse-body',\r\n    CONTEXT_MENU: 'cui-context-menu',\r\n    CONTROL: 'cui-control',\r\n    CONTROL_INDICATOR: 'cui-control-indicator',\r\n    CONTROL_GROUP: 'cui-control-group',\r\n    CUSTOM_SELECT: 'cui-custom-select',\r\n    CUSTOM_SELECT_TRIGGER: 'cui-custom-select-trigger',\r\n    CUSTOM_SELECT_INPUT: 'cui-custom-select-input',\r\n    CUSTOM_SELECT_HIDDEN: 'cui-custom-select-hidden',\r\n    DIALOG: 'cui-dialog',\r\n    DIALOG_CLOSE_BUTTON: 'cui-dialog-close-button',\r\n    DIALOG_CONTENT: 'cui-dialog-content',\r\n    DIALOG_HEADER: 'cui-dialog-header',\r\n    DIALOG_BODY: 'cui-dialog-body',\r\n    DIALOG_FOOTER: 'cui-dialog-footer',\r\n    DRAWER: 'cui-drawer',\r\n    DRAWER_CONTENT: 'cui-drawer-content',\r\n    EMPTY_STATE: 'cui-empty-state',\r\n    EMPTY_STATE_ICON: 'cui-empty-state-icon',\r\n    EMPTY_STATE_CONTENT: 'cui-empty-state-content',\r\n    EMPTY_STATE_HEADER: 'cui-empty-state-header',\r\n    EMPTY_STATE_FILL: 'cui-empty-state-fill',\r\n    FORM: 'cui-form',\r\n    FORM_GROUP: 'cui-form-group',\r\n    FORM_LABEL: 'cui-form-label',\r\n    GRID: 'cui-grid',\r\n    COL: 'cui-col',\r\n    INPUT_FILE: 'cui-input-file',\r\n    INPUT_FILE_CONTENT: 'cui-input-file-content',\r\n    INPUT_FILE_TEXT: 'cui-input-file-text',\r\n    INPUT_FILE_BUTTON: 'cui-input-file-button',\r\n    ICON: 'cui-icon',\r\n    ICON_ACTION: 'cui-icon-action',\r\n    INPUT: 'cui-input',\r\n    INPUT_GROUP: 'cui-input-group',\r\n    INPUT_POPOVER: 'cui-input-popover',\r\n    INPUT_POPOVER_CONTENT: 'cui-input-popover-content',\r\n    INPUT_SELECT: 'cui-input-select',\r\n    LIST: 'cui-list',\r\n    LIST_ITEM: 'cui-list-item',\r\n    LIST_ITEM_LABEL: 'cui-list-item-label',\r\n    LIST_ITEM_CONTENT_LEFT: 'cui-list-item-content-left',\r\n    LIST_ITEM_CONTENT_RIGHT: 'cui-list-item-content-right',\r\n    MENU: 'cui-menu',\r\n    MENU_ITEM: 'cui-menu-item',\r\n    MENU_DIVIDER: 'cui-menu-divider',\r\n    MENU_HEADING: 'cui-menu-heading',\r\n    OVERLAY: 'cui-overlay',\r\n    OVERLAY_CONTENT: 'cui-overlay-content',\r\n    OVERLAY_BACKDROP: 'cui-overlay-backdrop',\r\n    OVERLAY_OPEN: 'cui-overlay-open',\r\n    OVERLAY_INLINE: 'cui-overlay-inline',\r\n    OVERLAY_SCROLL_CONTAINER: 'cui-overlay-scroll-container',\r\n    POPOVER: 'cui-popover',\r\n    POPOVER_OPEN: 'cui-popover-open',\r\n    POPOVER_CONTENT: 'cui-popover-content',\r\n    POPOVER_ARROW: 'cui-popover-arrow',\r\n    POPOVER_TRIGGER_ACTIVE: 'cui-popover-trigger-active',\r\n    POPOVER_BACKDROP: 'cui-popover-backdrop',\r\n    POPOVER_DISSMISS: 'cui-popover-dismiss',\r\n    POPOVER_MENU: 'cui-popover-menu',\r\n    PORTAL: 'cui-portal',\r\n    QUERY_LIST: 'cui-query-list',\r\n    QUERY_LIST_CHECKMARK: 'cui-query-list-checkmark',\r\n    QUERY_LIST_EMPTY: 'cui-query-list-empty',\r\n    QUERY_LIST_INITIAL: 'cui-query-list-initial',\r\n    QUERY_LIST_MESSAGE: 'cui-query-list-message',\r\n    RADIO: 'cui-radio',\r\n    RADIO_GROUP: 'cui-radio-group',\r\n    SELECT: 'cui-select',\r\n    SELECT_ARROW: 'cui-select-arrow',\r\n    SELECT_LIST: 'cui-select-list',\r\n    SPINNER: 'cui-spinner',\r\n    SPINNER_CONTENT: 'cui-spinner-content',\r\n    SPINNER_ICON: 'cui-spinner-icon',\r\n    SPINNER_MESSAGE: 'cui-spinner-message',\r\n    SPINNER_FILL: 'cui-spinner-fill',\r\n    SPINNER_ACTIVE: 'cui-spinner-active',\r\n    SPINNER_BG: 'cui-spinner-bg',\r\n    SWITCH: 'cui-switch',\r\n    TABLE: 'cui-table',\r\n    TABLE_BORDERED: 'cui-table-bordered',\r\n    TABLE_STRIPED: 'cui-table-striped',\r\n    TABLE_INTERACTIVE: 'cui-table-interactive',\r\n    TAG: 'cui-tag',\r\n    TAG_REMOVABLE: 'cui-tag-removable',\r\n    TAG_INPUT: 'cui-tag-input',\r\n    TAG_INPUT_VALUES: 'cui-tag-input-values',\r\n    TABS: 'cui-tabs',\r\n    TABS_BORDERED: 'cui-tabs-bordered',\r\n    TABS_ITEM: 'cui-tabs-item',\r\n    TEXT_AREA: 'cui-text-area',\r\n    TOAST: 'cui-toast',\r\n    TOAST_MESSAGE: 'cui-toast-message',\r\n    TOASTER: 'cui-toaster',\r\n    TOASTER_INLINE: 'cui-toaster-inline',\r\n    TOOLTIP: 'cui-tooltip',\r\n    TREE: 'cui-tree',\r\n    TREE_NODE: 'cui-tree-node',\r\n    TREE_NODE_LIST: 'cui-tree-node-list',\r\n    TREE_NODE_CONTENT: 'cui-tree-node-content',\r\n    TREE_NODE_CARET: 'cui-tree-node-caret',\r\n    TREE_NODE_CARET_OPEN: 'cui-tree-node-caret-open',\r\n    TREE_NODE_CARET_CLOSED: 'cui-tree-node-caret-closed',\r\n    TREE_NODE_CARET_NONE: 'cui-tree-node-caret-none',\r\n    TREE_NODE_SELECTED: 'cui-tree-node-selected',\r\n    TREE_NODE_EXPANDED: 'cui-tree-node-expanded',\r\n    TREE_NODE_LABEL: 'cui-tree-node-label',\r\n    TREE_NODE_CONTENT_RIGHT: 'cui-tree-node-content-right',\r\n    TREE_NODE_CONTENT_LEFT: 'cui-tree-node-content-left'\r\n};\r\n","export var Keys = {\r\n    TAB: 9,\r\n    ENTER: 13,\r\n    SHIFT: 16,\r\n    ESCAPE: 27,\r\n    SPACE: 32,\r\n    ARROW_LEFT: 37,\r\n    ARROW_UP: 38,\r\n    ARROW_RIGHT: 39,\r\n    ARROW_DOWN: 40\r\n};\r\n","import { Classes } from '.';\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\nexport function safeCall(func) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    if (isFunction(func)) {\r\n        return func.apply(void 0, args);\r\n    }\r\n}\r\nexport function getClosest(el, selector) {\r\n    if (el.matches(selector))\r\n        return el;\r\n    if (!Element.prototype.matches) {\r\n        Element.prototype.matches =\r\n            Element.prototype.msMatchesSelector ||\r\n                Element.prototype.webkitMatchesSelector ||\r\n                /* tslint:disable */\r\n                function (s) {\r\n                    var matches = (this.document || this.ownerDocument).querySelectorAll(s);\r\n                    var i = matches.length;\r\n                    while (--i >= 0 && matches.item(i) !== this) { }\r\n                    return i > -1;\r\n                };\r\n        /* tslint:enable */\r\n    }\r\n    for (; el && el !== document; el = el.parentNode) {\r\n        if (el.matches(selector))\r\n            return el;\r\n    }\r\n    return null;\r\n}\r\nexport function getScrollbarWidth() {\r\n    var el = document.createElement('div');\r\n    el.style.width = '100px';\r\n    el.style.height = '100px';\r\n    el.style.overflow = 'scroll';\r\n    el.style.position = 'absolute';\r\n    el.style.top = '-9999px';\r\n    document.body.appendChild(el);\r\n    var scrollbarWidth = el.offsetWidth - el.clientWidth;\r\n    document.body.removeChild(el);\r\n    return scrollbarWidth;\r\n}\r\nexport function hasScrollbar(el) {\r\n    return el.scrollHeight > window.innerHeight;\r\n}\r\nexport function elementIsOrContains(element, testElement) {\r\n    return element === testElement || element.contains(testElement);\r\n}\r\nexport function normalizeStyle(style) {\r\n    if (typeof style === 'string') {\r\n        var result = {};\r\n        var attributes = style.replace(/\\s/g, '').split(';');\r\n        for (var i = 0; i < attributes.length; i++) {\r\n            var entry = attributes[i].split(':');\r\n            result[entry.splice(0, 1)[0]] = entry.join(':');\r\n        }\r\n        return result;\r\n    }\r\n    else\r\n        return style;\r\n}\r\nexport function updateElementGroupPadding(containerEl, contentLeft, contentRight) {\r\n    if (!containerEl)\r\n        return;\r\n    var containerPadding = Math.floor(containerEl.clientHeight / 1.6);\r\n    if (contentLeft) {\r\n        var contentLeftEl = contentLeft.dom;\r\n        containerEl.style.paddingLeft = shouldAddPadding(contentLeftEl)\r\n            ? contentLeftEl.clientWidth + containerPadding + \"px\"\r\n            : '';\r\n    }\r\n    else\r\n        containerEl.style.paddingLeft = '';\r\n    if (contentRight) {\r\n        var contentRightEl = contentRight.dom;\r\n        containerEl.style.paddingRight = shouldAddPadding(contentRightEl)\r\n            ? contentRightEl.clientWidth + containerPadding + \"px\"\r\n            : '';\r\n    }\r\n    else\r\n        containerEl.style.paddingRight = '';\r\n}\r\nfunction shouldAddPadding(element) {\r\n    return element &&\r\n        !element.classList.contains(Classes.ICON) &&\r\n        !element.classList.contains(Classes.SPINNER) &&\r\n        !element.classList.contains(Classes.BUTTON_ICON);\r\n}\r\nexport function isNullOrEmpty(item) {\r\n    return item == null || item === '' || item === false;\r\n}\r\n","/* tslint:disable */\r\nexport var ACTIVITY = 'activity';\r\nexport var AIRPLAY = 'airplay';\r\nexport var ALERT_CIRCLE = 'alert-circle';\r\nexport var ALERT_OCTAGON = 'alert-octagon';\r\nexport var ALERT_TRIANGLE = 'alert-triangle';\r\nexport var ALIGN_CENTER = 'align-center';\r\nexport var ALIGN_JUSTIFY = 'align-justify';\r\nexport var ALIGN_LEFT = 'align-left';\r\nexport var ALIGN_RIGHT = 'align-right';\r\nexport var ANCHOR = 'anchor';\r\nexport var APERTURE = 'aperture';\r\nexport var ARCHIVE = 'archive';\r\nexport var ARROW_DOWN_CIRCLE = 'arrow-down-circle';\r\nexport var ARROW_DOWN_LEFT = 'arrow-down-left';\r\nexport var ARROW_DOWN_RIGHT = 'arrow-down-right';\r\nexport var ARROW_DOWN = 'arrow-down';\r\nexport var ARROW_LEFT_CIRCLE = 'arrow-left-circle';\r\nexport var ARROW_LEFT = 'arrow-left';\r\nexport var ARROW_RIGHT_CIRCLE = 'arrow-right-circle';\r\nexport var ARROW_RIGHT = 'arrow-right';\r\nexport var ARROW_UP_CIRCLE = 'arrow-up-circle';\r\nexport var ARROW_UP_LEFT = 'arrow-up-left';\r\nexport var ARROW_UP_RIGHT = 'arrow-up-right';\r\nexport var ARROW_UP = 'arrow-up';\r\nexport var AT_SIGN = 'at-sign';\r\nexport var AWARD = 'award';\r\nexport var BAR_CHART_2 = 'bar-chart-2';\r\nexport var BAR_CHART = 'bar-chart';\r\nexport var BATTERY_CHARGING = 'battery-charging';\r\nexport var BATTERY = 'battery';\r\nexport var BELL_OFF = 'bell-off';\r\nexport var BELL = 'bell';\r\nexport var BLUETOOTH = 'bluetooth';\r\nexport var BOLD = 'bold';\r\nexport var BOOK_OPEN = 'book-open';\r\nexport var BOOK = 'book';\r\nexport var BOOKMARK = 'bookmark';\r\nexport var BOX = 'box';\r\nexport var BRIEFCASE = 'briefcase';\r\nexport var CALENDAR = 'calendar';\r\nexport var CAMERA_OFF = 'camera-off';\r\nexport var CAMERA = 'camera';\r\nexport var CAST = 'cast';\r\nexport var CHECK_CIRCLE = 'check-circle';\r\nexport var CHECK_SQUARE = 'check-square';\r\nexport var CHECK = 'check';\r\nexport var CHEVRON_DOWN = 'chevron-down';\r\nexport var CHEVRON_LEFT = 'chevron-left';\r\nexport var CHEVRON_RIGHT = 'chevron-right';\r\nexport var CHEVRON_UP = 'chevron-up';\r\nexport var CHEVRONS_DOWN = 'chevrons-down';\r\nexport var CHEVRONS_LEFT = 'chevrons-left';\r\nexport var CHEVRONS_RIGHT = 'chevrons-right';\r\nexport var CHEVRONS_UP = 'chevrons-up';\r\nexport var CHROME = 'chrome';\r\nexport var CIRCLE = 'circle';\r\nexport var CLIPBOARD = 'clipboard';\r\nexport var CLOCK = 'clock';\r\nexport var CLOUD_DRIZZLE = 'cloud-drizzle';\r\nexport var CLOUD_LIGHTNING = 'cloud-lightning';\r\nexport var CLOUD_OFF = 'cloud-off';\r\nexport var CLOUD_RAIN = 'cloud-rain';\r\nexport var CLOUD_SNOW = 'cloud-snow';\r\nexport var CLOUD = 'cloud';\r\nexport var CODE = 'code';\r\nexport var CODEPEN = 'codepen';\r\nexport var CODESANDBOX = 'codesandbox';\r\nexport var COFFEE = 'coffee';\r\nexport var COLUMNS = 'columns';\r\nexport var COMMAND = 'command';\r\nexport var COMPASS = 'compass';\r\nexport var COPY = 'copy';\r\nexport var CORNER_DOWN_LEFT = 'corner-down-left';\r\nexport var CORNER_DOWN_RIGHT = 'corner-down-right';\r\nexport var CORNER_LEFT_DOWN = 'corner-left-down';\r\nexport var CORNER_LEFT_UP = 'corner-left-up';\r\nexport var CORNER_RIGHT_DOWN = 'corner-right-down';\r\nexport var CORNER_RIGHT_UP = 'corner-right-up';\r\nexport var CORNER_UP_LEFT = 'corner-up-left';\r\nexport var CORNER_UP_RIGHT = 'corner-up-right';\r\nexport var CPU = 'cpu';\r\nexport var CREDIT_CARD = 'credit-card';\r\nexport var CROP = 'crop';\r\nexport var CROSSHAIR = 'crosshair';\r\nexport var DATABASE = 'database';\r\nexport var DELETE = 'delete';\r\nexport var DISC = 'disc';\r\nexport var DIVIDE_CIRCLE = 'divide-circle';\r\nexport var DIVIDE_SQUARE = 'divide-square';\r\nexport var DIVIDE = 'divide';\r\nexport var DOLLAR_SIGN = 'dollar-sign';\r\nexport var DOWNLOAD_CLOUD = 'download-cloud';\r\nexport var DOWNLOAD = 'download';\r\nexport var DRIBBBLE = 'dribbble';\r\nexport var DROPLET = 'droplet';\r\nexport var EDIT_2 = 'edit-2';\r\nexport var EDIT_3 = 'edit-3';\r\nexport var EDIT = 'edit';\r\nexport var EXTERNAL_LINK = 'external-link';\r\nexport var EYE_OFF = 'eye-off';\r\nexport var EYE = 'eye';\r\nexport var FACEBOOK = 'facebook';\r\nexport var FAST_FORWARD = 'fast-forward';\r\nexport var FEATHER = 'feather';\r\nexport var FIGMA = 'figma';\r\nexport var FILE_MINUS = 'file-minus';\r\nexport var FILE_PLUS = 'file-plus';\r\nexport var FILE_TEXT = 'file-text';\r\nexport var FILE = 'file';\r\nexport var FILM = 'film';\r\nexport var FILTER = 'filter';\r\nexport var FLAG = 'flag';\r\nexport var FOLDER_MINUS = 'folder-minus';\r\nexport var FOLDER_PLUS = 'folder-plus';\r\nexport var FOLDER = 'folder';\r\nexport var FRAMER = 'framer';\r\nexport var FROWN = 'frown';\r\nexport var GIFT = 'gift';\r\nexport var GIT_BRANCH = 'git-branch';\r\nexport var GIT_COMMIT = 'git-commit';\r\nexport var GIT_MERGE = 'git-merge';\r\nexport var GIT_PULL_REQUEST = 'git-pull-request';\r\nexport var GITHUB = 'github';\r\nexport var GITLAB = 'gitlab';\r\nexport var GLOBE = 'globe';\r\nexport var GRID = 'grid';\r\nexport var HARD_DRIVE = 'hard-drive';\r\nexport var HASH = 'hash';\r\nexport var HEADPHONES = 'headphones';\r\nexport var HEART = 'heart';\r\nexport var HELP_CIRCLE = 'help-circle';\r\nexport var HEXAGON = 'hexagon';\r\nexport var HOME = 'home';\r\nexport var IMAGE = 'image';\r\nexport var INBOX = 'inbox';\r\nexport var INFO = 'info';\r\nexport var INSTAGRAM = 'instagram';\r\nexport var ITALIC = 'italic';\r\nexport var KEY = 'key';\r\nexport var LAYERS = 'layers';\r\nexport var LAYOUT = 'layout';\r\nexport var LIFE_BUOY = 'life-buoy';\r\nexport var LINK_2 = 'link-2';\r\nexport var LINK = 'link';\r\nexport var LINKEDIN = 'linkedin';\r\nexport var LIST = 'list';\r\nexport var LOADER = 'loader';\r\nexport var LOCK = 'lock';\r\nexport var LOG_IN = 'log-in';\r\nexport var LOG_OUT = 'log-out';\r\nexport var MAIL = 'mail';\r\nexport var MAP_PIN = 'map-pin';\r\nexport var MAP = 'map';\r\nexport var MAXIMIZE_2 = 'maximize-2';\r\nexport var MAXIMIZE = 'maximize';\r\nexport var MEH = 'meh';\r\nexport var MENU = 'menu';\r\nexport var MESSAGE_CIRCLE = 'message-circle';\r\nexport var MESSAGE_SQUARE = 'message-square';\r\nexport var MIC_OFF = 'mic-off';\r\nexport var MIC = 'mic';\r\nexport var MINIMIZE_2 = 'minimize-2';\r\nexport var MINIMIZE = 'minimize';\r\nexport var MINUS_CIRCLE = 'minus-circle';\r\nexport var MINUS_SQUARE = 'minus-square';\r\nexport var MINUS = 'minus';\r\nexport var MONITOR = 'monitor';\r\nexport var MOON = 'moon';\r\nexport var MORE_HORIZONTAL = 'more-horizontal';\r\nexport var MORE_VERTICAL = 'more-vertical';\r\nexport var MOUSE_POINTER = 'mouse-pointer';\r\nexport var MOVE = 'move';\r\nexport var MUSIC = 'music';\r\nexport var NAVIGATION_2 = 'navigation-2';\r\nexport var NAVIGATION = 'navigation';\r\nexport var OCTAGON = 'octagon';\r\nexport var PACKAGE = 'package';\r\nexport var PAPERCLIP = 'paperclip';\r\nexport var PAUSE_CIRCLE = 'pause-circle';\r\nexport var PAUSE = 'pause';\r\nexport var PEN_TOOL = 'pen-tool';\r\nexport var PERCENT = 'percent';\r\nexport var PHONE_CALL = 'phone-call';\r\nexport var PHONE_FORWARDED = 'phone-forwarded';\r\nexport var PHONE_INCOMING = 'phone-incoming';\r\nexport var PHONE_MISSED = 'phone-missed';\r\nexport var PHONE_OFF = 'phone-off';\r\nexport var PHONE_OUTGOING = 'phone-outgoing';\r\nexport var PHONE = 'phone';\r\nexport var PIE_CHART = 'pie-chart';\r\nexport var PLAY_CIRCLE = 'play-circle';\r\nexport var PLAY = 'play';\r\nexport var PLUS_CIRCLE = 'plus-circle';\r\nexport var PLUS_SQUARE = 'plus-square';\r\nexport var PLUS = 'plus';\r\nexport var POCKET = 'pocket';\r\nexport var POWER = 'power';\r\nexport var PRINTER = 'printer';\r\nexport var RADIO = 'radio';\r\nexport var REFRESH_CCW = 'refresh-ccw';\r\nexport var REFRESH_CW = 'refresh-cw';\r\nexport var REPEAT = 'repeat';\r\nexport var REWIND = 'rewind';\r\nexport var ROTATE_CCW = 'rotate-ccw';\r\nexport var ROTATE_CW = 'rotate-cw';\r\nexport var RSS = 'rss';\r\nexport var SAVE = 'save';\r\nexport var SCISSORS = 'scissors';\r\nexport var SEARCH = 'search';\r\nexport var SEND = 'send';\r\nexport var SERVER = 'server';\r\nexport var SETTINGS = 'settings';\r\nexport var SHARE_2 = 'share-2';\r\nexport var SHARE = 'share';\r\nexport var SHIELD_OFF = 'shield-off';\r\nexport var SHIELD = 'shield';\r\nexport var SHOPPING_BAG = 'shopping-bag';\r\nexport var SHOPPING_CART = 'shopping-cart';\r\nexport var SHUFFLE = 'shuffle';\r\nexport var SIDEBAR = 'sidebar';\r\nexport var SKIP_BACK = 'skip-back';\r\nexport var SKIP_FORWARD = 'skip-forward';\r\nexport var SLACK = 'slack';\r\nexport var SLASH = 'slash';\r\nexport var SLIDERS = 'sliders';\r\nexport var SMARTPHONE = 'smartphone';\r\nexport var SMILE = 'smile';\r\nexport var SPEAKER = 'speaker';\r\nexport var SQUARE = 'square';\r\nexport var STAR = 'star';\r\nexport var STOP_CIRCLE = 'stop-circle';\r\nexport var SUN = 'sun';\r\nexport var SUNRISE = 'sunrise';\r\nexport var SUNSET = 'sunset';\r\nexport var TABLET = 'tablet';\r\nexport var TAG = 'tag';\r\nexport var TARGET = 'target';\r\nexport var TERMINAL = 'terminal';\r\nexport var THERMOMETER = 'thermometer';\r\nexport var THUMBS_DOWN = 'thumbs-down';\r\nexport var THUMBS_UP = 'thumbs-up';\r\nexport var TOGGLE_LEFT = 'toggle-left';\r\nexport var TOGGLE_RIGHT = 'toggle-right';\r\nexport var TOOL = 'tool';\r\nexport var TRASH_2 = 'trash-2';\r\nexport var TRASH = 'trash';\r\nexport var TRELLO = 'trello';\r\nexport var TRENDING_DOWN = 'trending-down';\r\nexport var TRENDING_UP = 'trending-up';\r\nexport var TRIANGLE = 'triangle';\r\nexport var TRUCK = 'truck';\r\nexport var TV = 'tv';\r\nexport var TWITCH = 'twitch';\r\nexport var TWITTER = 'twitter';\r\nexport var TYPE = 'type';\r\nexport var UMBRELLA = 'umbrella';\r\nexport var UNDERLINE = 'underline';\r\nexport var UNLOCK = 'unlock';\r\nexport var UPLOAD_CLOUD = 'upload-cloud';\r\nexport var UPLOAD = 'upload';\r\nexport var USER_CHECK = 'user-check';\r\nexport var USER_MINUS = 'user-minus';\r\nexport var USER_PLUS = 'user-plus';\r\nexport var USER_X = 'user-x';\r\nexport var USER = 'user';\r\nexport var USERS = 'users';\r\nexport var VIDEO_OFF = 'video-off';\r\nexport var VIDEO = 'video';\r\nexport var VOICEMAIL = 'voicemail';\r\nexport var VOLUME_1 = 'volume-1';\r\nexport var VOLUME_2 = 'volume-2';\r\nexport var VOLUME_X = 'volume-x';\r\nexport var VOLUME = 'volume';\r\nexport var WATCH = 'watch';\r\nexport var WIFI_OFF = 'wifi-off';\r\nexport var WIFI = 'wifi';\r\nexport var WIND = 'wind';\r\nexport var X_CIRCLE = 'x-circle';\r\nexport var X_OCTAGON = 'x-octagon';\r\nexport var X_SQUARE = 'x-square';\r\nexport var X = 'x';\r\nexport var YOUTUBE = 'youtube';\r\nexport var ZAP_OFF = 'zap-off';\r\nexport var ZAP = 'zap';\r\nexport var ZOOM_IN = 'zoom-in';\r\nexport var ZOOM_OUT = 'zoom-out';\r\n","/* tslint:disable */\r\nexport default {\r\n    'activity': '<polyline points=\"22 12 18 12 15 21 9 3 6 12 2 12\"></polyline>',\r\n    'airplay': '<path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path><polygon points=\"12 15 17 21 7 21 12 15\"></polygon>',\r\n    'alert-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>',\r\n    'alert-octagon': '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>',\r\n    'alert-triangle': '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>',\r\n    'align-center': '<line x1=\"18\" y1=\"10\" x2=\"6\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"18\" y1=\"18\" x2=\"6\" y2=\"18\"></line>',\r\n    'align-justify': '<line x1=\"21\" y1=\"10\" x2=\"3\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"21\" y1=\"18\" x2=\"3\" y2=\"18\"></line>',\r\n    'align-left': '<line x1=\"17\" y1=\"10\" x2=\"3\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"17\" y1=\"18\" x2=\"3\" y2=\"18\"></line>',\r\n    'align-right': '<line x1=\"21\" y1=\"10\" x2=\"7\" y2=\"10\"></line><line x1=\"21\" y1=\"6\" x2=\"3\" y2=\"6\"></line><line x1=\"21\" y1=\"14\" x2=\"3\" y2=\"14\"></line><line x1=\"21\" y1=\"18\" x2=\"7\" y2=\"18\"></line>',\r\n    'anchor': '<circle cx=\"12\" cy=\"5\" r=\"3\"></circle><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"8\"></line><path d=\"M5 12H2a10 10 0 0 0 20 0h-3\"></path>',\r\n    'aperture': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"14.31\" y1=\"8\" x2=\"20.05\" y2=\"17.94\"></line><line x1=\"9.69\" y1=\"8\" x2=\"21.17\" y2=\"8\"></line><line x1=\"7.38\" y1=\"12\" x2=\"13.12\" y2=\"2.06\"></line><line x1=\"9.69\" y1=\"16\" x2=\"3.95\" y2=\"6.06\"></line><line x1=\"14.31\" y1=\"16\" x2=\"2.83\" y2=\"16\"></line><line x1=\"16.62\" y1=\"12\" x2=\"10.88\" y2=\"21.94\"></line>',\r\n    'archive': '<polyline points=\"21 8 21 21 3 21 3 8\"></polyline><rect x=\"1\" y=\"3\" width=\"22\" height=\"5\"></rect><line x1=\"10\" y1=\"12\" x2=\"14\" y2=\"12\"></line>',\r\n    'arrow-down-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"8 12 12 16 16 12\"></polyline><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>',\r\n    'arrow-down-left': '<line x1=\"17\" y1=\"7\" x2=\"7\" y2=\"17\"></line><polyline points=\"17 17 7 17 7 7\"></polyline>',\r\n    'arrow-down-right': '<line x1=\"7\" y1=\"7\" x2=\"17\" y2=\"17\"></line><polyline points=\"17 7 17 17 7 17\"></polyline>',\r\n    'arrow-down': '<line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><polyline points=\"19 12 12 19 5 12\"></polyline>',\r\n    'arrow-left-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 8 8 12 12 16\"></polyline><line x1=\"16\" y1=\"12\" x2=\"8\" y2=\"12\"></line>',\r\n    'arrow-left': '<line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line><polyline points=\"12 19 5 12 12 5\"></polyline>',\r\n    'arrow-right-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 16 16 12 12 8\"></polyline><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'arrow-right': '<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline>',\r\n    'arrow-up-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"16 12 12 8 8 12\"></polyline><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"8\"></line>',\r\n    'arrow-up-left': '<line x1=\"17\" y1=\"17\" x2=\"7\" y2=\"7\"></line><polyline points=\"7 17 7 7 17 7\"></polyline>',\r\n    'arrow-up-right': '<line x1=\"7\" y1=\"17\" x2=\"17\" y2=\"7\"></line><polyline points=\"7 7 17 7 17 17\"></polyline>',\r\n    'arrow-up': '<line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line><polyline points=\"5 12 12 5 19 12\"></polyline>',\r\n    'at-sign': '<circle cx=\"12\" cy=\"12\" r=\"4\"></circle><path d=\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94\"></path>',\r\n    'award': '<circle cx=\"12\" cy=\"8\" r=\"7\"></circle><polyline points=\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"></polyline>',\r\n    'bar-chart-2': '<line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>',\r\n    'bar-chart': '<line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"10\"></line><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"16\"></line>',\r\n    'battery-charging': '<path d=\"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19\"></path><line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"11\"></line><polyline points=\"11 6 7 12 13 12 9 18\"></polyline>',\r\n    'battery': '<rect x=\"1\" y=\"6\" width=\"18\" height=\"12\" rx=\"2\" ry=\"2\"></rect><line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"11\"></line>',\r\n    'bell-off': '<path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path><path d=\"M18.63 13A17.89 17.89 0 0 1 18 8\"></path><path d=\"M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14\"></path><path d=\"M18 8a6 6 0 0 0-9.33-5\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'bell': '<path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path><path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>',\r\n    'bluetooth': '<polyline points=\"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5\"></polyline>',\r\n    'bold': '<path d=\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path><path d=\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>',\r\n    'book-open': '<path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path><path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>',\r\n    'book': '<path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path><path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path>',\r\n    'bookmark': '<path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>',\r\n    'box': '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\r\n    'briefcase': '<rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect><path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>',\r\n    'calendar': '<rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line><line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>',\r\n    'camera-off': '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56\"></path>',\r\n    'camera': '<path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle>',\r\n    'cast': '<path d=\"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\"></path><line x1=\"2\" y1=\"20\" x2=\"2.01\" y2=\"20\"></line>',\r\n    'check-circle': '<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline>',\r\n    'check-square': '<polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path>',\r\n    'check': '<polyline points=\"20 6 9 17 4 12\"></polyline>',\r\n    'chevron-down': '<polyline points=\"6 9 12 15 18 9\"></polyline>',\r\n    'chevron-left': '<polyline points=\"15 18 9 12 15 6\"></polyline>',\r\n    'chevron-right': '<polyline points=\"9 18 15 12 9 6\"></polyline>',\r\n    'chevron-up': '<polyline points=\"18 15 12 9 6 15\"></polyline>',\r\n    'chevrons-down': '<polyline points=\"7 13 12 18 17 13\"></polyline><polyline points=\"7 6 12 11 17 6\"></polyline>',\r\n    'chevrons-left': '<polyline points=\"11 17 6 12 11 7\"></polyline><polyline points=\"18 17 13 12 18 7\"></polyline>',\r\n    'chevrons-right': '<polyline points=\"13 17 18 12 13 7\"></polyline><polyline points=\"6 17 11 12 6 7\"></polyline>',\r\n    'chevrons-up': '<polyline points=\"17 11 12 6 7 11\"></polyline><polyline points=\"17 18 12 13 7 18\"></polyline>',\r\n    'chrome': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"21.17\" y1=\"8\" x2=\"12\" y2=\"8\"></line><line x1=\"3.95\" y1=\"6.06\" x2=\"8.54\" y2=\"14\"></line><line x1=\"10.88\" y1=\"21.94\" x2=\"15.46\" y2=\"14\"></line>',\r\n    'circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle>',\r\n    'clipboard': '<path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect>',\r\n    'clock': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline>',\r\n    'cloud-drizzle': '<line x1=\"8\" y1=\"19\" x2=\"8\" y2=\"21\"></line><line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"15\"></line><line x1=\"16\" y1=\"19\" x2=\"16\" y2=\"21\"></line><line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"15\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"17\"></line><path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>',\r\n    'cloud-lightning': '<path d=\"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9\"></path><polyline points=\"13 11 9 17 15 17 11 23\"></polyline>',\r\n    'cloud-off': '<path d=\"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'cloud-rain': '<line x1=\"16\" y1=\"13\" x2=\"16\" y2=\"21\"></line><line x1=\"8\" y1=\"13\" x2=\"8\" y2=\"21\"></line><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"23\"></line><path d=\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"></path>',\r\n    'cloud-snow': '<path d=\"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25\"></path><line x1=\"8\" y1=\"16\" x2=\"8.01\" y2=\"16\"></line><line x1=\"8\" y1=\"20\" x2=\"8.01\" y2=\"20\"></line><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line><line x1=\"12\" y1=\"22\" x2=\"12.01\" y2=\"22\"></line><line x1=\"16\" y1=\"16\" x2=\"16.01\" y2=\"16\"></line><line x1=\"16\" y1=\"20\" x2=\"16.01\" y2=\"20\"></line>',\r\n    'cloud': '<path d=\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"></path>',\r\n    'code': '<polyline points=\"16 18 22 12 16 6\"></polyline><polyline points=\"8 6 2 12 8 18\"></polyline>',\r\n    'codepen': '<polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"15.5\"></line><polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline><polyline points=\"2 15.5 12 8.5 22 15.5\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"8.5\"></line>',\r\n    'codesandbox': '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"7.5 4.21 12 6.81 16.5 4.21\"></polyline><polyline points=\"7.5 19.79 7.5 14.6 3 12\"></polyline><polyline points=\"21 12 16.5 14.6 16.5 19.79\"></polyline><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\r\n    'coffee': '<path d=\"M18 8h1a4 4 0 0 1 0 8h-1\"></path><path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"></path><line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\"></line><line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\"></line><line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\"></line>',\r\n    'columns': '<path d=\"M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18\"></path>',\r\n    'command': '<path d=\"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"></path>',\r\n    'compass': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polygon points=\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"></polygon>',\r\n    'copy': '<rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>',\r\n    'corner-down-left': '<polyline points=\"9 10 4 15 9 20\"></polyline><path d=\"M20 4v7a4 4 0 0 1-4 4H4\"></path>',\r\n    'corner-down-right': '<polyline points=\"15 10 20 15 15 20\"></polyline><path d=\"M4 4v7a4 4 0 0 0 4 4h12\"></path>',\r\n    'corner-left-down': '<polyline points=\"14 15 9 20 4 15\"></polyline><path d=\"M20 4h-7a4 4 0 0 0-4 4v12\"></path>',\r\n    'corner-left-up': '<polyline points=\"14 9 9 4 4 9\"></polyline><path d=\"M20 20h-7a4 4 0 0 1-4-4V4\"></path>',\r\n    'corner-right-down': '<polyline points=\"10 15 15 20 20 15\"></polyline><path d=\"M4 4h7a4 4 0 0 1 4 4v12\"></path>',\r\n    'corner-right-up': '<polyline points=\"10 9 15 4 20 9\"></polyline><path d=\"M4 20h7a4 4 0 0 0 4-4V4\"></path>',\r\n    'corner-up-left': '<polyline points=\"9 14 4 9 9 4\"></polyline><path d=\"M20 20v-7a4 4 0 0 0-4-4H4\"></path>',\r\n    'corner-up-right': '<polyline points=\"15 14 20 9 15 4\"></polyline><path d=\"M4 20v-7a4 4 0 0 1 4-4h12\"></path>',\r\n    'cpu': '<rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" ry=\"2\"></rect><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect><line x1=\"9\" y1=\"1\" x2=\"9\" y2=\"4\"></line><line x1=\"15\" y1=\"1\" x2=\"15\" y2=\"4\"></line><line x1=\"9\" y1=\"20\" x2=\"9\" y2=\"23\"></line><line x1=\"15\" y1=\"20\" x2=\"15\" y2=\"23\"></line><line x1=\"20\" y1=\"9\" x2=\"23\" y2=\"9\"></line><line x1=\"20\" y1=\"14\" x2=\"23\" y2=\"14\"></line><line x1=\"1\" y1=\"9\" x2=\"4\" y2=\"9\"></line><line x1=\"1\" y1=\"14\" x2=\"4\" y2=\"14\"></line>',\r\n    'credit-card': '<rect x=\"1\" y=\"4\" width=\"22\" height=\"16\" rx=\"2\" ry=\"2\"></rect><line x1=\"1\" y1=\"10\" x2=\"23\" y2=\"10\"></line>',\r\n    'crop': '<path d=\"M6.13 1L6 16a2 2 0 0 0 2 2h15\"></path><path d=\"M1 6.13L16 6a2 2 0 0 1 2 2v15\"></path>',\r\n    'crosshair': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line>',\r\n    'database': '<ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse><path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path><path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path>',\r\n    'delete': '<path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path><line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line><line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>',\r\n    'disc': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"3\"></circle>',\r\n    'divide-circle': '<line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"8\"></line><circle cx=\"12\" cy=\"12\" r=\"10\"></circle>',\r\n    'divide-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"8\"></line>',\r\n    'divide': '<circle cx=\"12\" cy=\"6\" r=\"2\"></circle><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><circle cx=\"12\" cy=\"18\" r=\"2\"></circle>',\r\n    'dollar-sign': '<line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path>',\r\n    'download-cloud': '<polyline points=\"8 17 12 21 16 17\"></polyline><line x1=\"12\" y1=\"12\" x2=\"12\" y2=\"21\"></line><path d=\"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29\"></path>',\r\n    'download': '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"7 10 12 15 17 10\"></polyline><line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>',\r\n    'dribbble': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32\"></path>',\r\n    'droplet': '<path d=\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"></path>',\r\n    'edit-2': '<path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path>',\r\n    'edit-3': '<path d=\"M12 20h9\"></path><path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>',\r\n    'edit': '<path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>',\r\n    'external-link': '<path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>',\r\n    'eye-off': '<path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'eye': '<path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle>',\r\n    'facebook': '<path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path>',\r\n    'fast-forward': '<polygon points=\"13 19 22 12 13 5 13 19\"></polygon><polygon points=\"2 19 11 12 2 5 2 19\"></polygon>',\r\n    'feather': '<path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"></path><line x1=\"16\" y1=\"8\" x2=\"2\" y2=\"22\"></line><line x1=\"17.5\" y1=\"15\" x2=\"9\" y2=\"15\"></line>',\r\n    'figma': '<path d=\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\"></path><path d=\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\"></path><path d=\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\"></path><path d=\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\"></path><path d=\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\"></path>',\r\n    'file-minus': '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>',\r\n    'file-plus': '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"12\"></line><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>',\r\n    'file-text': '<path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line><line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line><polyline points=\"10 9 9 9 8 9\"></polyline>',\r\n    'file': '<path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline>',\r\n    'film': '<rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2.18\" ry=\"2.18\"></rect><line x1=\"7\" y1=\"2\" x2=\"7\" y2=\"22\"></line><line x1=\"17\" y1=\"2\" x2=\"17\" y2=\"22\"></line><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"2\" y1=\"7\" x2=\"7\" y2=\"7\"></line><line x1=\"2\" y1=\"17\" x2=\"7\" y2=\"17\"></line><line x1=\"17\" y1=\"17\" x2=\"22\" y2=\"17\"></line><line x1=\"17\" y1=\"7\" x2=\"22\" y2=\"7\"></line>',\r\n    'filter': '<polygon points=\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\"></polygon>',\r\n    'flag': '<path d=\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"></path><line x1=\"4\" y1=\"22\" x2=\"4\" y2=\"15\"></line>',\r\n    'folder-minus': '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path><line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\"></line>',\r\n    'folder-plus': '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path><line x1=\"12\" y1=\"11\" x2=\"12\" y2=\"17\"></line><line x1=\"9\" y1=\"14\" x2=\"15\" y2=\"14\"></line>',\r\n    'folder': '<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path>',\r\n    'framer': '<path d=\"M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7\"></path>',\r\n    'frown': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M16 16s-1.5-2-4-2-4 2-4 2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\r\n    'gift': '<polyline points=\"20 12 20 22 4 22 4 12\"></polyline><rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"></rect><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"></line><path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"></path><path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"></path>',\r\n    'git-branch': '<line x1=\"6\" y1=\"3\" x2=\"6\" y2=\"15\"></line><circle cx=\"18\" cy=\"6\" r=\"3\"></circle><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><path d=\"M18 9a9 9 0 0 1-9 9\"></path>',\r\n    'git-commit': '<circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"1.05\" y1=\"12\" x2=\"7\" y2=\"12\"></line><line x1=\"17.01\" y1=\"12\" x2=\"22.96\" y2=\"12\"></line>',\r\n    'git-merge': '<circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M6 21V9a9 9 0 0 0 9 9\"></path>',\r\n    'git-pull-request': '<circle cx=\"18\" cy=\"18\" r=\"3\"></circle><circle cx=\"6\" cy=\"6\" r=\"3\"></circle><path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path><line x1=\"6\" y1=\"9\" x2=\"6\" y2=\"21\"></line>',\r\n    'github': '<path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>',\r\n    'gitlab': '<path d=\"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z\"></path>',\r\n    'globe': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path>',\r\n    'grid': '<rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect><rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect><rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>',\r\n    'hard-drive': '<line x1=\"22\" y1=\"12\" x2=\"2\" y2=\"12\"></line><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path><line x1=\"6\" y1=\"16\" x2=\"6.01\" y2=\"16\"></line><line x1=\"10\" y1=\"16\" x2=\"10.01\" y2=\"16\"></line>',\r\n    'hash': '<line x1=\"4\" y1=\"9\" x2=\"20\" y2=\"9\"></line><line x1=\"4\" y1=\"15\" x2=\"20\" y2=\"15\"></line><line x1=\"10\" y1=\"3\" x2=\"8\" y2=\"21\"></line><line x1=\"16\" y1=\"3\" x2=\"14\" y2=\"21\"></line>',\r\n    'headphones': '<path d=\"M3 18v-6a9 9 0 0 1 18 0v6\"></path><path d=\"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z\"></path>',\r\n    'heart': '<path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>',\r\n    'help-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>',\r\n    'hexagon': '<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>',\r\n    'home': '<path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline>',\r\n    'image': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"></circle><polyline points=\"21 15 16 10 5 21\"></polyline>',\r\n    'inbox': '<polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\"></polyline><path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path>',\r\n    'info': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>',\r\n    'instagram': '<rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>',\r\n    'italic': '<line x1=\"19\" y1=\"4\" x2=\"10\" y2=\"4\"></line><line x1=\"14\" y1=\"20\" x2=\"5\" y2=\"20\"></line><line x1=\"15\" y1=\"4\" x2=\"9\" y2=\"20\"></line>',\r\n    'key': '<path d=\"M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4\"></path>',\r\n    'layers': '<polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline>',\r\n    'layout': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line><line x1=\"9\" y1=\"21\" x2=\"9\" y2=\"9\"></line>',\r\n    'life-buoy': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"4\"></circle><line x1=\"4.93\" y1=\"4.93\" x2=\"9.17\" y2=\"9.17\"></line><line x1=\"14.83\" y1=\"14.83\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"14.83\" y1=\"9.17\" x2=\"19.07\" y2=\"4.93\"></line><line x1=\"14.83\" y1=\"9.17\" x2=\"18.36\" y2=\"5.64\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"9.17\" y2=\"14.83\"></line>',\r\n    'link-2': '<path d=\"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"></path><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'link': '<path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>',\r\n    'linkedin': '<path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path><rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect><circle cx=\"4\" cy=\"4\" r=\"2\"></circle>',\r\n    'list': '<line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>',\r\n    'loader': '<line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line><line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line><line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line><line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line><line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line>',\r\n    'lock': '<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect><path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>',\r\n    'log-in': '<path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"></path><polyline points=\"10 17 15 12 10 7\"></polyline><line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\"></line>',\r\n    'log-out': '<path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>',\r\n    'mail': '<path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path><polyline points=\"22,6 12,13 2,6\"></polyline>',\r\n    'map-pin': '<path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle>',\r\n    'map': '<polygon points=\"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6\"></polygon><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"18\"></line><line x1=\"16\" y1=\"6\" x2=\"16\" y2=\"22\"></line>',\r\n    'maximize-2': '<polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>',\r\n    'maximize': '<path d=\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"></path>',\r\n    'meh': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"8\" y1=\"15\" x2=\"16\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\r\n    'menu': '<line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>',\r\n    'message-circle': '<path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>',\r\n    'message-square': '<path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>',\r\n    'mic-off': '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path><path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>',\r\n    'mic': '<path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path><path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path><line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line><line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>',\r\n    'minimize-2': '<polyline points=\"4 14 10 14 10 20\"></polyline><polyline points=\"20 10 14 10 14 4\"></polyline><line x1=\"14\" y1=\"10\" x2=\"21\" y2=\"3\"></line><line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\"></line>',\r\n    'minimize': '<path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"></path>',\r\n    'minus-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'minus-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'minus': '<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>',\r\n    'monitor': '<rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect><line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"></line><line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"></line>',\r\n    'moon': '<path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>',\r\n    'more-horizontal': '<circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"19\" cy=\"12\" r=\"1\"></circle><circle cx=\"5\" cy=\"12\" r=\"1\"></circle>',\r\n    'more-vertical': '<circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"12\" cy=\"5\" r=\"1\"></circle><circle cx=\"12\" cy=\"19\" r=\"1\"></circle>',\r\n    'mouse-pointer': '<path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"></path><path d=\"M13 13l6 6\"></path>',\r\n    'move': '<polyline points=\"5 9 2 12 5 15\"></polyline><polyline points=\"9 5 12 2 15 5\"></polyline><polyline points=\"15 19 12 22 9 19\"></polyline><polyline points=\"19 9 22 12 19 15\"></polyline><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"22\"></line>',\r\n    'music': '<path d=\"M9 18V5l12-2v13\"></path><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><circle cx=\"18\" cy=\"16\" r=\"3\"></circle>',\r\n    'navigation-2': '<polygon points=\"12 2 19 21 12 17 5 21 12 2\"></polygon>',\r\n    'navigation': '<polygon points=\"3 11 22 2 13 21 11 13 3 11\"></polygon>',\r\n    'octagon': '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon>',\r\n    'package': '<line x1=\"16.5\" y1=\"9.4\" x2=\"7.5\" y2=\"4.21\"></line><path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path><polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline><line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>',\r\n    'paperclip': '<path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"></path>',\r\n    'pause-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"10\" y1=\"15\" x2=\"10\" y2=\"9\"></line><line x1=\"14\" y1=\"15\" x2=\"14\" y2=\"9\"></line>',\r\n    'pause': '<rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect><rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect>',\r\n    'pen-tool': '<path d=\"M12 19l7-7 3 3-7 7-3-3z\"></path><path d=\"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"></path><path d=\"M2 2l7.586 7.586\"></path><circle cx=\"11\" cy=\"11\" r=\"2\"></circle>',\r\n    'percent': '<line x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\"></line><circle cx=\"6.5\" cy=\"6.5\" r=\"2.5\"></circle><circle cx=\"17.5\" cy=\"17.5\" r=\"2.5\"></circle>',\r\n    'phone-call': '<path d=\"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-forwarded': '<polyline points=\"19 1 23 5 19 9\"></polyline><line x1=\"15\" y1=\"5\" x2=\"23\" y2=\"5\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-incoming': '<polyline points=\"16 2 16 8 22 8\"></polyline><line x1=\"23\" y1=\"1\" x2=\"16\" y2=\"8\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-missed': '<line x1=\"23\" y1=\"1\" x2=\"17\" y2=\"7\"></line><line x1=\"17\" y1=\"1\" x2=\"23\" y2=\"7\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone-off': '<path d=\"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91\"></path><line x1=\"23\" y1=\"1\" x2=\"1\" y2=\"23\"></line>',\r\n    'phone-outgoing': '<polyline points=\"23 7 23 1 17 1\"></polyline><line x1=\"16\" y1=\"8\" x2=\"23\" y2=\"1\"></line><path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'phone': '<path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>',\r\n    'pie-chart': '<path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path><path d=\"M22 12A10 10 0 0 0 12 2v10z\"></path>',\r\n    'play-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polygon points=\"10 8 16 12 10 16 10 8\"></polygon>',\r\n    'play': '<polygon points=\"5 3 19 12 5 21 5 3\"></polygon>',\r\n    'plus-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'plus-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>',\r\n    'plus': '<line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>',\r\n    'pocket': '<path d=\"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z\"></path><polyline points=\"8 10 12 14 16 10\"></polyline>',\r\n    'power': '<path d=\"M18.36 6.64a9 9 0 1 1-12.73 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"12\"></line>',\r\n    'printer': '<polyline points=\"6 9 6 2 18 2 18 9\"></polyline><path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"></path><rect x=\"6\" y=\"14\" width=\"12\" height=\"8\"></rect>',\r\n    'radio': '<circle cx=\"12\" cy=\"12\" r=\"2\"></circle><path d=\"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14\"></path>',\r\n    'refresh-ccw': '<polyline points=\"1 4 1 10 7 10\"></polyline><polyline points=\"23 20 23 14 17 14\"></polyline><path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"></path>',\r\n    'refresh-cw': '<polyline points=\"23 4 23 10 17 10\"></polyline><polyline points=\"1 20 1 14 7 14\"></polyline><path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"></path>',\r\n    'repeat': '<polyline points=\"17 1 21 5 17 9\"></polyline><path d=\"M3 11V9a4 4 0 0 1 4-4h14\"></path><polyline points=\"7 23 3 19 7 15\"></polyline><path d=\"M21 13v2a4 4 0 0 1-4 4H3\"></path>',\r\n    'rewind': '<polygon points=\"11 19 2 12 11 5 11 19\"></polygon><polygon points=\"22 19 13 12 22 5 22 19\"></polygon>',\r\n    'rotate-ccw': '<polyline points=\"1 4 1 10 7 10\"></polyline><path d=\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"></path>',\r\n    'rotate-cw': '<polyline points=\"23 4 23 10 17 10\"></polyline><path d=\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"></path>',\r\n    'rss': '<path d=\"M4 11a9 9 0 0 1 9 9\"></path><path d=\"M4 4a16 16 0 0 1 16 16\"></path><circle cx=\"5\" cy=\"19\" r=\"1\"></circle>',\r\n    'save': '<path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path><polyline points=\"17 21 17 13 7 13 7 21\"></polyline><polyline points=\"7 3 7 8 15 8\"></polyline>',\r\n    'scissors': '<circle cx=\"6\" cy=\"6\" r=\"3\"></circle><circle cx=\"6\" cy=\"18\" r=\"3\"></circle><line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\"></line><line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\"></line><line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\"></line>',\r\n    'search': '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>',\r\n    'send': '<line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>',\r\n    'server': '<rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect><rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect><line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line><line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>',\r\n    'settings': '<circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>',\r\n    'share-2': '<circle cx=\"18\" cy=\"5\" r=\"3\"></circle><circle cx=\"6\" cy=\"12\" r=\"3\"></circle><circle cx=\"18\" cy=\"19\" r=\"3\"></circle><line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"></line><line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"></line>',\r\n    'share': '<path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"></line>',\r\n    'shield-off': '<path d=\"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18\"></path><path d=\"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'shield': '<path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>',\r\n    'shopping-bag': '<path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><path d=\"M16 10a4 4 0 0 1-8 0\"></path>',\r\n    'shopping-cart': '<circle cx=\"9\" cy=\"21\" r=\"1\"></circle><circle cx=\"20\" cy=\"21\" r=\"1\"></circle><path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>',\r\n    'shuffle': '<polyline points=\"16 3 21 3 21 8\"></polyline><line x1=\"4\" y1=\"20\" x2=\"21\" y2=\"3\"></line><polyline points=\"21 16 21 21 16 21\"></polyline><line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line><line x1=\"4\" y1=\"4\" x2=\"9\" y2=\"9\"></line>',\r\n    'sidebar': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"9\" y1=\"3\" x2=\"9\" y2=\"21\"></line>',\r\n    'skip-back': '<polygon points=\"19 20 9 12 19 4 19 20\"></polygon><line x1=\"5\" y1=\"19\" x2=\"5\" y2=\"5\"></line>',\r\n    'skip-forward': '<polygon points=\"5 4 15 12 5 20 5 4\"></polygon><line x1=\"19\" y1=\"5\" x2=\"19\" y2=\"19\"></line>',\r\n    'slack': '<path d=\"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z\"></path><path d=\"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"></path><path d=\"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z\"></path><path d=\"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z\"></path><path d=\"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z\"></path><path d=\"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"></path><path d=\"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z\"></path><path d=\"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z\"></path>',\r\n    'slash': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>',\r\n    'sliders': '<line x1=\"4\" y1=\"21\" x2=\"4\" y2=\"14\"></line><line x1=\"4\" y1=\"10\" x2=\"4\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"3\"></line><line x1=\"20\" y1=\"21\" x2=\"20\" y2=\"16\"></line><line x1=\"20\" y1=\"12\" x2=\"20\" y2=\"3\"></line><line x1=\"1\" y1=\"14\" x2=\"7\" y2=\"14\"></line><line x1=\"9\" y1=\"8\" x2=\"15\" y2=\"8\"></line><line x1=\"17\" y1=\"16\" x2=\"23\" y2=\"16\"></line>',\r\n    'smartphone': '<rect x=\"5\" y=\"2\" width=\"14\" height=\"20\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>',\r\n    'smile': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>',\r\n    'speaker': '<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\" ry=\"2\"></rect><circle cx=\"12\" cy=\"14\" r=\"4\"></circle><line x1=\"12\" y1=\"6\" x2=\"12.01\" y2=\"6\"></line>',\r\n    'square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>',\r\n    'star': '<polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>',\r\n    'stop-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect>',\r\n    'sun': '<circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>',\r\n    'sunrise': '<path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"9\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"8 6 12 2 16 6\"></polyline>',\r\n    'sunset': '<path d=\"M17 18a5 5 0 0 0-10 0\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"2\"></line><line x1=\"4.22\" y1=\"10.22\" x2=\"5.64\" y2=\"11.64\"></line><line x1=\"1\" y1=\"18\" x2=\"3\" y2=\"18\"></line><line x1=\"21\" y1=\"18\" x2=\"23\" y2=\"18\"></line><line x1=\"18.36\" y1=\"11.64\" x2=\"19.78\" y2=\"10.22\"></line><line x1=\"23\" y1=\"22\" x2=\"1\" y2=\"22\"></line><polyline points=\"16 5 12 9 8 5\"></polyline>',\r\n    'tablet': '<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"18\" x2=\"12.01\" y2=\"18\"></line>',\r\n    'tag': '<path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\"></path><line x1=\"7\" y1=\"7\" x2=\"7.01\" y2=\"7\"></line>',\r\n    'target': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><circle cx=\"12\" cy=\"12\" r=\"6\"></circle><circle cx=\"12\" cy=\"12\" r=\"2\"></circle>',\r\n    'terminal': '<polyline points=\"4 17 10 11 4 5\"></polyline><line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\"></line>',\r\n    'thermometer': '<path d=\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\"></path>',\r\n    'thumbs-down': '<path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"></path>',\r\n    'thumbs-up': '<path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>',\r\n    'toggle-left': '<rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect><circle cx=\"8\" cy=\"12\" r=\"3\"></circle>',\r\n    'toggle-right': '<rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect><circle cx=\"16\" cy=\"12\" r=\"3\"></circle>',\r\n    'tool': '<path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"></path>',\r\n    'trash-2': '<polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>',\r\n    'trash': '<polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>',\r\n    'trello': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><rect x=\"7\" y=\"7\" width=\"3\" height=\"9\"></rect><rect x=\"14\" y=\"7\" width=\"3\" height=\"5\"></rect>',\r\n    'trending-down': '<polyline points=\"23 18 13.5 8.5 8.5 13.5 1 6\"></polyline><polyline points=\"17 18 23 18 23 12\"></polyline>',\r\n    'trending-up': '<polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline><polyline points=\"17 6 23 6 23 12\"></polyline>',\r\n    'triangle': '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>',\r\n    'truck': '<rect x=\"1\" y=\"3\" width=\"15\" height=\"13\"></rect><polygon points=\"16 8 20 8 23 11 23 16 16 16 16 8\"></polygon><circle cx=\"5.5\" cy=\"18.5\" r=\"2.5\"></circle><circle cx=\"18.5\" cy=\"18.5\" r=\"2.5\"></circle>',\r\n    'tv': '<rect x=\"2\" y=\"7\" width=\"20\" height=\"15\" rx=\"2\" ry=\"2\"></rect><polyline points=\"17 2 12 7 7 2\"></polyline>',\r\n    'twitch': '<path d=\"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\"></path>',\r\n    'twitter': '<path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path>',\r\n    'type': '<polyline points=\"4 7 4 4 20 4 20 7\"></polyline><line x1=\"9\" y1=\"20\" x2=\"15\" y2=\"20\"></line><line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"20\"></line>',\r\n    'umbrella': '<path d=\"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7\"></path>',\r\n    'underline': '<path d=\"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3\"></path><line x1=\"4\" y1=\"21\" x2=\"20\" y2=\"21\"></line>',\r\n    'unlock': '<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect><path d=\"M7 11V7a5 5 0 0 1 9.9-1\"></path>',\r\n    'upload-cloud': '<polyline points=\"16 16 12 12 8 16\"></polyline><line x1=\"12\" y1=\"12\" x2=\"12\" y2=\"21\"></line><path d=\"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"></path><polyline points=\"16 16 12 12 8 16\"></polyline>',\r\n    'upload': '<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"17 8 12 3 7 8\"></polyline><line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>',\r\n    'user-check': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><polyline points=\"17 11 19 13 23 9\"></polyline>',\r\n    'user-minus': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>',\r\n    'user-plus': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>',\r\n    'user-x': '<path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"18\" y1=\"8\" x2=\"23\" y2=\"13\"></line><line x1=\"23\" y1=\"8\" x2=\"18\" y2=\"13\"></line>',\r\n    'user': '<path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle>',\r\n    'users': '<path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>',\r\n    'video-off': '<path d=\"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10\"></path><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'video': '<polygon points=\"23 7 16 12 23 17 23 7\"></polygon><rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"></rect>',\r\n    'voicemail': '<circle cx=\"5.5\" cy=\"11.5\" r=\"4.5\"></circle><circle cx=\"18.5\" cy=\"11.5\" r=\"4.5\"></circle><line x1=\"5.5\" y1=\"16\" x2=\"18.5\" y2=\"16\"></line>',\r\n    'volume-1': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><path d=\"M15.54 8.46a5 5 0 0 1 0 7.07\"></path>',\r\n    'volume-2': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>',\r\n    'volume-x': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon><line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\"></line><line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\"></line>',\r\n    'volume': '<polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>',\r\n    'watch': '<circle cx=\"12\" cy=\"12\" r=\"7\"></circle><polyline points=\"12 9 12 12 13.5 13.5\"></polyline><path d=\"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83\"></path>',\r\n    'wifi-off': '<line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line><path d=\"M16.72 11.06A10.94 10.94 0 0 1 19 12.55\"></path><path d=\"M5 12.55a10.94 10.94 0 0 1 5.17-2.39\"></path><path d=\"M10.71 5.05A16 16 0 0 1 22.58 9\"></path><path d=\"M1.42 9a15.91 15.91 0 0 1 4.7-2.88\"></path><path d=\"M8.53 16.11a6 6 0 0 1 6.95 0\"></path><line x1=\"12\" y1=\"20\" x2=\"12.01\" y2=\"20\"></line>',\r\n    'wifi': '<path d=\"M5 12.55a11 11 0 0 1 14.08 0\"></path><path d=\"M1.42 9a16 16 0 0 1 21.16 0\"></path><path d=\"M8.53 16.11a6 6 0 0 1 6.95 0\"></path><line x1=\"12\" y1=\"20\" x2=\"12.01\" y2=\"20\"></line>',\r\n    'wind': '<path d=\"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2\"></path>',\r\n    'x-circle': '<circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>',\r\n    'x-octagon': '<polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>',\r\n    'x-square': '<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>',\r\n    'x': '<line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>',\r\n    'youtube': '<path d=\"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z\"></path><polygon points=\"9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02\"></polygon>',\r\n    'zap-off': '<polyline points=\"12.41 6.75 13 2 10.57 4.92\"></polyline><polyline points=\"18.57 12.91 21 10 15.66 10\"></polyline><polyline points=\"8 8 3 14 12 14 11 22 16 16\"></polyline><line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>',\r\n    'zap': '<polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"></polygon>',\r\n    'zoom-in': '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line><line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\"></line><line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\"></line>',\r\n    'zoom-out': '<circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line><line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\"></line>'\r\n};\r\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes } from '../../_shared';\r\nimport { IconContents } from './generated';\r\nvar Icon = /** @class */ (function () {\r\n    function Icon() {\r\n    }\r\n    Icon.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var className = attrs.class, intent = attrs.intent, name = attrs.name, onclick = attrs.onclick, size = attrs.size, htmlAttrs = __rest(attrs, [\"class\", \"intent\", \"name\", \"onclick\", \"size\"]);\r\n        var classes = classnames(Classes.ICON, Classes.ICON + \"-\" + name, intent && \"cui-\" + intent, size && \"cui-\" + size, onclick && Classes.ICON_ACTION, className);\r\n        var svg = m.trust(\"<svg viewBox='0 0 24 24'>\" + IconContents[name] + \"</svg>\");\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classes, onclick: onclick }), svg);\r\n    };\r\n    return Icon;\r\n}());\r\nexport { Icon };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport m from 'mithril';\r\nimport { Classes } from '../../_shared';\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner() {\r\n    }\r\n    Spinner.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var active = attrs.active, background = attrs.background, className = attrs.class, fill = attrs.fill, intent = attrs.intent, message = attrs.message, size = attrs.size, otherAttrs = __rest(attrs, [\"active\", \"background\", \"class\", \"fill\", \"intent\", \"message\", \"size\"]);\r\n        var content = [\r\n            m(\".\" + Classes.SPINNER_CONTENT, [\r\n                m(\".\" + Classes.SPINNER_ICON),\r\n                message && m(\".\" + Classes.SPINNER_MESSAGE, message)\r\n            ])\r\n        ];\r\n        return m('', __assign(__assign({}, otherAttrs), { class: classnames(Classes.SPINNER, active && Classes.SPINNER_ACTIVE, background && Classes.SPINNER_BG, fill && Classes.SPINNER_FILL, intent && \"cui-\" + attrs.intent, size && \"cui-\" + attrs.size, className) }), content);\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport m from 'mithril';\r\nimport { Icon } from '../icon';\r\nimport { Spinner } from '../spinner';\r\nimport { Classes, isNullOrEmpty } from '../../_shared';\r\nvar Button = /** @class */ (function () {\r\n    function Button() {\r\n    }\r\n    Button.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var _b = attrs.align, align = _b === void 0 ? 'center' : _b, active = attrs.active, basic = attrs.basic, compact = attrs.compact, className = attrs.class, disabled = attrs.disabled, fluid = attrs.fluid, href = attrs.href, iconLeft = attrs.iconLeft, iconLeftAttrs = attrs.iconLeftAttrs, iconRight = attrs.iconRight, iconRightAttrs = attrs.iconRightAttrs, intent = attrs.intent, loading = attrs.loading, label = attrs.label, onclick = attrs.onclick, outlined = attrs.outlined, rounded = attrs.rounded, size = attrs.size, sublabel = attrs.sublabel, htmlAttrs = __rest(attrs, [\"align\", \"active\", \"basic\", \"compact\", \"class\", \"disabled\", \"fluid\", \"href\", \"iconLeft\", \"iconLeftAttrs\", \"iconRight\", \"iconRightAttrs\", \"intent\", \"loading\", \"label\", \"onclick\", \"outlined\", \"rounded\", \"size\", \"sublabel\"]);\r\n        var tag = href ? 'a' : 'button';\r\n        var isAnchor = tag === 'a';\r\n        var classes = classnames(Classes.BUTTON, align && Classes.ALIGN + \"-\" + align, active && Classes.ACTIVE, compact && Classes.COMPACT, disabled && Classes.DISABLED, fluid && Classes.FLUID, loading && Classes.LOADING, size && \"cui-\" + size, intent && \"cui-\" + intent, rounded && Classes.ROUNDED, basic && Classes.BASIC, outlined && Classes.OUTLINED, isNullOrEmpty(label) && isNullOrEmpty(sublabel) && (!iconLeft || !iconRight) && Classes.BUTTON_ICON, className);\r\n        var content = [\r\n            loading && m(Spinner, { active: true, fill: true }),\r\n            iconLeft && m(Icon, __assign({ name: iconLeft }, iconLeftAttrs)),\r\n            !isNullOrEmpty(sublabel) && m('span', { class: Classes.BUTTON_SUBLABEL }, sublabel),\r\n            !isNullOrEmpty(label) && m('span', { class: Classes.BUTTON_LABEL }, label),\r\n            iconRight && m(Icon, __assign({ name: iconRight }, iconRightAttrs))\r\n        ];\r\n        return m(tag, __assign(__assign({ type: isAnchor ? undefined : 'button', role: isAnchor ? 'button' : undefined }, htmlAttrs), { class: classes, disabled: disabled, \r\n            // Undefined attrs are not removed on redraw. See https://github.com/MithrilJS/mithril.js/pull/1865#issuecomment-382990558'\r\n            href: disabled ? undefined : href, onclick: disabled ? undefined : onclick, tabIndex: disabled ? undefined : htmlAttrs.tabIndex }), content);\r\n    };\r\n    return Button;\r\n}());\r\nexport { Button };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes } from '../../_shared';\r\nvar ButtonGroup = /** @class */ (function () {\r\n    function ButtonGroup() {\r\n    }\r\n    ButtonGroup.prototype.view = function (_a) {\r\n        var attrs = _a.attrs, children = _a.children;\r\n        var className = attrs.class, size = attrs.size, fluid = attrs.fluid, intent = attrs.intent, rounded = attrs.rounded, outlined = attrs.outlined, basic = attrs.basic, htmlAttrs = __rest(attrs, [\"class\", \"size\", \"fluid\", \"intent\", \"rounded\", \"outlined\", \"basic\"]);\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classnames(Classes.BUTTON_GROUP, rounded && Classes.ROUNDED, fluid && Classes.FLUID, basic && Classes.BASIC, outlined && Classes.OUTLINED, intent && \"cui-\" + intent, size && \"cui-\" + size, className) }), children);\r\n    };\r\n    return ButtonGroup;\r\n}());\r\nexport { ButtonGroup };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes } from '../../_shared';\r\nvar ControlGroup = /** @class */ (function () {\r\n    function ControlGroup() {\r\n    }\r\n    ControlGroup.prototype.view = function (_a) {\r\n        var attrs = _a.attrs, children = _a.children;\r\n        var className = attrs.class, htmlAttrs = __rest(attrs, [\"class\"]);\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classnames(Classes.CONTROL_GROUP, className) }), children);\r\n    };\r\n    return ControlGroup;\r\n}());\r\nexport { ControlGroup };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes } from '../../_shared';\r\nvar List = /** @class */ (function () {\r\n    function List() {\r\n    }\r\n    List.prototype.view = function (_a) {\r\n        var attrs = _a.attrs, children = _a.children;\r\n        var className = attrs.class, size = attrs.size, _b = attrs.interactive, interactive = _b === void 0 ? true : _b, htmlAttrs = __rest(attrs, [\"class\", \"size\", \"interactive\"]);\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classnames(Classes.LIST, interactive && Classes.INTERACTIVE, size && \"cui-\" + size, className) }), children);\r\n    };\r\n    return List;\r\n}());\r\nexport { List };\r\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes, getClosest, safeCall, isFunction } from '../../_shared';\r\nvar ListItem = /** @class */ (function () {\r\n    function ListItem() {\r\n    }\r\n    ListItem.prototype.view = function (_a) {\r\n        var _this = this;\r\n        var attrs = _a.attrs;\r\n        var active = attrs.active, className = attrs.class, contentLeft = attrs.contentLeft, contentRight = attrs.contentRight, disabled = attrs.disabled, selected = attrs.selected, label = attrs.label, onclick = attrs.onclick, htmlAttrs = __rest(attrs, [\"active\", \"class\", \"contentLeft\", \"contentRight\", \"disabled\", \"selected\", \"label\", \"onclick\"]);\r\n        var classes = classnames(Classes.LIST_ITEM, active && Classes.ACTIVE, disabled && Classes.DISABLED, selected && Classes.SELECTED, className);\r\n        var content = [\r\n            contentLeft && m(\".\" + Classes.LIST_ITEM_CONTENT_LEFT, contentLeft),\r\n            label,\r\n            contentRight && m(\".\" + Classes.LIST_ITEM_CONTENT_RIGHT, contentRight)\r\n        ];\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classes, onclick: function (e) { return _this.handleClick(e, attrs); } }), content);\r\n    };\r\n    ListItem.prototype.handleClick = function (e, attrs) {\r\n        var allowOnContentClick = attrs.allowOnContentClick, onclick = attrs.onclick;\r\n        var el = e.target;\r\n        var isLeftContentClick = getClosest(el, \".\" + Classes.LIST_ITEM_CONTENT_LEFT);\r\n        var isRightContentClick = getClosest(el, \".\" + Classes.LIST_ITEM_CONTENT_RIGHT);\r\n        var allowContentClick = allowOnContentClick || (!isLeftContentClick && !isRightContentClick);\r\n        if (isFunction(onclick) && allowContentClick) {\r\n            safeCall(onclick, e);\r\n        }\r\n        else\r\n            e.redraw = false;\r\n    };\r\n    return ListItem;\r\n}());\r\nexport { ListItem };\r\n","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import { __assign } from \"tslib\";\r\nvar AbstractComponent = /** @class */ (function () {\r\n    function AbstractComponent() {\r\n        var _this = this;\r\n        this.timeoutStack = [];\r\n        this.attrs = {};\r\n        this.setTimeout = function (callback, timeout) {\r\n            var handle = window.setTimeout(callback, timeout);\r\n            _this.timeoutStack.push(handle);\r\n            return function () { return window.clearTimeout(handle); };\r\n        };\r\n        this.clearTimeouts = function () {\r\n            if (_this.timeoutStack.length) {\r\n                _this.timeoutStack.map(function (timeout) { return clearTimeout(timeout); });\r\n                _this.timeoutStack = [];\r\n            }\r\n        };\r\n    }\r\n    AbstractComponent.prototype.oninit = function (vnode) {\r\n        vnode.attrs = vnode.attrs || {};\r\n        this.setAttrs(vnode);\r\n    };\r\n    AbstractComponent.prototype.onbeforeupdate = function (vnode, prev) {\r\n        this.setAttrs(vnode);\r\n        this.prevAttrs = prev.attrs;\r\n    };\r\n    AbstractComponent.prototype.setAttrs = function (vnode) {\r\n        vnode.attrs = this.getAttrs(vnode.attrs);\r\n        this.attrs = vnode.attrs;\r\n    };\r\n    AbstractComponent.prototype.getAttrs = function (attrs) {\r\n        return __assign(__assign({}, this.getDefaultAttrs()), attrs);\r\n    };\r\n    return AbstractComponent;\r\n}());\r\nexport { AbstractComponent };\r\n","import m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes, safeCall, normalizeStyle } from '../../_shared';\r\nvar Portal = /** @class */ (function () {\r\n    function Portal() {\r\n    }\r\n    Portal.prototype.oncreate = function (_a) {\r\n        var attrs = _a.attrs, children = _a.children;\r\n        var rootElement = document.createElement('div');\r\n        var container = attrs.container || document.body;\r\n        container.appendChild(rootElement);\r\n        this.rootElement = rootElement;\r\n        this.setStyles(attrs);\r\n        this.content = { view: function () { return children; } };\r\n        m.mount(this.rootElement, this.content);\r\n        safeCall(attrs.onContentMount, rootElement);\r\n    };\r\n    Portal.prototype.onupdate = function (_a) {\r\n        var attrs = _a.attrs;\r\n        this.setStyles(attrs);\r\n    };\r\n    Portal.prototype.onbeforeupdate = function (_a) {\r\n        var children = _a.children;\r\n        if (!this.content)\r\n            return false;\r\n        this.content.view = function () { return children; };\r\n    };\r\n    Portal.prototype.onremove = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var container = attrs.container || document.body;\r\n        if (container.contains(this.rootElement)) {\r\n            m.mount(this.rootElement, null);\r\n            container.removeChild(this.rootElement);\r\n        }\r\n    };\r\n    Portal.prototype.view = function () {\r\n        return m.fragment({}, '');\r\n    };\r\n    Portal.prototype.setStyles = function (attrs) {\r\n        this.rootElement.className = classnames(Classes.PORTAL, attrs.class);\r\n        this.rootElement.style.cssText = '';\r\n        if (attrs.style) {\r\n            Object.assign(this.rootElement.style, normalizeStyle(attrs.style));\r\n        }\r\n    };\r\n    return Portal;\r\n}());\r\nexport { Portal };\r\n","var TransitionManager = /** @class */ (function () {\r\n    function TransitionManager() {\r\n        /** Whether transitions are active */\r\n        this.isEnabled = true;\r\n    }\r\n    /** Enable all transitions */\r\n    TransitionManager.prototype.enable = function () {\r\n        this.isEnabled = true;\r\n    };\r\n    /** Disable all transitions */\r\n    TransitionManager.prototype.disable = function () {\r\n        return this.isEnabled = false;\r\n    };\r\n    return TransitionManager;\r\n}());\r\nexport default new TransitionManager();\r\n","import { __assign, __extends } from \"tslib\";\r\nimport classnames from 'classnames';\r\nimport m from 'mithril';\r\nimport { Classes, safeCall, Keys, getScrollbarWidth, hasScrollbar } from '../../_shared';\r\nimport { AbstractComponent } from '../abstract-component';\r\nimport { Portal } from '../portal';\r\nimport { TransitionManager } from '../../utils';\r\nvar instanceCounter = 0;\r\nvar Overlay = /** @class */ (function (_super) {\r\n    __extends(Overlay, _super);\r\n    function Overlay() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.id = instanceCounter++;\r\n        _this.shouldRender = false;\r\n        _this.onContainerCreate = function (_a) {\r\n            var dom = _a.dom;\r\n            if (_this.shouldRender) {\r\n                _this.handleOpen(dom);\r\n            }\r\n        };\r\n        _this.onContainerUpdate = function (_a) {\r\n            var dom = _a.dom;\r\n            var isOpen = _this.attrs.isOpen;\r\n            var wasOpen = _this.prevAttrs.isOpen;\r\n            if (isOpen && !wasOpen) {\r\n                _this.handleOpen(dom);\r\n            }\r\n            else if (!isOpen && wasOpen) {\r\n                _this.handleClose();\r\n            }\r\n        };\r\n        _this.handleBackdropMouseDown = function (e) {\r\n            var _a = _this.attrs, closeOnOutsideClick = _a.closeOnOutsideClick, onClose = _a.onClose;\r\n            if (closeOnOutsideClick) {\r\n                safeCall(onClose, e);\r\n            }\r\n            else\r\n                e.redraw = false;\r\n        };\r\n        _this.handleDocumentMouseDown = function (e) {\r\n            var _a = _this.attrs, isOpen = _a.isOpen, onClose = _a.onClose, closeOnOutsideClick = _a.closeOnOutsideClick;\r\n            var contentEl = _this.contentEl;\r\n            var isClickOnOverlay = contentEl && contentEl.contains(e.target);\r\n            if (isOpen && closeOnOutsideClick && !isClickOnOverlay && _this.lastOpened) {\r\n                safeCall(onClose, e);\r\n                m.redraw();\r\n            }\r\n        };\r\n        _this.handleKeyDown = function (e) {\r\n            var _a = _this.attrs, closeOnEscapeKey = _a.closeOnEscapeKey, onClose = _a.onClose;\r\n            if (e.which === Keys.ESCAPE && closeOnEscapeKey && _this.lastOpened) {\r\n                safeCall(onClose, e);\r\n                e.preventDefault();\r\n                m.redraw();\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    Overlay.prototype.getDefaultAttrs = function () {\r\n        return {\r\n            closeOnEscapeKey: true,\r\n            closeOnOutsideClick: true,\r\n            hasBackdrop: true,\r\n            addToStack: true,\r\n            transitionName: 'fade',\r\n            transitionDuration: TransitionManager.isEnabled ? 200 : 0\r\n        };\r\n    };\r\n    Overlay.prototype.oninit = function (vnode) {\r\n        _super.prototype.oninit.call(this, vnode);\r\n        this.shouldRender = !!vnode.attrs.isOpen;\r\n    };\r\n    Overlay.prototype.onbeforeupdate = function (vnode, old) {\r\n        var _this = this;\r\n        _super.prototype.onbeforeupdate.call(this, vnode, old);\r\n        var _a = vnode.attrs, isOpen = _a.isOpen, transitionDuration = _a.transitionDuration;\r\n        var wasOpen = old.attrs.isOpen;\r\n        if (isOpen && !wasOpen) {\r\n            this.clearTimeouts();\r\n            this.shouldRender = true;\r\n        }\r\n        else if (!isOpen && wasOpen) {\r\n            if (transitionDuration > 0) {\r\n                this.handleClose();\r\n                this.setTimeout(function () {\r\n                    _this.shouldRender = false;\r\n                    m.redraw();\r\n                    _this.handleClosed();\r\n                }, transitionDuration);\r\n            }\r\n            else {\r\n                this.shouldRender = false;\r\n                this.handleClose();\r\n                this.handleClosed();\r\n            }\r\n        }\r\n    };\r\n    Overlay.prototype.onremove = function () {\r\n        if (this.shouldRender === true) {\r\n            this.handleClose();\r\n            this.handleClosed();\r\n            this.shouldRender = false;\r\n        }\r\n    };\r\n    Overlay.prototype.view = function () {\r\n        var _a = this.attrs, backdropClass = _a.backdropClass, hasBackdrop = _a.hasBackdrop, content = _a.content, inline = _a.inline, className = _a.class, style = _a.style, portalAttrs = _a.portalAttrs;\r\n        if (!this.shouldRender) {\r\n            return null;\r\n        }\r\n        var innerContent = [\r\n            hasBackdrop && m('', {\r\n                class: classnames(Classes.OVERLAY_BACKDROP, backdropClass),\r\n                onmousedown: this.handleBackdropMouseDown,\r\n                tabindex: 0\r\n            }),\r\n            content\r\n        ];\r\n        var classes = classnames(Classes.OVERLAY, inline && Classes.OVERLAY_INLINE, className);\r\n        var container = m('', {\r\n            class: classes,\r\n            style: style,\r\n            oncreate: this.onContainerCreate,\r\n            onupdate: this.onContainerUpdate\r\n        }, innerContent);\r\n        return inline ? container : m(Portal, __assign({}, portalAttrs), container);\r\n    };\r\n    Overlay.prototype.handleOpen = function (contentEl) {\r\n        var _a = this.attrs, addToStack = _a.addToStack, closeOnOutsideClick = _a.closeOnOutsideClick, closeOnEscapeKey = _a.closeOnEscapeKey, hasBackdrop = _a.hasBackdrop, onOpened = _a.onOpened, inline = _a.inline;\r\n        this.contentEl = contentEl;\r\n        if (addToStack) {\r\n            Overlay.openStack.push(this.id);\r\n        }\r\n        if (closeOnOutsideClick && !hasBackdrop) {\r\n            document.addEventListener('mousedown', this.handleDocumentMouseDown);\r\n        }\r\n        if (closeOnEscapeKey) {\r\n            document.addEventListener('keydown', this.handleKeyDown);\r\n        }\r\n        this.handleEnterTransition();\r\n        if (hasBackdrop && !inline) {\r\n            document.body.classList.add(Classes.OVERLAY_OPEN);\r\n            var bodyHasScrollbar = hasScrollbar(document.body);\r\n            if (bodyHasScrollbar) {\r\n                document.body.style.paddingRight = getScrollbarWidth() + \"px\";\r\n            }\r\n        }\r\n        safeCall(onOpened, contentEl);\r\n        this.handleFocus();\r\n    };\r\n    Overlay.prototype.handleClose = function () {\r\n        document.removeEventListener('mousedown', this.handleDocumentMouseDown);\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n        this.handleExitTransition();\r\n    };\r\n    Overlay.prototype.handleClosed = function () {\r\n        var _this = this;\r\n        var _a = this.attrs, restoreFocus = _a.restoreFocus, onClosed = _a.onClosed, hasBackdrop = _a.hasBackdrop, inline = _a.inline;\r\n        if (this.attrs.addToStack) {\r\n            Overlay.openStack = Overlay.openStack.filter(function (id) { return id !== _this.id; });\r\n        }\r\n        if (this.lastActiveElement && restoreFocus) {\r\n            window.requestAnimationFrame(function () { return _this.lastActiveElement.focus(); });\r\n        }\r\n        if (hasBackdrop && !inline) {\r\n            document.body.classList.remove(Classes.OVERLAY_OPEN);\r\n            document.body.style.paddingRight = '';\r\n        }\r\n        safeCall(onClosed);\r\n    };\r\n    Overlay.prototype.handleEnterTransition = function () {\r\n        var _a = this.attrs, transitionName = _a.transitionName, transitionDuration = _a.transitionDuration;\r\n        var el = this.contentEl;\r\n        if (el == null || transitionDuration === 0)\r\n            return;\r\n        el.classList.remove(transitionName + \"-exit\");\r\n        el.classList.remove(transitionName + \"-exit-active\");\r\n        el.classList.add(transitionName + \"-enter\");\r\n        // tslint:disable-next-line:no-unused-expression\r\n        el.scrollTop;\r\n        el.classList.add(transitionName + \"-enter-active\");\r\n    };\r\n    Overlay.prototype.handleExitTransition = function () {\r\n        var _a = this.attrs, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;\r\n        var el = this.contentEl;\r\n        if (el == null || transitionDuration === 0)\r\n            return;\r\n        el.classList.remove(transitionName + \"-enter\");\r\n        el.classList.remove(transitionName + \"-enter-active\");\r\n        el.classList.add(transitionName + \"-exit\");\r\n        // tslint:disable-next-line:no-unused-expression\r\n        el.scrollTop;\r\n        el.classList.add(transitionName + \"-exit-active\");\r\n    };\r\n    Overlay.prototype.handleFocus = function () {\r\n        this.lastActiveElement = document.activeElement;\r\n        var contentEl = this.contentEl;\r\n        var _a = this.attrs, isOpen = _a.isOpen, autofocus = _a.autofocus;\r\n        if (!contentEl || !document.activeElement || !isOpen || !autofocus) {\r\n            return;\r\n        }\r\n        window.requestAnimationFrame(function () {\r\n            var isFocusOutsideOverlay = !contentEl.contains(document.activeElement);\r\n            if (isFocusOutsideOverlay) {\r\n                var autofocusEl = contentEl.querySelector('[autofocus]');\r\n                var tabIndexEl = contentEl.querySelector('[tabindex]');\r\n                if (autofocusEl) {\r\n                    autofocusEl.focus();\r\n                }\r\n                else if (tabIndexEl) {\r\n                    tabIndexEl.focus();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(Overlay.prototype, \"lastOpened\", {\r\n        get: function () {\r\n            return this.attrs.addToStack ? Overlay.getLastOpened() === this.id : true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Overlay.openStack = [];\r\n    Overlay.getLastOpened = function () { return Overlay.openStack[Overlay.openStack.length - 1]; };\r\n    return Overlay;\r\n}(AbstractComponent));\r\nexport { Overlay };\r\n","import { __assign, __extends } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport PopperJS from 'popper.js';\r\nimport { Classes, safeCall, getClosest, elementIsOrContains } from '../../_shared';\r\nimport { AbstractComponent } from '../abstract-component';\r\nimport { Overlay } from '../overlay';\r\nvar Popover = /** @class */ (function (_super) {\r\n    __extends(Popover, _super);\r\n    function Popover() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.handleOpened = function (contentEl) {\r\n            if (!_this.popper && contentEl) {\r\n                var popoverEl = contentEl.querySelector(\".\" + Classes.POPOVER);\r\n                _this.createPopper(popoverEl);\r\n                safeCall(_this.attrs.onOpened, contentEl);\r\n            }\r\n        };\r\n        _this.handleClosed = function () {\r\n            _this.destroyPopper();\r\n            safeCall(_this.attrs.onClosed);\r\n        };\r\n        _this.handleOverlayClose = function (e) {\r\n            var target = e.target;\r\n            var isTriggerClick = elementIsOrContains(_this.trigger.dom, target);\r\n            if (!isTriggerClick || e instanceof KeyboardEvent) {\r\n                _this.isControlled ? _this.handleInteraction(e) : _this.isOpen = false;\r\n            }\r\n        };\r\n        _this.handlePopoverClick = function (e) {\r\n            var target = e.target;\r\n            var hasDimiss = getClosest(target, \".\" + Classes.POPOVER_DISSMISS) != null;\r\n            if (_this.attrs.closeOnContentClick || hasDimiss) {\r\n                _this.isControlled ? _this.handleInteraction(e) : _this.isOpen = false;\r\n            }\r\n            else\r\n                e.redraw = false;\r\n        };\r\n        _this.handleTriggerMouseEnter = function (e) {\r\n            var _a = _this.attrs, hoverOpenDelay = _a.hoverOpenDelay, interactionType = _a.interactionType;\r\n            if (interactionType !== 'hover-trigger') {\r\n                _this.clearTimeouts();\r\n            }\r\n            if (!_this.isOpen && _this.isHoverInteraction()) {\r\n                if (hoverOpenDelay > 0) {\r\n                    _this.setTimeout(function () {\r\n                        _this.isOpen = true;\r\n                        m.redraw();\r\n                    }, hoverOpenDelay);\r\n                }\r\n                else {\r\n                    _this.isOpen = true;\r\n                    m.redraw();\r\n                }\r\n            }\r\n            e.redraw = false;\r\n        };\r\n        _this.handleTriggerMouseLeave = function (e) {\r\n            var hoverCloseDelay = _this.attrs.hoverCloseDelay;\r\n            _this.clearTimeouts();\r\n            if (_this.isOpen && _this.isHoverInteraction()) {\r\n                if (hoverCloseDelay > 0) {\r\n                    _this.setTimeout(function () {\r\n                        _this.isOpen = false;\r\n                        m.redraw();\r\n                    }, hoverCloseDelay);\r\n                }\r\n                else {\r\n                    _this.isOpen = false;\r\n                    m.redraw();\r\n                }\r\n            }\r\n            e.redraw = false;\r\n        };\r\n        _this.getContentOffset = function (data, containerEl) {\r\n            if (!_this.attrs.hasArrow) {\r\n                return data;\r\n            }\r\n            var placement = data.placement;\r\n            var isHorizontal = placement.includes('left') || placement.includes('right');\r\n            var position = isHorizontal ? 'left' : 'top';\r\n            var arrowSize = containerEl.children[0].clientHeight + 1;\r\n            var offset = placement.includes('top') || placement.includes('left') ? -arrowSize : arrowSize;\r\n            data.offsets.popper[position] += offset;\r\n            return data;\r\n        };\r\n        return _this;\r\n    }\r\n    Popover.prototype.getDefaultAttrs = function () {\r\n        return {\r\n            boundariesEl: 'window',\r\n            restoreFocus: false,\r\n            hasBackdrop: false,\r\n            hoverCloseDelay: 100,\r\n            hoverOpenDelay: 0,\r\n            interactionType: 'click',\r\n            position: 'bottom',\r\n            hasArrow: true\r\n        };\r\n    };\r\n    Popover.prototype.oninit = function (vnode) {\r\n        _super.prototype.oninit.call(this, vnode);\r\n        var _a = this.attrs, isOpen = _a.isOpen, defaultIsOpen = _a.defaultIsOpen;\r\n        this.isOpen = isOpen != null ? isOpen : defaultIsOpen != null ? defaultIsOpen : false;\r\n    };\r\n    Popover.prototype.onbeforeupdate = function (vnode, old) {\r\n        _super.prototype.onbeforeupdate.call(this, vnode, old);\r\n        var isOpen = vnode.attrs.isOpen;\r\n        var wasOpen = old.attrs.isOpen;\r\n        if (isOpen && !wasOpen) {\r\n            this.isOpen = true;\r\n        }\r\n        else if (!isOpen && wasOpen) {\r\n            this.isOpen = false;\r\n        }\r\n    };\r\n    Popover.prototype.onupdate = function () {\r\n        if (this.popper) {\r\n            this.popper.options.placement = this.attrs.position;\r\n            this.popper.scheduleUpdate();\r\n        }\r\n    };\r\n    Popover.prototype.onremove = function () {\r\n        this.destroyPopper();\r\n    };\r\n    Popover.prototype.view = function () {\r\n        var _a = this.attrs, className = _a.class, style = _a.style, content = _a.content, hasArrow = _a.hasArrow, trigger = _a.trigger, interactionType = _a.interactionType, inline = _a.inline, backdropClass = _a.backdropClass, overlayClass = _a.overlayClass, overlayStyle = _a.overlayStyle;\r\n        this.trigger = trigger;\r\n        this.setTriggerAttrs();\r\n        var innerContent = m('', {\r\n            class: classnames(Classes.POPOVER, className),\r\n            onclick: this.handlePopoverClick,\r\n            onmouseenter: this.handleTriggerMouseEnter,\r\n            onmouseleave: this.handleTriggerMouseLeave,\r\n            style: style\r\n        }, [\r\n            hasArrow && m(\".\" + Classes.POPOVER_ARROW),\r\n            m(\".\" + Classes.POPOVER_CONTENT, content)\r\n        ]);\r\n        return m.fragment({}, [\r\n            this.trigger,\r\n            m(Overlay, __assign(__assign({ restoreFocus: this.isClickInteraction() }, this.attrs), { backdropClass: classnames(Classes.POPOVER_BACKDROP, backdropClass), class: overlayClass, closeOnOutsideClick: interactionType !== 'click-trigger', content: innerContent, inline: inline, isOpen: this.isOpen, onClose: this.handleOverlayClose, onOpened: this.handleOpened, onClosed: this.handleClosed, style: overlayStyle }))\r\n        ]);\r\n    };\r\n    Popover.prototype.createPopper = function (el) {\r\n        var _this = this;\r\n        var _a = this.attrs, position = _a.position, hasArrow = _a.hasArrow, boundariesEl = _a.boundariesEl, modifiers = _a.modifiers;\r\n        var options = {\r\n            placement: position,\r\n            modifiers: __assign({ arrow: {\r\n                    enabled: hasArrow,\r\n                    element: \".\" + Classes.POPOVER_ARROW\r\n                }, offset: {\r\n                    enabled: hasArrow,\r\n                    fn: function (data) { return _this.getContentOffset(data, el); }\r\n                }, preventOverflow: {\r\n                    enabled: true,\r\n                    boundariesElement: boundariesEl,\r\n                    padding: 0\r\n                } }, modifiers)\r\n        };\r\n        this.popper = new PopperJS(this.trigger.dom, el, options);\r\n    };\r\n    Popover.prototype.destroyPopper = function () {\r\n        if (this.popper) {\r\n            this.popper.destroy();\r\n            this.popper = undefined;\r\n        }\r\n    };\r\n    Popover.prototype.setTriggerAttrs = function () {\r\n        var _this = this;\r\n        var isControlled = this.isControlled;\r\n        if (!this.trigger.attrs) {\r\n            this.trigger.attrs = {};\r\n        }\r\n        var triggerAttrs = this.trigger.attrs;\r\n        if (this.isOpen) {\r\n            triggerAttrs.class = classnames(triggerAttrs.className || triggerAttrs.class, Classes.ACTIVE, Classes.POPOVER_TRIGGER_ACTIVE);\r\n        }\r\n        else\r\n            triggerAttrs.class = triggerAttrs.className || triggerAttrs.class || '';\r\n        var triggerEvents = {\r\n            onmouseenter: triggerAttrs.onmouseenter,\r\n            onmouseleave: triggerAttrs.onmouseleave,\r\n            onfocus: triggerAttrs.onfocus,\r\n            onblur: triggerAttrs.onblur,\r\n            onclick: triggerAttrs.onclick\r\n        };\r\n        if (this.isClickInteraction()) {\r\n            triggerAttrs.onclick = function (e) {\r\n                isControlled ? _this.handleInteraction(e) : _this.handleTriggerClick();\r\n                safeCall(triggerEvents.onclick);\r\n            };\r\n        }\r\n        else {\r\n            triggerAttrs.onmouseenter = function (e) {\r\n                isControlled ? _this.handleInteraction(e) : _this.handleTriggerMouseEnter(e);\r\n                safeCall(triggerEvents.onmouseenter);\r\n            };\r\n            triggerAttrs.onmouseleave = function (e) {\r\n                isControlled ? _this.handleInteraction(e) : _this.handleTriggerMouseLeave(e);\r\n                safeCall(triggerEvents.onmouseleave);\r\n            };\r\n            triggerAttrs.onfocus = function (e) {\r\n                isControlled ? _this.handleInteraction(e) : _this.handleTriggerFocus(e);\r\n                safeCall(triggerEvents.onfocus);\r\n            };\r\n            triggerAttrs.onblur = function (e) {\r\n                isControlled ? _this.handleInteraction(e) : _this.handleTriggerBlur(e);\r\n                safeCall(triggerEvents.onblur);\r\n            };\r\n        }\r\n    };\r\n    Popover.prototype.handleInteraction = function (e) {\r\n        safeCall(this.attrs.onInteraction, !this.isOpen, e);\r\n    };\r\n    Popover.prototype.handleTriggerClick = function () {\r\n        this.isOpen = !this.isOpen;\r\n    };\r\n    Popover.prototype.handleTriggerFocus = function (e) {\r\n        if (this.attrs.openOnTriggerFocus) {\r\n            this.handleTriggerMouseEnter(e);\r\n        }\r\n        else\r\n            e.redraw = false;\r\n    };\r\n    Popover.prototype.handleTriggerBlur = function (e) {\r\n        if (this.attrs.openOnTriggerFocus) {\r\n            this.handleTriggerMouseLeave(e);\r\n        }\r\n        else\r\n            e.redraw = false;\r\n    };\r\n    Popover.prototype.isHoverInteraction = function () {\r\n        var interactionType = this.attrs.interactionType;\r\n        return interactionType === 'hover' || interactionType === 'hover-trigger';\r\n    };\r\n    Popover.prototype.isClickInteraction = function () {\r\n        var interactionType = this.attrs.interactionType;\r\n        return interactionType === 'click' || interactionType === 'click-trigger';\r\n    };\r\n    Object.defineProperty(Popover.prototype, \"isControlled\", {\r\n        get: function () {\r\n            return this.attrs.isOpen != null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Popover;\r\n}(AbstractComponent));\r\nexport { Popover };\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import { __assign, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes, updateElementGroupPadding } from '../../_shared';\r\nvar Input = /** @class */ (function () {\r\n    function Input() {\r\n    }\r\n    Input.prototype.oncreate = function (vnode) {\r\n        this.updatePadding(vnode);\r\n    };\r\n    Input.prototype.onupdate = function (vnode) {\r\n        this.updatePadding(vnode);\r\n    };\r\n    Input.prototype.view = function (_a) {\r\n        var attrs = _a.attrs;\r\n        var basic = attrs.basic, className = attrs.class, contentLeft = attrs.contentLeft, contentRight = attrs.contentRight, disabled = attrs.disabled, fluid = attrs.fluid, intent = attrs.intent, size = attrs.size, style = attrs.style, \r\n        // Prevent lifecycle methods from being passed through\r\n        oninit = attrs.oninit, oncreate = attrs.oncreate, onbeforeupdate = attrs.onbeforeupdate, onupdate = attrs.onupdate, onbeforeremove = attrs.onbeforeremove, onremove = attrs.onremove, htmlAttrs = __rest(attrs, [\"basic\", \"class\", \"contentLeft\", \"contentRight\", \"disabled\", \"fluid\", \"intent\", \"size\", \"style\", \"oninit\", \"oncreate\", \"onbeforeupdate\", \"onupdate\", \"onbeforeremove\", \"onremove\"]);\r\n        var classes = classnames(Classes.INPUT, basic && Classes.BASIC, disabled && Classes.DISABLED, fluid && Classes.FLUID, intent && \"cui-\" + intent, size && \"cui-\" + size, className);\r\n        var input = m('input', __assign({}, htmlAttrs));\r\n        return m('', { class: classes, style: style }, [\r\n            contentLeft,\r\n            input,\r\n            contentRight\r\n        ]);\r\n    };\r\n    Input.prototype.updatePadding = function (_a) {\r\n        var attrs = _a.attrs, dom = _a.dom;\r\n        var containerEl = dom.querySelector('input');\r\n        updateElementGroupPadding(containerEl, attrs.contentLeft, attrs.contentRight);\r\n    };\r\n    return Input;\r\n}());\r\nexport { Input };\r\n","// Credits go to Blueprintjs for API structure\r\n// https://github.com/palantir/blueprint/blob/develop/packages/select/src/components/query-list/queryList.tsx\r\nimport { __assign, __extends, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport debounce from 'lodash.debounce';\r\nimport { Classes, isFunction, Keys, safeCall, getClosest } from '../../_shared';\r\nimport { AbstractComponent } from '../abstract-component';\r\nimport { Icon, Icons } from '../icon';\r\nimport { List, ListItem } from '../list';\r\nimport { Input } from '../input';\r\nimport { ControlGroup } from '../control-group';\r\nvar QueryList = /** @class */ (function (_super) {\r\n    __extends(QueryList, _super);\r\n    function QueryList() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.filteredItems = [];\r\n        _this.renderItem = function (item, index) {\r\n            var _a = _this.attrs, itemRender = _a.itemRender, disableArrowKeys = _a.disableArrowKeys, checkmark = _a.checkmark, listAttrs = _a.listAttrs;\r\n            var listItem = itemRender(item, index);\r\n            listItem.attrs = listItem.attrs || {};\r\n            listItem.attrs.onclick = function (e) { return _this.handleSelect(index, listItem.attrs.disabled, e); };\r\n            if (!disableArrowKeys && _this.activeIndex === index) {\r\n                listItem.attrs.class = classnames(listItem.attrs.className, listItem.attrs.class, Classes.ACTIVE);\r\n            }\r\n            if (listItem.tag === ListItem) {\r\n                if (listItem.attrs.selected && checkmark) {\r\n                    listItem.attrs.contentLeft = m(Icon, {\r\n                        name: Icons.CHECK,\r\n                        size: listAttrs.size\r\n                    });\r\n                }\r\n            }\r\n            return listItem;\r\n        };\r\n        _this.handleInput = function (e) {\r\n            _this.handleSearchDebounce(e);\r\n            e.redraw = false;\r\n        };\r\n        _this.handleSearchDebounce = debounce(function (e) {\r\n            var value = e.target.value;\r\n            _this.updateQuery(value);\r\n            _this.filteredItems = _this.getFilteredItems();\r\n            _this.updateActiveIndex(0);\r\n            m.redraw();\r\n        }, 200);\r\n        _this.handleInputClear = function () {\r\n            _this.updateQuery('');\r\n            _this.updateActiveIndex(0);\r\n            _this.filteredItems = _this.getFilteredItems();\r\n            _this.scrollToActiveItem();\r\n            if (_this.inputEl) {\r\n                _this.inputEl.focus();\r\n            }\r\n        };\r\n        _this.handleSelect = function (index, isDisabled, e) {\r\n            var onSelect = _this.attrs.onSelect;\r\n            var target = e.target;\r\n            var selectedItem = _this.filteredItems[index];\r\n            var actionsEl = getClosest(target, \".\" + Classes.LIST_ITEM_CONTENT_RIGHT);\r\n            if (selectedItem != null && !actionsEl && !isDisabled) {\r\n                _this.updateActiveIndex(index);\r\n                safeCall(onSelect, selectedItem, e, index);\r\n            }\r\n            else\r\n                e.redraw = false;\r\n        };\r\n        _this.handleKeyDown = function (e) {\r\n            var key = e.which;\r\n            switch (key) {\r\n                case Keys.ARROW_UP:\r\n                case Keys.ARROW_DOWN:\r\n                    if (!_this.attrs.disableArrowKeys) {\r\n                        e.preventDefault();\r\n                        _this.moveActiveIndex(key === Keys.ARROW_UP ? 'up' : 'down');\r\n                        m.redraw();\r\n                    }\r\n                    break;\r\n                case Keys.ESCAPE:\r\n                    if (_this.query) {\r\n                        _this.handleInputClear();\r\n                        m.redraw();\r\n                    }\r\n                    break;\r\n                case Keys.ENTER:\r\n                    _this.handleEnterKey(e);\r\n                    m.redraw();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            e.redraw = false;\r\n        };\r\n        return _this;\r\n    }\r\n    QueryList.ofType = function () {\r\n        return QueryList;\r\n    };\r\n    QueryList.prototype.getDefaultAttrs = function () {\r\n        return {\r\n            cacheItems: true,\r\n            checkmark: true,\r\n            inputAttrs: {},\r\n            listAttrs: {},\r\n            filterable: true,\r\n            controlGroupAttrs: {},\r\n            emptyContent: 'No items available.'\r\n        };\r\n    };\r\n    QueryList.prototype.oninit = function (vnode) {\r\n        _super.prototype.oninit.call(this, vnode);\r\n        this.query = this.attrs.defaultQuery || '';\r\n        this.activeIndex = this.attrs.defaultActiveIndex || 0;\r\n        this.setControlledAttrs();\r\n        this.filteredItems = this.getFilteredItems();\r\n    };\r\n    QueryList.prototype.oncreate = function (_a) {\r\n        var dom = _a.dom;\r\n        this.listEl = dom.querySelector(\".\" + Classes.LIST);\r\n        this.inputEl = dom.querySelector(\".\" + Classes.INPUT);\r\n        this.scrollToActiveItem();\r\n    };\r\n    QueryList.prototype.onbeforeupdate = function (vnode, old) {\r\n        _super.prototype.onbeforeupdate.call(this, vnode, old);\r\n        this.setControlledAttrs();\r\n        if (vnode.attrs.items !== old.attrs.items ||\r\n            vnode.attrs.query !== old.attrs.query ||\r\n            vnode.attrs.activeIndex !== old.attrs.activeIndex ||\r\n            !vnode.attrs.cacheItems) {\r\n            this.filteredItems = this.getFilteredItems();\r\n            this.scrollToActiveItem();\r\n        }\r\n    };\r\n    QueryList.prototype.view = function () {\r\n        var _a = this.attrs, activeIndex = _a.activeIndex, cacheItems = _a.cacheItems, checkmark = _a.checkmark, className = _a.class, controlGroupAttrs = _a.controlGroupAttrs, contentLeft = _a.contentLeft, contentRight = _a.contentRight, defaultActiveIndex = _a.defaultActiveIndex, defaultQuery = _a.defaultQuery, emptyContent = _a.emptyContent, eventCallbacks = _a.eventCallbacks, filterable = _a.filterable, initialContent = _a.initialContent, inputAttrs = _a.inputAttrs, itemPredicate = _a.itemPredicate, itemListPredicate = _a.itemListPredicate, itemListRender = _a.itemListRender, itemRender = _a.itemRender, items = _a.items, listAttrs = _a.listAttrs, onActiveItemChange = _a.onActiveItemChange, onSelect = _a.onSelect, query = _a.query, onQueryChange = _a.onQueryChange, htmlAttrs = __rest(_a, [\"activeIndex\", \"cacheItems\", \"checkmark\", \"class\", \"controlGroupAttrs\", \"contentLeft\", \"contentRight\", \"defaultActiveIndex\", \"defaultQuery\", \"emptyContent\", \"eventCallbacks\", \"filterable\", \"initialContent\", \"inputAttrs\", \"itemPredicate\", \"itemListPredicate\", \"itemListRender\", \"itemRender\", \"items\", \"listAttrs\", \"onActiveItemChange\", \"onSelect\", \"query\", \"onQueryChange\"]);\r\n        var classes = classnames(Classes.QUERY_LIST, checkmark && Classes.QUERY_LIST_CHECKMARK, className);\r\n        safeCall(eventCallbacks, { handleKeyDown: this.handleKeyDown });\r\n        var innerContent = [\r\n            filterable && this.renderControlGroup(),\r\n            this.renderList()\r\n        ];\r\n        return m('', __assign(__assign({}, htmlAttrs), { class: classes, onkeydown: this.handleKeyDown, tabindex: 0 }), innerContent);\r\n    };\r\n    QueryList.prototype.renderControlGroup = function () {\r\n        var _a = this.attrs, inputAttrs = _a.inputAttrs, controlGroupAttrs = _a.controlGroupAttrs, contentLeft = _a.contentLeft, contentRight = _a.contentRight;\r\n        return m(ControlGroup, __assign(__assign({}, this.attrs.controlGroupAttrs), { class: classnames(Classes.FLUID, controlGroupAttrs.class) }), [\r\n            contentLeft,\r\n            m(Input, __assign(__assign({ placeholder: 'Search items...' }, inputAttrs), { oninput: this.handleInput, contentRight: (this.query.length !== 0)\r\n                    ? m(Icon, {\r\n                        name: Icons.X,\r\n                        onclick: this.handleInputClear\r\n                    })\r\n                    : inputAttrs.contentRight, value: this.query })),\r\n            contentRight\r\n        ]);\r\n    };\r\n    QueryList.prototype.renderList = function () {\r\n        var _a = this.attrs, listAttrs = _a.listAttrs, emptyContent = _a.emptyContent, initialContent = _a.initialContent;\r\n        this.itemNodes = this.filteredItems.map(this.renderItem);\r\n        var isEmpty = this.filteredItems.length === 0;\r\n        var hasInitialContent = initialContent && this.query === '';\r\n        var classes = classnames(isEmpty && Classes.QUERY_LIST_EMPTY, hasInitialContent && Classes.QUERY_LIST_INITIAL, listAttrs.class);\r\n        var emptyOrInitialContent = m(\".\" + Classes.QUERY_LIST_MESSAGE, (hasInitialContent && !isEmpty) && initialContent, isEmpty && emptyContent);\r\n        var content = (hasInitialContent || isEmpty)\r\n            ? emptyOrInitialContent\r\n            : this.itemNodes;\r\n        return m(List, __assign(__assign({}, listAttrs), { class: classes }), content);\r\n    };\r\n    QueryList.prototype.setControlledAttrs = function () {\r\n        var _a = this.attrs, activeIndex = _a.activeIndex, query = _a.query;\r\n        if (query != null) {\r\n            this.query = query;\r\n        }\r\n        if (activeIndex != null) {\r\n            this.activeIndex = activeIndex === -1 ? 0 : activeIndex;\r\n        }\r\n    };\r\n    QueryList.prototype.scrollToActiveItem = function () {\r\n        var _a = this, listEl = _a.listEl, activeIndex = _a.activeIndex;\r\n        if (listEl && activeIndex >= 0) {\r\n            var activeEl = listEl.children[activeIndex];\r\n            if (!activeEl)\r\n                return;\r\n            var activeTop = activeEl.offsetTop, activeHeight = activeEl.offsetHeight;\r\n            var listScrollTop = listEl.scrollTop, listHeight = listEl.clientHeight;\r\n            var activeBottomEdge = activeTop + activeHeight;\r\n            var activeTopEdge = activeTop;\r\n            if (activeBottomEdge >= listScrollTop + listHeight) {\r\n                listEl.scrollTop = activeBottomEdge + activeHeight - listHeight;\r\n            }\r\n            else if (activeTopEdge <= listScrollTop) {\r\n                listEl.scrollTop = activeTopEdge - activeHeight;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(QueryList.prototype, \"activeItem\", {\r\n        get: function () {\r\n            return this.filteredItems[this.activeIndex];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryList.prototype.updateQuery = function (text) {\r\n        var _a = this.attrs, query = _a.query, onQueryChange = _a.onQueryChange;\r\n        if (query != null) {\r\n            safeCall(onQueryChange, text);\r\n        }\r\n        else\r\n            this.query = text;\r\n    };\r\n    QueryList.prototype.moveActiveIndex = function (direction) {\r\n        var activeIndex = this.activeIndex;\r\n        var index = getNextIndex(activeIndex, this.itemNodes, direction);\r\n        this.updateActiveIndex(index);\r\n        this.scrollToActiveItem();\r\n    };\r\n    QueryList.prototype.updateActiveIndex = function (index) {\r\n        var _a = this.attrs, activeIndex = _a.activeIndex, onActiveItemChange = _a.onActiveItemChange;\r\n        var currentIndex = index > this.filteredItems.length ? 0 : index;\r\n        if (activeIndex != null) {\r\n            safeCall(onActiveItemChange, this.activeItem, currentIndex);\r\n        }\r\n        else\r\n            this.activeIndex = currentIndex;\r\n    };\r\n    QueryList.prototype.handleEnterKey = function (e) {\r\n        var item = this.activeItem;\r\n        if (item != null) {\r\n            safeCall(this.attrs.onSelect, item, e);\r\n        }\r\n    };\r\n    QueryList.prototype.getFilteredItems = function () {\r\n        var _this = this;\r\n        var _a = this.attrs, items = _a.items, itemPredicate = _a.itemPredicate, itemListPredicate = _a.itemListPredicate;\r\n        if (isFunction(itemListPredicate)) {\r\n            return itemListPredicate(this.query, items);\r\n        }\r\n        if (isFunction(itemPredicate)) {\r\n            return items.filter(function (item, index) { return itemPredicate(_this.query, item, index); });\r\n        }\r\n        return items;\r\n    };\r\n    return QueryList;\r\n}(AbstractComponent));\r\nexport { QueryList };\r\nfunction getNextIndex(currentIndex, vnodes, direction) {\r\n    var maxIndex = vnodes.length - 1;\r\n    var index = currentIndex;\r\n    var flag = true;\r\n    if (index < 0 || maxIndex <= 0) {\r\n        return 0;\r\n    }\r\n    while (flag) {\r\n        index = direction === 'up'\r\n            ? index === 0 ? maxIndex : index - 1\r\n            : index === maxIndex ? 0 : index + 1;\r\n        var vnode = vnodes[index];\r\n        var attrs = vnode && vnode.attrs;\r\n        if (attrs && !attrs.disabled) {\r\n            flag = false;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n","import { __assign, __extends, __rest } from \"tslib\";\r\nimport m from 'mithril';\r\nimport classnames from 'classnames';\r\nimport { Classes, safeCall } from '../../_shared';\r\nimport { Popover } from '../popover';\r\nimport { AbstractComponent } from '../abstract-component';\r\nimport { Spinner } from '../spinner';\r\nimport { QueryList } from '../query-list';\r\nvar SelectList = /** @class */ (function (_super) {\r\n    __extends(SelectList, _super);\r\n    function SelectList() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.queryList = QueryList.ofType();\r\n        _this.activeIndex = 0;\r\n        _this.handleActiveItemChange = function (activeItem, index) {\r\n            _this.activeIndex = index;\r\n            safeCall(_this.attrs.onActiveItemChange, activeItem, index);\r\n        };\r\n        _this.handleSelect = function (item, e, index) {\r\n            var _a = _this.attrs, onSelect = _a.onSelect, closeOnSelect = _a.closeOnSelect;\r\n            if (closeOnSelect) {\r\n                _this.isOpen = false;\r\n            }\r\n            safeCall(onSelect, item, e, index);\r\n        };\r\n        _this.handlePopoverInteraction = function (nextOpenState, e) {\r\n            var _a = _this.attrs.popoverAttrs, isOpen = _a.isOpen, onInteraction = _a.onInteraction;\r\n            if (isOpen != null) {\r\n                safeCall(onInteraction, nextOpenState, e);\r\n            }\r\n            else\r\n                _this.isOpen = nextOpenState;\r\n        };\r\n        return _this;\r\n    }\r\n    SelectList.ofType = function () {\r\n        return SelectList;\r\n    };\r\n    SelectList.prototype.getDefaultAttrs = function () {\r\n        return {\r\n            closeOnSelect: true,\r\n            popoverAttrs: {},\r\n            inputAttrs: {}\r\n        };\r\n    };\r\n    SelectList.prototype.oninit = function (vnode) {\r\n        _super.prototype.oninit.call(this, vnode);\r\n        var _a = vnode.attrs.popoverAttrs, isOpen = _a.isOpen, defaultIsOpen = _a.defaultIsOpen;\r\n        this.isOpen = isOpen != null ? isOpen : defaultIsOpen != null ? defaultIsOpen : false;\r\n    };\r\n    SelectList.prototype.onbeforeupdate = function (vnode, old) {\r\n        _super.prototype.onbeforeupdate.call(this, vnode, old);\r\n        var isOpen = vnode.attrs.popoverAttrs.isOpen;\r\n        var wasOpen = old.attrs.popoverAttrs.isOpen;\r\n        if (isOpen && !wasOpen) {\r\n            this.isOpen = true;\r\n        }\r\n        else if (!isOpen && wasOpen) {\r\n            this.isOpen = false;\r\n        }\r\n    };\r\n    SelectList.prototype.view = function () {\r\n        var _a = this.attrs, className = _a.class, popoverAttrs = _a.popoverAttrs, header = _a.header, footer = _a.footer, trigger = _a.trigger, closeOnSelect = _a.closeOnSelect, loading = _a.loading, queryListAttrs = __rest(_a, [\"class\", \"popoverAttrs\", \"header\", \"footer\", \"trigger\", \"closeOnSelect\", \"loading\"]);\r\n        var queryList = m(this.queryList, __assign(__assign({ activeIndex: this.activeIndex, onActiveItemChange: this.handleActiveItemChange }, queryListAttrs), { inputAttrs: __assign(__assign({}, queryListAttrs.inputAttrs), { autofocus: true }), onSelect: this.handleSelect }));\r\n        var content = [\r\n            header,\r\n            m(Spinner, {\r\n                active: loading,\r\n                background: true,\r\n                fill: true\r\n            }),\r\n            queryList,\r\n            footer\r\n        ];\r\n        return m(Popover, __assign(__assign({ autofocus: true, position: 'bottom-start', closeOnEscapeKey: false }, popoverAttrs), { class: classnames(Classes.SELECT_LIST, className, popoverAttrs.class), isOpen: this.isOpen, content: content, onInteraction: this.handlePopoverInteraction, trigger: trigger }));\r\n    };\r\n    return SelectList;\r\n}(AbstractComponent));\r\nexport { SelectList };\r\n","import m from 'mithril'\nimport { Transport } from 'tone'\nimport { Observable } from './components'\nimport { NDecimal } from '../utils'\nimport { Button, ControlGroup } from 'construct-ui'\nimport { Stream } from '../types'\n\nexport const BpmInc = m(Button, {\n  label: '+',\n  onclick: () => {\n    let bpm = Transport.bpm.value + 10\n    Transport.bpm.rampTo(bpm, 1)\n  },\n})\nexport const BpmDec = m(Button, {\n  label: '-',\n  onclick: () => {\n    let bpm = Transport.bpm.value - 10\n    Transport.bpm.rampTo(bpm, 1)\n  },\n})\n\nexport const BpmSlider = (bpm: Stream) =>\n  m('input[type=range]', {\n    min: 1,\n    max: 200,\n    value: Transport.bpm.value,\n    oninput: ({ target }) => {\n      let newBpm = Number(target.value)\n      Transport.set({ bpm: newBpm })\n    },\n    oncreate: ({ dom }) => {\n      bpm.map(v => {\n        dom.value = v\n      })\n    },\n  })\n\nexport const BpmValue = (bpm: Stream) => m(Observable(NDecimal(bpm, 1)))\n\nexport const Bpm = ({ bpm }) =>\n  m(ControlGroup, { class: 'container' }, [\n    BpmDec,\n    BpmValue(bpm),\n    BpmInc,\n    BpmSlider(bpm),\n  ])\n","import m from 'mithril'\nimport { Button, ButtonGroup, Icons, ListItem, SelectList } from 'construct-ui'\n\nlet selected: String[] = []\n\nexport const Menu = {\n  view: vnode =>\n    m(ButtonGroup, {}, [\n      m(SelectList, {\n        items: ['1', '2', '3'],\n        label: 'select',\n        trigger: m(Button, {\n          iconLeft: Icons.CHEVRONS_DOWN,\n          label: 'select MIDI device',\n        }),\n        onSelect: item => {\n          let index = selected.indexOf(item)\n          if (index > -1) {\n            selected.splice(index, 1)\n          } else {\n            selected.push(item)\n          }\n          console.log('selected', item, index)\n        },\n        itemRender: item =>\n          m(ListItem, {\n            label: item,\n            selected: selected.indexOf(item) > -1,\n          }),\n      }),\n      m(Button, {\n        iconLeft: Icons.APERTURE,\n        label: 'button',\n      }),\n      m(Button, {\n        iconLeft: Icons.SETTINGS,\n        label: 'settings',\n      }),\n    ]),\n}\n"],"names":["$65d5daca13f5010c$var$m","$2OLZF","apply","this","arguments","m","trust","fragment","Fragment","mount","$7EF0O","route","parcelRequire","render","redraw","request","$ckIvN","jsonp","parseQueryString","buildQueryString","parsePathname","buildPathname","vnode","PromisePolyfill","censor","module","exports","$iVcuU","$dc673ea23ab51a3f$var$selectorParser","$dc673ea23ab51a3f$var$selectorCache","$dc673ea23ab51a3f$var$isEmpty","object","key","$9eOch","call","$dc673ea23ab51a3f$var$compileSelector","selector","match","tag","classes","attrs","exec","type","value","id","push","attrValue","replace","length","className","join","$dc673ea23ab51a3f$var$execSelector","state","hasClass","class","newAttrs","String","view","Error","$5sRXF","children","$dBs8J","normalizeChildren","$9e748f0e7cb702a5$var$Vnode","text","dom","domSize","undefined","events","instance","normalize","node","Array","isArray","input","isKeyed","i","TypeError","start","hasOwnProperty","html","window","$2uPnQ","Promise","$k7iQv","prototype","finally","$parcel$global","$ea53147a45dc1bd2$var$PromisePolyfill","executor","self","resolvers","rejectors","resolveCurrent","handler","rejectCurrent","_instance","callAsync","setImmediate","setTimeout","list","shouldAbsorb","execute","then","console","error","retry","executeOnce","bind","e","runs","run","fn","onerror","onFulfilled","onRejection","resolveNext","rejectNext","handle","callback","next","promise","resolve","reject","catch","reason","all","total","count","values","i1","consume","race","$j25vk","requestAnimationFrame","$window","currentRedraw","$doc","document","nameSpace","svg","math","getNameSpace","xmlns","checkState","original","callHook","activeElement","createNodes","parent","vnodes","end","hooks","nextSibling","ns","createNode","initLifecycle","createTextNode","insertNode","createText","createHTML","createDocumentFragment","firstChild","childNodes","createFragment","is","element","createElementNS","createElement","setAttribute","isFileInput","setAttr","setAttrs","maybeSetContentEditable","selectedIndex","normalized","setLateSelectAttrs","sentinel","Object","create","$$reentrantLock$$","initComponent","createComponent","possibleParents","caption","thead","tbody","tfoot","tr","th","td","colgroup","col","temp","innerHTML","child","appendChild","updateNodes","old","removeNodes","isOldKeyed","oldStart","o","v","oe","ve","topSibling","oldEnd","updateNode","getNextSibling","moveNodes","map","lisIndices","originalNextSibling","vnodesLength","oldIndices","li","pos","matched","getKeyMap","oldIndex","a","result","u","il","lisTemp","j","c","makeLisIndices","commonLength","removeNode","oldTag","force","onbeforeupdate","shouldNotUpdate","updateLifecycle","toString","nodeValue","updateText","removeHTML","updateHTML","updateFragment","warn","val","removeAttr","updateAttrs","updateElement","updateComponent","frag","moveChildToFrag","parentNode","insertBefore","contenteditable","contentEditable","content","stateResult","attrsResult","mask","onbeforeremove","reallyRemove","onremove","removeChild","isLifecycleMethod","attr","isFormAttribute","updateEvent","slice","setAttributeNS","updateStyle","hasPropertyKey","removeAttribute","nsLastIndex","indexOf","currentDOM","uppercaseRegex","toLowerCase","capital","normalizeKey","style","cssText","setProperty","removeProperty","EventDict","_","removeEventListener","addEventListener","source","oninit","oncreate","onupdate","handleEvent","ev","currentTarget","preventDefault","stopPropagation","contains","prevRedraw","prevDOM","active","namespace","namespaceURI","textContent","focus","schedule","subscriptions","pending","offset","sync","root","component","index","splice","oncompletion","callbackCount","PromiseProxy","makeRequest","factory","url","args","promise1","$cITMw","params","data","background","complete","wrap","constructor","hasHeader","name","headers","__proto__","replacedAbort","method","toUpperCase","body","assumeJSON","serialize","JSON","FormData","URLSearchParams","responseType","extract","xhr","XMLHttpRequest","aborted","isTimeout","abort","open","async","user","password","setRequestHeader","deserialize","withCredentials","timeout","onreadystatechange","target","readyState","message","success","status","test","response","parse","responseText","completeErrorResponse","code","ontimeout","config","send","stringify","callbackName","Math","round","random","script","src","encodeURIComponent","callbackKey","documentElement","template","SyntaxError","queryIndex","hashIndex","queryEnd","pathEnd","path","query","$enXzN","resolved","variadic","newQueryIndex","newHashIndex","newQueryEnd","newPathEnd","querystring","$iRA82","key1","destructure","assign","$aae70388e69e8325$var$sentinel","$aae70388e69e8325$var$decodeURIComponentSave","decodeURIComponent","mountRedraw","compiled","fallbackRoute","currentPath","lastUpdate","p","scheduled","ready","state1","currentResolver","RouterRoot","fireAsync","resolveRoute","SKIP","route1","prefix","location","hash","search","pathname","concat","$7lWrV","setPath","history","loop","check","payload","matchedRoute","localComp","update","comp","onmatch","options","title","replaceState","pushState","href","defaultRoute","routes","keys","$8KlxE","defaultData","some","ReferenceError","set","get","Link","onclick","$e9o88","disabled","Boolean","defaultPrevented","button","which","ctrlKey","metaKey","shiftKey","altKey","param","$gZZfO","$c601dba597649f5e$var$decodeURIComponentSave","str","err","string","charAt","entries","split","counters","entry","levels","cursor","pop","level","nextLevel","isNumber","isNaN","parseInt","desc","getOwnPropertyDescriptor","templateData","templateKeys","regexp","RegExp","extra","k","r","$a4d49fb46380177c$var$magic","extras","$8K4aD","$57bb22b35e2b50f7$var$synth","t1","t2","arr","len","arr2","default","__esModule","t3","t4","Constructor","t5","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","t6","_i","Symbol","iterator","_s","_e","_arr","_n","_d","done","return","t","t7","e3","s","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","t8","e4","s2","arrayLikeToArray","minLen","n","from","t9","e5","s3","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","timeConstant","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","floor","upperIndex","ceil","isSetTargetAutomationEvent","AutomationEventList","_Symbol$iterator","_automationEvents","_currenTime","_defaultValue","eventTime","findIndex","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","obj","prop","toStringTag","n1","s1","AMOscillator","Yo","AMSynth","Cr","Abs","ur","Add","sr","AmplitudeEnvelope","Sr","Analyser","Xa","AudioToGain","Zo","AutoFilter","ua","AutoPanner","da","AutoWah","_a","BaseContext","Ci","BiquadFilter","Dr","BitCrusher","ga","Buffer","Dc","BufferSource","Mc","Buffers","Oc","Channel","sc","Chebyshev","ya","Chorus","Sa","Clock","vo","Compressor","cc","Context","Di","Convolver","fc","CrossFade","ca","DCMeter","Ja","Delay","yo","Destination","yc","Distortion","ka","Draw","Sc","DuoSynth","Rr","EQ3","dc","Emitter","Ai","Envelope","xr","FFT","Ha","FMOscillator","$o","FMSynth","qr","FatOscillator","Jo","FeedbackCombFilter","Br","FeedbackDelay","Ca","Filter","Or","Follower","fa","Freeverb","Ra","Frequency","Ji","FrequencyClass","Yi","FrequencyEnvelope","Mr","FrequencyShifter","Oa","Gain","ho","GainToAudio","pr","Gate","hc","GrainPlayer","lr","GreaterThan","mr","GreaterThanZero","_r","IntervalTimeline","Co","JCReverb","Va","LFO","or","Limiter","lc","Listener","bc","Loop","$r","LowpassCombFilter","Gr","Master","xc","MembraneSynth","Vr","Merge","wa","MetalSynth","Ir","Meter","$a","MidSideCompressor","uc","MidSideMerge","Ba","MidSideSplit","Wa","Midi","To","MidiClass","bo","Mono","nc","MonoSynth","Er","MultibandCompressor","pc","MultibandSplit","ic","Multiply","Xo","Negate","dr","Noise","No","NoiseSynth","Nr","Offline","xo","OfflineContext","qi","OmniOscillator","er","OnePoleFilter","Ur","Oscillator","Uo","PWMOscillator","Ko","PanVol","ec","Panner","pa","Panner3D","rc","Param","no","Part","Hr","Pattern","ra","Phaser","La","PingPongDelay","Pa","PitchShift","ja","Player","cr","Players","hr","PluckSynth","Qr","PolySynth","Zr","Pow","gr","PulseOscillator","Ho","Recorder","ac","Reverb","za","Sampler","Xr","Scale","nr","ScaleExp","vr","Sequence","aa","Signal","po","Solo","tc","Split","xa","StateTimeline","so","StereoWidener","Ga","Subtract","fr","SyncedSignal","yr","Synth","kr","Ticks","ko","TicksClass","So","Time","Xi","TimeClass","Zi","Timeline","wi","ToneAudioBuffer","Ri","ToneAudioBuffers","wo","ToneAudioNode","io","ToneBufferSource","Vo","ToneEvent","Yr","ToneOscillatorNode","Bo","Transport","gc","TransportTime","to","TransportTimeClass","Ki","Tremolo","Qa","Unit","e11","UserMedia","zo","Vibrato","Za","Volume","Oo","WaveShaper","Qo","Waveform","Ka","Zero","ir","connect","ro","connectSeries","oo","connectSignal","fo","context","Ac","dbToGain","ji","debug","t14","defaultArg","pi","disconnect","ao","fanIn","co","ftom","Bi","gainToDb","Li","getContext","Vi","getDestination","wc","getDraw","kc","getListener","Tc","getTransport","vc","immediate","mc","intervalToFrequencyRatio","zi","Ln","isBoolean","jn","isDefined","In","isFunction","Vn","isNote","Wn","Nn","isObject","Pn","isString","zn","isUndef","Fn","loaded","Cc","mtof","Gi","now","_c","optionsFromArguments","ui","setContext","Ni","Pi","supported","qn","version","i2","assert","Bn","assertContextRunning","Gn","assertRange","Un","assertUsedScheduleTime","Yn","enterScheduledCallback","Xn","log","Jn","setLogger","Hn","Kn","o2","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","WeakMap","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","URL","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","constructible","Proxy","getValueForKey","pickElementFromSet","predicate","matchingElements","filter","matchingElement","delete","deletePassiveInputConnectionToAudioNode","passiveInputs","output","passiveInputConnections","matchingConnection","passiveInputConnection","size","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","has","add","forEach","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","DOMException","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","F1","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","P1","buffer","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","trace","includes","audioParams","parameters","Q","detune","frequency","gain","pan","audioParamConnections","deactivateAudioGraph","destination","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","ignoreDuplicates","lmnt","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","Set","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","nativeAudioWorkletNodeConstructor","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","event","chnnlDt","inputBuffer","sample","stop","visitEachAudioNodeOnce","cycles","visitor","counts","Map","cycle","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","clear","filteredConnections","deleteInputsOfAudioNode","isOffline","listener","isActive","deleteInputsOfAudioParam","ReadOnlyMap","_map","thisArg","ut","numberOfInputs","numberOfOutputs","parameterData","processorOptions","copyFromChannel","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","processBuffer","proxy","renderedBuffer","nativeOfflineAudioContext","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","reduce","sum","processedBuffer","sampleRate","audioNodeConnections","audioWorkletProcessor","nodeToProcessorMap","nativeAudioWorkletNode","outputs","prmtrs","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","dispatchEvent","ErrorEvent","colno","filename","lineno","mt","gt","vt","yt","xt","disableNormalization","detachArrayBuffer","arrayBuffer","port1","port2","MessageChannel","closeAndResolve","onmessage","close","postMessage","bt","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","St","attack","knee","ratio","release","threshold","kt","createInvalidStateError","createInvalidAccessError","Dt","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","Mt","testPromiseSupport","uint32Array","Uint32Array","decodeAudioData","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","max","min","log2","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","interceptConnections","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","b","denominator","evaluatePolynomial","coefficient","z","createNativeScriptProcessorNode","bufferSize","createNotSupportedError","Xt","Yt","periodicWave","$t","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","Ht","Jt","createUnknownError","te","curve","oversample","getFirstSample","isDCCurve","overwriteAccessors","property","createGetter","createSetter","getPrototypeOf","setValueAtTimeUntilPossible","setValueAtTime","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","testDomExceptionConstructorSupport","testTransferablesSupport","ArrayBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","wrapEventListener","defineProperties","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","cacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","xe","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","getAudioNodeRenderer","renderer","renderInputsOfAudioNode","audioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","renderedNativeAnalyserNode","getNativeContext","contextStore","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","isNativeOfflineAudioContext","anything","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","nativeAudioContextConstructor","AudioContext","webkitAudioContext","isNativeAudioContext","qe","AudioNode","isNativeAudioParam","AudioParam","AudioWorkletNode","audioNodeConstructor","audioNodeConnectionsStore","addAudioNodeConnections","addConnectionToAudioNode","tailTimeTimeoutIds","eventListeners","partialConnection","tailTime","tailTimeTimeoutId","clearTimeout","createIncrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","decrementCycleCounter","detectCycles","chain","nextLink","mergedCycles","nestedCycles","super","_context","_nativeAudioNode","isPassive","nativeAudioParam","maxValue","destinations","audioNodeConnectionsOfSource","analyserNodeConstructor","audionNodeConstructor","mergedOptions","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","convertNumberToUnsignedLong","unit32Array","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","wrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","static","hasInstance","addSilentConnection","renderInputsOfAudioParam","connectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","clampedOffset","nullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","minValue","automationEventList","audioParamRenderer","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueCurveAtTime","currentTime","cancelAndHoldAtTime","flush","previousLastEvent","currentLastEvent","cancelScheduledValues","Number","isFinite","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","audioParamConnectionsStore","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","onended","wrappedListener","nativeOnEnded","resetInternalStateToPassive","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","renderedNativeAudioDestinationNodes","renderedNativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","isNodeOfNativeOfflineAudioContext","gainNode","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","setAudioNodeTailTime","biquadFilterNodeConstructor","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","wrapChannelMergerNode","channelMergerNode","audioBufferSourceNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createChannelMergerNodeRenderer","renderedNativeAudioNodes","channelMergerNodeConstructor","createChannelSplitterNodeRenderer","channelSplitterNodeConstructor","sanitizeChannelSplitterOptions","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createConstantSourceNodeRenderer","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","constantSourceNodeConstructor","createConstantSourceNodeRendererFactory","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createNativeConvolverNode","nativeConvolverNode","createConvolver","createConvolverNodeRenderer","renderedNativeConvolverNodes","renderedNativeConvolverNode","convolverNodeConstructor","_nativeConvolverNode","createDelayNodeRenderer","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","delayNodeConstructor","_delayTime","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createDynamicsCompressorNodeRenderer","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","dynamicsCompressorNodeConstructor","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createGainNodeRenderer","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","gainNodeConstructor","createNativeIIRFilterNodeFaker","convertedFeedback","Float64Array","convertedFeedforward","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","fill","outputBuffer","nyquist","omega","PI","cos","sin","sqrt","atan2","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","filteredBuffer","createNativeIIRFilterNode","iIRFilterNodeConstructor","_nativeIIRFilterNode","createAudioListener","nativeListener","forwardX","forwardY","forwardZ","upX","upY","upZ","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","orientation","setOrientation","positon","setPosition","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNode","nativePannerNode","createPannerNodeRenderer","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","pannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createNativePeriodicWave","imag","real","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","periodicWaveConstructor","periodicWaveStore","PeriodicWave","nativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","stereoPannerNodeConstructor","_pan","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","waveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","isSecureContext","currentFrame","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","addAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","audioWorklet","absoluteUrl","evaluateAudioWorkletGlobalScope","_AWGS","trim","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","blob","Blob","createObjectURL","addModule","nativeContextOrBackupOfflineAudioContext","revokeObjectURL","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","head","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","onload","fetch","ok","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","audioWorkletNode","oscillator","port","onprocessorerror","isNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","audioData","fail","baseAudioContextConstructor","_audioWorklet","constraints","successCallback","errorCallback","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","createMediaElementSource","mediaElement","_nativeMediaElementAudioSourceNode","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","createMediaStreamDestination","_nativeMediaStreamAudioDestinationNode","stream","mediaStreamAudioSourceNodeConstructor","nativeMediaStreamAudioSourceNode","mediaStream","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","_nativeMediaStreamAudioSourceNode","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrack","createMediaStreamTrackSource","kind","mediaStreamTrackAudioSourceNodeConstructor","audioContextConstructor","latencyHint","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","resume","resolvePromise","suspend","getUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","connectMultipleOutputs","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessorPromise","audioWorkletNodeOptions","clonedAudioWorkletNodeOptions","onmessageerror","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNode","createAudioWorkletNodeRenderer","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","getBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","audioWorkletNodeConstructor","sanitizeAudioWorkletNodeOptions","testAudioWorkletNodeOptionsClonability","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createNativeOfflineAudioContext","offlineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","isAnyAudioContext","isAnyAudioNode","audioNodeStore","isAnyAudioParam","isAnyOfflineAudioContext","isSupported","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testConvolverNodeChannelCountSupport","testDomExceptionContrucorSupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","audioContext","isAudioContextClosable","isPending","isCallingProcess","POSITIVE_INFINITY","stereoPanner","arg","statement","gte","lte","Infinity","isInsideScheduledCallback","printedScheduledWarning","insideCallback","defaultLogger","logger","theWindow","hasAudioContext","__decorate","decorators","Reflect","decorate","__awaiter","_arguments","P","generator","fulfilled","step","rejected","throw","Ticker","updateInterval","contextSampleRate","_callback","_type","_minimumUpdateInterval","_createClock","_createWorker","_updateInterval","toFixed","blobUrl","worker","Worker","_worker","_createTimeout","_timeout","_disposeClock","terminate","interval","dispose","isAudioParam","ri","isOfflineAudioContext","isAudioContext","noCopy","Ge","deepMerge","sources","shift","e121","defaults","argsArray","objKey","opts","given","fallback","omitFromObject","omit","Tone","_wasDisposed","TONE_DEBUG_CLASS","disposed","fi","EPSILON","GT","GTE","EQ","LT","abs","clamp","_timeline","getDefaults","memory","increasing","valueOf","lastValue","_search","diff","remove","peek","getAfter","getBefore","cancel","after","cancelBefore","previousEvent","beginning","midPoint","nextEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","forEachFrom","forEachAtTime","notifyNewContext","onContextInit","cb","notifyCloseContext","onContextClose","on","eventName","_events","once","boundCallback","off","eventList","emit","constr","toJSON","_constants","_timeouts","_timeoutIds","_initialized","_workletPromise","_latencyHint","t216","pn","_ticker","clockSource","_timeoutLoop","lookAhead","initialize","ctx","feedForward","l","transport","_transport","draw","_draw","createAudioWorkletNode","kn","rawContext","workletsAreReady","_lookAhead","getConstant","constant","firstEvent","clearInterval","setInterval","intervalFn","readOnly","noOp","reverse","load","_buffer","_reversed","_reverse","doneLoading","downloads","fromArray","isMultidimensional","channels","multiChannelArray","toMono","chanNum","toArray","outputArray","numChannels","channelArray","ret","startSamples","endSamples","retBuffer","subarray","rev","matches","extensions","extension","ext","supportsType","baseUrl","endsWith","canPlayType","Dn","_currentTime","_duration","_renderClock","asynchronous","yieldEvery","ni","dummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_element","_audioData","_name","_options","_url","_fn","_id","_interval","_val","globalContext","disposeOld","TONE_SILENCE_LOGGING","printString","db","LN10","A4","ftomf","midi","TimeBaseClass","units","defaultUnits","_units","_expressions","_getExpressions","hz","_frequencyToUnits","parseFloat","_ticksToUnits","_beatsToUnits","_getTimeSignature","dot","numericValue","scalar","number","_secondsToUnits","samples","q","fromType","_noArg","typeName","quantity","expr","matching","freq","beats","_getBpm","seconds","ticks","_getPPQ","_now","bpm","timeSignature","PPQ","toSeconds","toTicks","toFrequency","toMidi","toSamples","toMilliseconds","capture","quantize","quantTo","nextSubdivision","subdiv","percent","subdivision","toNotation","testNotations","power","closest","closestSeconds","notation","notationSeconds","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","sixteenthString","note","pitch","octave","noteNumber","noteToScaleIndex","transpose","harmonize","intervals","toNote","scaleIndexToNote","cbbb","cbb","cx","dbbb","dbb","dx","ebbb","ebb","eb","ex","fbbb","fbb","fb","f","fx","gbbb","gbb","gb","g","gx","abbb","abb","ab","ax","bbbb","bbb","bb","bx","ToneWithContext","defaultContext","sampleTime","blockTime","_getPartialProperties","attribute","member","initial","_initial","setStateAtTime","getValueAtTime","getLastState","getNextState","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","_is","_assertRange","_fromType","computedTime","before","beforeValue","previous","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","setRampPoint","currentVal","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","scaling","startingValue","segTime","valueAtTime","rampTo","subdivisions","setParam","t0","v0","v1","_internalChannels","_isAudioNode","_getInternalNodes","nodeList","_setChannelProperties","_getChannelProperties","outputNum","inputNum","toDestination","toMaster","nodes","fan","first","prev","current","srcNode","dstNode","outputNumber","inputNumber","_gainNode","OneShotSource","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","_startGain","fadeInTime","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","disposeCallback","requestIdleCallback","ToneConstantSource","_source","override","_constantSource","signal","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","sol1","sol2","ticksToTime","timeToTicks","computedDuration","startTicks","TickSignal","TickSource","_tickOffset","_ticksAtTime","_secondsAtTime","setTicksAtTime","pause","stopEvent","memoizedEvent","tmpEvent","lastState","elapsedTicks","eventToMemoize","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","forEachTickBetween","lastStateEvent","maxStartTime","nextTickTime","_lastUpdate","_boundLoop","_loop","_tickSource","mixin","maxDelayInSeconds","maxDelay","_maxDelay","_delayNode","originalContext","bufferPromise","_buffers","_loadingCount","urls","_bufferLoaded","substring","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","cancelAnimationFrame","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","getBalance","_rotateLeft","pivotNode","_rotateRight","balance","low","allNodes","traverse","searchAfter","high","_left","_right","height","point","volume","_unmutedVolume","mute","TimelineValue","TransportEvent","_eventId","_remainderTime","_once","floatTime","invoke","tickDuration","Ro","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","_createEvent","scheduleOnce","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","swing","swingSubdivision","tickTime","progress","amount","_addEvent","scheduleRepeat","eventId","item","timeline","computedAfter","offsetTicks","toggle","timeSig","startPosition","endPosition","setLoopPoints","position","remainingTicks","syncSignal","computedFreq","ratioSignal","unsyncSignal","syncedSignal","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","sched","_start","restart","_stop","stateEvent","startOffset","unsync","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","_noiseBuffers","rate","BUFFER_LENGTH","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","labelOrId","devices","enumerateDevices","_device","find","device","label","deviceId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","navigator","mediaDevices","getUserMedia","mediaStreamNode","_mediaStream","track","groupId","generateWaveform","_oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","_wave","syncFrequency","unsyncFrequency","_getCachedPeriodicWave","_periodicWaveCache","description","arrayA","arrayB","_phase","oscProps","isBasicType","cache","wave","_getRealImaginary","partial","fullPartials","periodicWaveSize","piFactor","_inverseFFT","getInitialValue","twoPi","asArray","SignalOperator","_shaper","mapping","setMap","oversampling","_norm","_mult","factor","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","modulationIndex","_widthGate","_thresh","width","_triangle","carrierType","_oscillators","_spread","spread","_forEach","osc","sourceType","_scale","_pulse","modulationFrequency","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc","sType","mType","_sum","addend","_add","_min","_max","_setRange","_stoppedValue","_clampValue","_amplitudeGain","amplitude","_stoppedSignal","_zeros","_a2g","_scaler","_setStoppedValue","currentMin","currentMax","range","valueMap","propertyKey","newValue","timeRange","_activeSources","_onload","autostart","_onSourceEnd","origDuration","implicitEnd","seek","si","_players","player","stopAll","_tick","grainSize","_grainSize","_overlap","overlap","_onstop","_abs","_multiply","_neg","subtrahend","_subtract","_gtz","comparator","_exponentScaler","_expFunc","_exponent","exponent","_exp","_lastVal","_onTick","_syncedCallback","_anchorValue","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","_getCurve","direction","curveName","EnvelopeCurves","_setCurve","curveDef","_attackCurve","_releaseCurve","_decayCurve","triggerAttack","velocity","currentValue","decayValue","decayStart","triggerRelease","triggerAttackRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","curveLen","cosineCurve","rippleCurve","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","out","bounce","Out","cosine","exponential","linear","ripple","sine","Instrument","_original_triggerAttack","_original_triggerRelease","_syncedRelease","_syncState","_syncMethod","changed","timePosition","originalMethod","Monophonic","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","Tr","envelope","computedAttack","computedDecay","ModulationSynth","modulation","modulationEnvelope","_filter","freqValues","magValues","phaseValues","filterClone","_filters","rolloff","_rolloff","rolloffNum","possibilities","cascadingCount","totalResponse","_octaves","octaves","_baseFrequency","baseFrequency","filterEnvelope","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","inharmRatios","_freqMultipliers","_amplitude","_highpass","mult","_filterFreqScaler","resonance","freqMult","pitchDecay","hertz","maxNote","noise","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","ToneAudioWorklet","workletOptions","_audioWorkletName","_dummyGain","_dummyParam","_worklet","onReady","workletName","_createFilter","oldFilter","a0","fq","_combFilter","_lowpass","dampening","_noise","attackNoise","_lfcf","delayAmount","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","releaseAll","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","_collectGarbage","activeVoices","_makeVoiceAvailable","activeVoiceIndex","firstAvail","_triggerAttack","notes","midiNote","released","_triggerRelease","_scheduleEvent","durationSeconds","sanitizedOptions","urlMap","mid","_findClosest","midiFloat","remainder","difference","closestNote","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","prob","variation","rescheduleTime","lastEvent","_event","iterations","iters","_startNote","at","timeInTicks","_restartEvent","_setAll","_testLoopBoundries","upPatternGen","numValues","downPatternGen","infiniteGen","gen","alternatingGenerator","directionUp","jumpUp","stepIndex","jumpDown","randomOnce","copy","PatternGenerator","pattern","randomIndex","_values","_pattern","_part","_seqCallback","_eventsArray","_subdivision","_createSequence","_eventsUpdated","_indexTime","_rescheduleSequence","sequence","eventOffset","e151","_panner","_split","_g2a","fade","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","LFOEffect","_lfo","depth","oct","smoothing","_smoothing","_follower","follower","_sweepRange","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","ma","_bitCrusherWorklet","BitCrusherWorklet","bits","_order","order","_getCoefficient","degree","memo","isInteger","_splitter","_merger","StereoEffect","_merge","connectEffectLeft","connectEffectRight","StereoFeedbackEffect","_feedbackL","_feedbackR","_feedbackSplit","_feedbackMerge","_depth","_lfoL","_lfoR","_delayNodeL","_delayNodeR","deviation","_distortion","distortion","deg","FeedbackEffect","_feedbackGain","PhaseShiftAllpass","offset90","_bank0","_createAllPassFilterBank","_bank1","_oneSampleDelay","bankValues","coefficients","_sine","_cosine","_sineMultiply","_cosineMultiply","_negate","_phaseShifter","combFilterTunings","allpassFilterFrequencies","_combFilters","_allpassFiltersL","_allpassFiltersR","roomSize","allpassL","allpassR","lfpf","al","ar","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","_allpassFilters","_feedbackCombFilters","_scaleRoomSize","allpass","fbcf","apf","StereoXFeedbackEffect","_leftDelay","_rightDelay","_rightPreDelay","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","_convolver","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","merge","renderPromise","_midAdd","SQRT1_2","_sideSubtract","side","_leftMult","_rightMult","MidSideEffect","_midSideMerge","_midSideSplit","_midSend","_sideSend","_midReturn","_sideReturn","connectEffectMid","connectEffectSide","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","_oneMinusWidth","_sideMult","_amplitudeL","_amplitudeR","_analysers","analyser","MeterBase","_analyser","normalRange","_rms","getLevel","aValues","vals","totalSquared","rms","getFrequencyOfIndex","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","muted","_soloed","_noSolos","_solo","_panVol","_getBus","buses","bus","sendKnob","receive","_lowMidFilter","lowFrequency","highFrequency","_recorder","MediaRecorder","mimeType","startPromise","handleStart","dataPromise","handleData","_compressor","_gt","_gate","thresh","smoothingTime","_multibandSplit","_lowGain","_midGain","_highGain","buff","norm","$57bb22b35e2b50f7$export$6c88bf799aca3d2b","$parcel$interopDefault","$38d87db881ef7ed6$export$77cea355fa80b5f4","$38d87db881ef7ed6$export$42a852a2b6b56249","$df5bef30413a053b$export$83c4d1533cc96da3","$b3c037dae7cd6b54$export$fbc7d6f7dd821b47","bars","$b3c037dae7cd6b54$export$372d388d8193ac22","$b3c037dae7cd6b54$export$3a3d96baabfd88eb","$b3c037dae7cd6b54$export$49657453eb6b1a66","$d529e68b3076f1dd$exports","a1","a2","a3","a4","a5","a6","a7","a8","a9","$a280e0dee87b2454$exports","$764c43cca5a7fae5$exports","f1","$48e6d4199ec0b2b6$var$trueFn","$9e177063c69d97ba$exports","$9e177063c69d97ba$var$_curryN","received","combined","argsIdx","combinedIdx","$e15964b6a57efd56$exports","f2","_b","$f3fea188d40ff492$exports","$48e6d4199ec0b2b6$var$inStream","$48e6d4199ec0b2b6$var$toUpdate","$48e6d4199ec0b2b6$var$order","$48e6d4199ec0b2b6$var$orderNextIdx","$48e6d4199ec0b2b6$var$flushingUpdateQueue","$48e6d4199ec0b2b6$var$flushingStreamValue","$48e6d4199ec0b2b6$var$flyd","$48e6d4199ec0b2b6$var$combine","streams","deps","depEndStreams","endStream2","$48e6d4199ec0b2b6$var$createDependentStream","depsChanged","fnArgs","listeners","$48e6d4199ec0b2b6$var$addListeners","$48e6d4199ec0b2b6$var$updateStream","$48e6d4199ec0b2b6$var$map","$48e6d4199ec0b2b6$var$boundMap","$48e6d4199ec0b2b6$var$operator_pipe","$48e6d4199ec0b2b6$var$boundChain","$48e6d4199ec0b2b6$var$chain","s4","flatEnd","internalEnded","alive","last","flatStream","combine","own","newS","endsOn","$48e6d4199ec0b2b6$var$ap","s22","s12","$48e6d4199ec0b2b6$var$boundAp","$48e6d4199ec0b2b6$var$fantasy_land_ap","$48e6d4199ec0b2b6$var$streamToString","$48e6d4199ec0b2b6$var$createStream","$48e6d4199ec0b2b6$var$updateStreamValue","hasVal","updaters","queued","ap","of","pipe","depsMet","shouldUpdate","$48e6d4199ec0b2b6$var$initialDependenciesMet","$48e6d4199ec0b2b6$var$dependenciesAreMet","returnVal","$48e6d4199ec0b2b6$var$flushUpdate","$48e6d4199ec0b2b6$var$updateLaterUsing","$48e6d4199ec0b2b6$var$findDeps","updater","nextUpdateFn","s7","$48e6d4199ec0b2b6$var$endStream","$48e6d4199ec0b2b6$var$updateListeners","lists","$48e6d4199ec0b2b6$var$markListeners","$48e6d4199ec0b2b6$var$removeListener","idx","$48e6d4199ec0b2b6$var$detachDeps","$48e6d4199ec0b2b6$var$StreamTransformer","endStream1","isStream","endS","scan","acc","s11","s21","transduce","xform","source1","res","curryN","fromPromise","flattenPromise","s5","$0b89d474933103bc$export$ca000e230c0caa3e","$48e6d4199ec0b2b6$exports","transportTime","$79372d29045e1680$exports","$5c96a02c592fcff1$var$extendStatics","d1","setPrototypeOf","$5c96a02c592fcff1$export$a8ba968b8961cb8a","__","$5c96a02c592fcff1$export$18ce0697a983be9b","$5c96a02c592fcff1$export$3c9a16f847548506","getOwnPropertySymbols","propertyIsEnumerable","hasOwn","classNames","argType","inner","$60313e3b9e75c852$exports","define","amd","$560ae065107eea8c$export$4dbe3495bda74f11","XS","SM","LG","XL","PRIMARY","NEGATIVE","POSITIVE","WARNING","ACTIVE","DISABLED","LOADING","BASIC","OUTLINED","ROUNDED","READONLY","SELECTED","INTERACTIVE","ELEVATION","HIDDEN","H1","H2","H3","H4","H5","H6","ALIGN","ALIGN_RIGHT","ALIGN_LEFT","FLUID","TEXT_MUTED","TEXT_DISABLED","FOCUS_DISABLED","COMPACT","BREADCRUMB","BREADCRUMB_ITEM","BREADCRUMB_SEPERATOR","BUTTON","BUTTON_LABEL","BUTTON_SUBLABEL","BUTTON_GROUP","BUTTON_ICON","CARD","CARD_INTERACTIVE","CALLOUT","CALLOUT_HEADER","CALLOUT_CONTENT","CALLOUT_ICON","CALLOUT_DISMISS_ICON","CHECKBOX","COLLAPSE","COLLAPSE_BODY","CONTEXT_MENU","CONTROL","CONTROL_INDICATOR","CONTROL_GROUP","CUSTOM_SELECT","CUSTOM_SELECT_TRIGGER","CUSTOM_SELECT_INPUT","CUSTOM_SELECT_HIDDEN","DIALOG","DIALOG_CLOSE_BUTTON","DIALOG_CONTENT","DIALOG_HEADER","DIALOG_BODY","DIALOG_FOOTER","DRAWER","DRAWER_CONTENT","EMPTY_STATE","EMPTY_STATE_ICON","EMPTY_STATE_CONTENT","EMPTY_STATE_HEADER","EMPTY_STATE_FILL","FORM","FORM_GROUP","FORM_LABEL","GRID","COL","INPUT_FILE","INPUT_FILE_CONTENT","INPUT_FILE_TEXT","INPUT_FILE_BUTTON","ICON","ICON_ACTION","INPUT","INPUT_GROUP","INPUT_POPOVER","INPUT_POPOVER_CONTENT","INPUT_SELECT","LIST","LIST_ITEM","LIST_ITEM_LABEL","LIST_ITEM_CONTENT_LEFT","LIST_ITEM_CONTENT_RIGHT","MENU","MENU_ITEM","MENU_DIVIDER","MENU_HEADING","OVERLAY","OVERLAY_CONTENT","OVERLAY_BACKDROP","OVERLAY_OPEN","OVERLAY_INLINE","OVERLAY_SCROLL_CONTAINER","POPOVER","POPOVER_OPEN","POPOVER_CONTENT","POPOVER_ARROW","POPOVER_TRIGGER_ACTIVE","POPOVER_BACKDROP","POPOVER_DISSMISS","POPOVER_MENU","PORTAL","QUERY_LIST","QUERY_LIST_CHECKMARK","QUERY_LIST_EMPTY","QUERY_LIST_INITIAL","QUERY_LIST_MESSAGE","RADIO","RADIO_GROUP","SELECT","SELECT_ARROW","SELECT_LIST","SPINNER","SPINNER_CONTENT","SPINNER_ICON","SPINNER_MESSAGE","SPINNER_FILL","SPINNER_ACTIVE","SPINNER_BG","SWITCH","TABLE","TABLE_BORDERED","TABLE_STRIPED","TABLE_INTERACTIVE","TAG","TAG_REMOVABLE","TAG_INPUT","TAG_INPUT_VALUES","TABS","TABS_BORDERED","TABS_ITEM","TEXT_AREA","TOAST","TOAST_MESSAGE","TOASTER","TOASTER_INLINE","TOOLTIP","TREE","TREE_NODE","TREE_NODE_LIST","TREE_NODE_CONTENT","TREE_NODE_CARET","TREE_NODE_CARET_OPEN","TREE_NODE_CARET_CLOSED","TREE_NODE_CARET_NONE","TREE_NODE_SELECTED","TREE_NODE_EXPANDED","TREE_NODE_LABEL","TREE_NODE_CONTENT_RIGHT","TREE_NODE_CONTENT_LEFT","$d1d62ecbb8386812$export$4b0075e5ea5e1f26","TAB","ENTER","SHIFT","ESCAPE","SPACE","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","$68113dfa49ce8411$export$f6e2535fb5126e54","$68113dfa49ce8411$export$175e60bb96229ece","func","$68113dfa49ce8411$export$211731fc355e9121","el","Element","msMatchesSelector","webkitMatchesSelector","ownerDocument","querySelectorAll","$68113dfa49ce8411$export$ace028f8da1a6300","overflow","top","scrollbarWidth","offsetWidth","clientWidth","$68113dfa49ce8411$export$3c0fcc112e8e7788","testElement","$68113dfa49ce8411$export$8756898546458274","attributes","$68113dfa49ce8411$export$2069c0f7afbb4fb9","containerEl","contentLeft","contentRight","containerPadding","clientHeight","contentLeftEl","paddingLeft","$68113dfa49ce8411$var$shouldAddPadding","contentRightEl","paddingRight","classList","$68113dfa49ce8411$export$c8733ae29fb53302","$792c6f1bb85322f7$export$33eb309289062be7","$792c6f1bb85322f7$export$96fb28b291d9eefa","$792c6f1bb85322f7$export$f5e9b024d089ea84","$792c6f1bb85322f7$export$2dcbb90a00fa676f","$792c6f1bb85322f7$export$8b40992ab7adada6","$792c6f1bb85322f7$export$3ea9e188ab01c845","$792c6f1bb85322f7$export$2420f2030c2aefcf","$792c6f1bb85322f7$export$7895aadd1956b1c7","$792c6f1bb85322f7$export$f1299af03a3c605a","$792c6f1bb85322f7$export$2577073a94e6b433","$792c6f1bb85322f7$export$e07990d13d62a4c5","$792c6f1bb85322f7$export$a7c1ec142e70d69d","$792c6f1bb85322f7$export$8faa0bfb783e4f95","$792c6f1bb85322f7$export$d6b976886b9bb938","$792c6f1bb85322f7$export$fd0e719468a31e9f","$792c6f1bb85322f7$export$59f214baefff6196","$792c6f1bb85322f7$export$3b80bfa1f51653e6","$792c6f1bb85322f7$export$8d4f84cc5dc5fc15","$792c6f1bb85322f7$export$c555aea97853be67","$792c6f1bb85322f7$export$e9510a4613bb01df","$792c6f1bb85322f7$export$3102bf741e6e883d","$792c6f1bb85322f7$export$c840fb87f7cd43cd","$792c6f1bb85322f7$export$9efbd9847f714012","$792c6f1bb85322f7$export$8188339dbe6c99c4","$792c6f1bb85322f7$export$5da71d022bae01b1","$792c6f1bb85322f7$export$534b560abc2bb11d","$792c6f1bb85322f7$export$d9c3752d69e5e356","$792c6f1bb85322f7$export$2202d1df9575294c","$792c6f1bb85322f7$export$22f257c25260f09c","$792c6f1bb85322f7$export$1a7b790285c84ca3","$792c6f1bb85322f7$export$bd5b6944c36df62d","$792c6f1bb85322f7$export$f01c6ff914c49906","$792c6f1bb85322f7$export$6781fbe3ae82070a","$792c6f1bb85322f7$export$c1286c4c2a7c066","$792c6f1bb85322f7$export$8cd74ce6bae0314","$792c6f1bb85322f7$export$bbdb19d3986a2390","$792c6f1bb85322f7$export$865a16a14f6d3268","$792c6f1bb85322f7$export$98e6811b31774aaa","$792c6f1bb85322f7$export$3bf9df5d61e98b9a","$792c6f1bb85322f7$export$7d65e474be175151","$792c6f1bb85322f7$export$a73d59aca32277d4","$792c6f1bb85322f7$export$86703463cbdc13c0","$792c6f1bb85322f7$export$32e24be20223d4c1","$792c6f1bb85322f7$export$c44dea1357e31512","$792c6f1bb85322f7$export$2f78c72e5aba3d71","$792c6f1bb85322f7$export$c953d1cd180adfae","$792c6f1bb85322f7$export$f905c6094a0f672","$792c6f1bb85322f7$export$c0007d962b255231","$792c6f1bb85322f7$export$dac98cecf7b6366","$792c6f1bb85322f7$export$d503df0eed5c9169","$792c6f1bb85322f7$export$7477b66f96c3cbb2","$792c6f1bb85322f7$export$c3c87597fecab492","$792c6f1bb85322f7$export$ff3d2c531020c017","$792c6f1bb85322f7$export$cf9398fb008560fe","$792c6f1bb85322f7$export$882c3be734f84f58","$792c6f1bb85322f7$export$2b4cb8204be4ae5e","$792c6f1bb85322f7$export$4e31d82ea0b583e4","$792c6f1bb85322f7$export$5edb9d9e4caf1353","$792c6f1bb85322f7$export$3f8aa14fc7e8ccf3","$792c6f1bb85322f7$export$3b479bcdf2f4e44b","$792c6f1bb85322f7$export$b8d31db27efaf164","$792c6f1bb85322f7$export$947ab78ead319c84","$792c6f1bb85322f7$export$64a0e2ec51f02eac","$792c6f1bb85322f7$export$428c0af80a7329cd","$792c6f1bb85322f7$export$ec5856072852bd7f","$792c6f1bb85322f7$export$755f8b1d570f7f4a","$792c6f1bb85322f7$export$b00f5b211a823c24","$792c6f1bb85322f7$export$61d5289867e4f305","$792c6f1bb85322f7$export$6a6dcc7e725abed4","$792c6f1bb85322f7$export$671af8f385981731","$792c6f1bb85322f7$export$d5e9b613bc4c47f","$792c6f1bb85322f7$export$92f9e1ed9114d3a6","$792c6f1bb85322f7$export$538eb2a283c0f17f","$792c6f1bb85322f7$export$368bdf0dd1b4f2a7","$792c6f1bb85322f7$export$b9c570b1cd012e0a","$792c6f1bb85322f7$export$6294dac9279a615a","$792c6f1bb85322f7$export$c78c22e4590cff9f","$792c6f1bb85322f7$export$2bc12423e8ab4562","$792c6f1bb85322f7$export$8c6de84b16e0bc74","$792c6f1bb85322f7$export$c1944a58b59f2e63","$792c6f1bb85322f7$export$5ebf4cde340e6028","$792c6f1bb85322f7$export$dcfa992d78d44a92","$792c6f1bb85322f7$export$a07a7de5efb26195","$792c6f1bb85322f7$export$d7ca88fc6cbcb4e1","$792c6f1bb85322f7$export$931b0c46b95fd31e","$792c6f1bb85322f7$export$4bd2facc4a3e6aa1","$792c6f1bb85322f7$export$174c38d98ccdc6e4","$792c6f1bb85322f7$export$5f59d0cba123a7a6","$792c6f1bb85322f7$export$184e21bbaf627886","$792c6f1bb85322f7$export$480bc6cd31f42a68","$792c6f1bb85322f7$export$20bbf99b7f7af07","$792c6f1bb85322f7$export$bc7b79dab261a61c","$792c6f1bb85322f7$export$d028451e5fd5dfd3","$792c6f1bb85322f7$export$96afce72bc67f90b","$792c6f1bb85322f7$export$ab7389fabcc55c20","$792c6f1bb85322f7$export$8690efe8b4d0bbd0","$792c6f1bb85322f7$export$f91685a2bf37bd13","$792c6f1bb85322f7$export$250171a898bf7ef","$792c6f1bb85322f7$export$462971122ed9eae3","$792c6f1bb85322f7$export$241e2d72fa0574fa","$792c6f1bb85322f7$export$4c4520429be8c63","$792c6f1bb85322f7$export$99ed96e5d534c6be","$792c6f1bb85322f7$export$e305fc85d2cb6150","$792c6f1bb85322f7$export$421b42f57a9b4f2d","$792c6f1bb85322f7$export$91fa8f2d7e3174cc","$792c6f1bb85322f7$export$b80ffe37949e3d0","$792c6f1bb85322f7$export$acec4aebbeb107b0","$792c6f1bb85322f7$export$bf7255ba41ca7f46","$792c6f1bb85322f7$export$1802dbfd31b58482","$792c6f1bb85322f7$export$ef519c83bf380b6","$792c6f1bb85322f7$export$c1c49903035a02df","$792c6f1bb85322f7$export$3a077bb7820dc6e4","$792c6f1bb85322f7$export$94f12c8d79f1108b","$792c6f1bb85322f7$export$1567b66611c1716a","$792c6f1bb85322f7$export$d31d8fac97169a4b","$792c6f1bb85322f7$export$44281146b54c1f30","$792c6f1bb85322f7$export$dd1cee8b45032547","$792c6f1bb85322f7$export$b70c28f717210d81","$792c6f1bb85322f7$export$512554f3e5add99","$792c6f1bb85322f7$export$95b7e707a15d4f18","$792c6f1bb85322f7$export$9ac7ef47e370fd07","$792c6f1bb85322f7$export$4c07773c7a8ac052","$792c6f1bb85322f7$export$8606c40cc696b7b","$792c6f1bb85322f7$export$b54ecf54ae9ea39e","$792c6f1bb85322f7$export$953a3f3bd659178f","$792c6f1bb85322f7$export$e2b0b9a5e613f348","$792c6f1bb85322f7$export$d361398ba64f04da","$792c6f1bb85322f7$export$ef3af5c7f06a9d78","$792c6f1bb85322f7$export$e793de575197f608","$792c6f1bb85322f7$export$b251cadde902f66f","$792c6f1bb85322f7$export$266524074db14b0","$792c6f1bb85322f7$export$78eca3acea1dc2f0","$792c6f1bb85322f7$export$a7c5707626fc90f","$792c6f1bb85322f7$export$74f94c628b84d921","$792c6f1bb85322f7$export$ef2c1d1ceb851b71","$792c6f1bb85322f7$export$7ecad81ba40c4d73","$792c6f1bb85322f7$export$a5d05c34e9e9365e","$792c6f1bb85322f7$export$9eeef2c439db41e","$792c6f1bb85322f7$export$7167c830cefcb6b5","$792c6f1bb85322f7$export$fdca3ba65b5cceec","$792c6f1bb85322f7$export$78ca07932ec5b059","$792c6f1bb85322f7$export$4e00ab2a5773b3fa","$792c6f1bb85322f7$export$e1caedbba7ac7882","$792c6f1bb85322f7$export$b395009ca7f092c7","$792c6f1bb85322f7$export$19dfffc92f62eadd","$792c6f1bb85322f7$export$84cc8e12a434d4e","$792c6f1bb85322f7$export$5be546ac84d180d1","$792c6f1bb85322f7$export$9227a1a65abc0f40","$792c6f1bb85322f7$export$46dbfbdf99745111","$792c6f1bb85322f7$export$cb307dad255adf47","$792c6f1bb85322f7$export$afb8737f820af419","$792c6f1bb85322f7$export$b9569b2b59420e1f","$792c6f1bb85322f7$export$ce970371e0e850bc","$792c6f1bb85322f7$export$a4b99907bf04046","$792c6f1bb85322f7$export$9c81eee3ff1dca2f","$792c6f1bb85322f7$export$26865d771eba0c03","$792c6f1bb85322f7$export$4f072ecaef317163","$792c6f1bb85322f7$export$f2d44f3f4b6f6e85","$792c6f1bb85322f7$export$290c5e392ced0792","$792c6f1bb85322f7$export$2663e8dd4f2868f9","$792c6f1bb85322f7$export$ecf8569ec6073df0","$792c6f1bb85322f7$export$61f4ff57f4699714","$792c6f1bb85322f7$export$86f1dcbefc47d0e5","$792c6f1bb85322f7$export$d7b7fe2e4cbf1aca","$792c6f1bb85322f7$export$d184c26d707a4f62","$792c6f1bb85322f7$export$3fb013b4db9894a1","$792c6f1bb85322f7$export$a0d487677f40f400","$792c6f1bb85322f7$export$53f107bf4efd5fa6","$792c6f1bb85322f7$export$b6e4da5b3e5efece","$792c6f1bb85322f7$export$9a4dfd4e35a8c23f","$792c6f1bb85322f7$export$9ab771e4c9886201","$792c6f1bb85322f7$export$346f08c1f0d0fe41","$792c6f1bb85322f7$export$cb2ba035ac68bae7","$792c6f1bb85322f7$export$34cdb5aa3a7fa807","$792c6f1bb85322f7$export$f52dcf7131a7f04","$792c6f1bb85322f7$export$727c2f9cd5e103a6","$792c6f1bb85322f7$export$e77742f4ecbcf7fe","$792c6f1bb85322f7$export$8d924f5dc2e0b388","$792c6f1bb85322f7$export$626c04e8e475793f","$792c6f1bb85322f7$export$dd1033c27a16bbd3","$792c6f1bb85322f7$export$2978d516d7c0a210","$792c6f1bb85322f7$export$cd71365b35005b55","$792c6f1bb85322f7$export$9edbe31fe55ee4e7","$792c6f1bb85322f7$export$8d43fcf7039d29c4","$792c6f1bb85322f7$export$7874a35404fe72b8","$792c6f1bb85322f7$export$8ac7744006702f7c","$792c6f1bb85322f7$export$3f3a86bf1e3d991a","$792c6f1bb85322f7$export$77bca9cffb34ac49","$792c6f1bb85322f7$export$a44129614aa6afd6","$792c6f1bb85322f7$export$a33a57747ca85497","$792c6f1bb85322f7$export$c81727f4e85dae44","$792c6f1bb85322f7$export$2a0fc68d197e0118","$792c6f1bb85322f7$export$63fd9a871098f71c","$792c6f1bb85322f7$export$a112d3c191161758","$792c6f1bb85322f7$export$898f613ed2bbf29a","$792c6f1bb85322f7$export$7e40581c97e2612","$792c6f1bb85322f7$export$be706c8e2fc01f1e","$792c6f1bb85322f7$export$50fba2372c27df7a","$792c6f1bb85322f7$export$f0fd3c01e562401e","$792c6f1bb85322f7$export$8e45f8904a9eb86f","$792c6f1bb85322f7$export$3c32121a106d496a","$792c6f1bb85322f7$export$2c73c002ec1b27c9","$792c6f1bb85322f7$export$3af34312bc4883fe","$792c6f1bb85322f7$export$841ab4ec5b5d6b41","$792c6f1bb85322f7$export$b37449a87c0a8a66","$792c6f1bb85322f7$export$5ac7b4a51c1c95db","$792c6f1bb85322f7$export$f9ec4afc4535638b","$792c6f1bb85322f7$export$4108bdb267c3b6c","$792c6f1bb85322f7$export$a6b9aaee40d49fd0","$792c6f1bb85322f7$export$1d4af0e360e5c2f9","$792c6f1bb85322f7$export$7fc2afdd98086cb1","$792c6f1bb85322f7$export$9605fc0d6b1fa63d","$792c6f1bb85322f7$export$5a5b643696270781","$792c6f1bb85322f7$export$286b3b21a32009b0","$792c6f1bb85322f7$export$554f2f5f49cfd9b6","$792c6f1bb85322f7$export$e3525cafdbe42364","$792c6f1bb85322f7$export$24a7142190733466","$792c6f1bb85322f7$export$51fa6a60df55ad62","$792c6f1bb85322f7$export$8420b0cf696e971d","$792c6f1bb85322f7$export$2ee9e5a3556c1e43","$792c6f1bb85322f7$export$d341f015bb0cfe2d","$792c6f1bb85322f7$export$557ff8df21a13ece","$792c6f1bb85322f7$export$f1d97c73367642d8","$792c6f1bb85322f7$export$98238152dfccf046","$792c6f1bb85322f7$export$725d301b7edf949a","$792c6f1bb85322f7$export$e7c7aa8b8581c21b","$792c6f1bb85322f7$export$7c66f5a7b309d620","$792c6f1bb85322f7$export$8f7d843b9aace1ee","$792c6f1bb85322f7$export$b3f6956f963758ad","$792c6f1bb85322f7$export$54408be40394d82a","$792c6f1bb85322f7$export$c79cc09643248eeb","$792c6f1bb85322f7$export$b0483b844167706f","$792c6f1bb85322f7$export$675fe0ed743a3b5","$792c6f1bb85322f7$export$1ec997190f8239d2","$792c6f1bb85322f7$export$ab36f5c8db36b379","$792c6f1bb85322f7$export$2680f340d0781853","$792c6f1bb85322f7$export$9cb8e7b38dc3cece","$792c6f1bb85322f7$export$7d80210a20f8f3d1","$792c6f1bb85322f7$export$34ea19fe51ab1c1c","$792c6f1bb85322f7$export$353596a6bc0be512","$792c6f1bb85322f7$export$f6ac9ec5800238fa","$792c6f1bb85322f7$export$48737ef57d2525b8","$792c6f1bb85322f7$export$4aa9659d76022fe3","$792c6f1bb85322f7$export$99630d895d68527c","$792c6f1bb85322f7$export$195e7e5c49b3bfbc","$792c6f1bb85322f7$export$2b848a0670941e75","$792c6f1bb85322f7$export$9c95d39d8f488b22","$792c6f1bb85322f7$export$dd09982822210aa2","$792c6f1bb85322f7$export$ec015fdea1dd0a2c","$792c6f1bb85322f7$export$fbfd5bfcb4fb3235","$792c6f1bb85322f7$export$7d6bc2dd6157173a","$792c6f1bb85322f7$export$9e799ed47e538f9d","$792c6f1bb85322f7$export$b5015269503eb8d2","$792c6f1bb85322f7$export$4d774a8611f47fd1","$792c6f1bb85322f7$export$b87f371cbc396fcf","$792c6f1bb85322f7$export$a12eb916a13d6f09","$792c6f1bb85322f7$export$b5049a01c66d2d23","$792c6f1bb85322f7$export$81c5e18fd95994a5","$792c6f1bb85322f7$export$f4c4e2c9bf2ce533","$792c6f1bb85322f7$export$3d3a8cdcec4c3758","$792c6f1bb85322f7$export$693d856f28a21c4f","$792c6f1bb85322f7$export$6c25127c5c008da6","$792c6f1bb85322f7$export$ce7af89d5d43b0b5","$792c6f1bb85322f7$export$9a568e121de312c4","$792c6f1bb85322f7$export$ff09b90989b21a8","$792c6f1bb85322f7$export$5a898dd3a28f57e9","$792c6f1bb85322f7$export$78d001ec5399d989","$792c6f1bb85322f7$export$f3657d8d6be09c14","$792c6f1bb85322f7$export$f6c2d9104388354","$792c6f1bb85322f7$export$b6a66ad0c162130c","$792c6f1bb85322f7$export$11aef5044aba4f27","$792c6f1bb85322f7$export$3e8aae031e23729e","$792c6f1bb85322f7$export$46cbe0a500d5437b","$792c6f1bb85322f7$export$50a178f7977eed37","$792c6f1bb85322f7$export$2cf378bbeec0f1a0","$792c6f1bb85322f7$export$d1680d626f929545","$792c6f1bb85322f7$export$283c3876d9630f38","$792c6f1bb85322f7$export$2c41f6f5814366a2","$792c6f1bb85322f7$export$8a093f244501728a","$792c6f1bb85322f7$export$37a1b2556082a0bb","$792c6f1bb85322f7$export$78acf4525d8a74c4","$792c6f1bb85322f7$export$b365bc2753a5cb04","$792c6f1bb85322f7$export$af856cffd8f64cfa","$792c6f1bb85322f7$export$558e7b41a81b2885","$792c6f1bb85322f7$export$db681cc2ef83e91f","$792c6f1bb85322f7$export$63ea321ad91823a7","$20a11462b9e5d0d1$export$2e2bcd8739ae039","activity","airplay","anchor","aperture","archive","award","battery","bell","bluetooth","bold","book","bookmark","box","briefcase","calendar","camera","cast","chrome","circle","clipboard","clock","cloud","codepen","codesandbox","coffee","columns","command","compass","cpu","crop","crosshair","database","disc","download","dribbble","droplet","edit","eye","facebook","feather","figma","file","film","flag","folder","framer","frown","gift","github","gitlab","globe","grid","headphones","heart","hexagon","home","image","inbox","info","instagram","italic","layers","layout","link","linkedin","loader","lock","mail","maximize","meh","menu","mic","minimize","minus","monitor","moon","move","music","navigation","octagon","package","paperclip","phone","play","plus","pocket","printer","radio","repeat","rewind","rss","save","scissors","server","settings","share","shield","shuffle","sidebar","slack","slash","sliders","smartphone","smile","speaker","square","star","sun","sunrise","sunset","tablet","terminal","thermometer","tool","trash","trello","triangle","truck","tv","twitch","twitter","umbrella","underline","unlock","upload","users","video","voicemail","watch","wifi","wind","youtube","zap","$cecad194b10e0134$export$f04a61298a47a40f","Icon1","intent","htmlAttrs","$38a26439e4b9b897$export$7f7cbe89f1eacd2","Spinner1","otherAttrs","$adbb2cd2b33face5$export$353f5b6fc5456de1","Button1","align","basic","compact","fluid","iconLeft","iconLeftAttrs","iconRight","iconRightAttrs","loading","outlined","rounded","sublabel","isAnchor","role","tabIndex","$3ca3ff02244427de$export$69b1032f2ecdf404","ButtonGroup1","$ee4d7e0caffd3616$export$a0d46203173587a1","ControlGroup1","$bd9088ef140da4af$export$54c2e3dc7acea9f5","List1","interactive","$e96703621d2b9b2a$export$a7b06bfba60a8a78","ListItem1","_this","selected","handleClick","allowOnContentClick","isLeftContentClick","isRightContentClick","allowContentClick","$f195ac6af4853fa1$var$isBrowser","timeoutDuration","longerTimeoutBrowsers","isBrowser","userAgent","$f195ac6af4853fa1$var$debounce","called","functionToCheck","getStyleComputedProperty","nodeType","css","defaultView","getComputedStyle","getParentNode","nodeName","host","getScrollParent","_getStyleComputedProp","overflowX","overflowY","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","getOffsetParent","offsetParent","noOffsetParent","nextElementSibling","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","createRange","setStart","setEnd","commonAncestorContainer","isOffsetContainer","firstElementChild","element1root","getScroll","upperSide","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","bottom","getBordersSize","styles","axis","sideA","sideB","getSize","computedStyle","getWindowSizes","getClientRect","offsets","getBoundingClientRect","sizes","horizScrollbar","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","area","filteredAreas","_ref2","computedPlacement","getReferenceOffsets","commonOffsetParent","getOuterSizes","marginBottom","marginRight","getOppositePlacement","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","runModifiers","modifiers","ends","cur","enabled","isDestroyed","arrowStyles","flipped","positionFixed","flip","originalPlacement","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","getSupportedPropertyName","prefixes","upperProp","toCheck","destroy","willChange","disableEventListeners","removeOnDestroy","getWindow","attachToScrollParents","scrollParents","isBody","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","isNumeric","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","$f195ac6af4853fa1$var$placements","validPlacements","placements","clockwise","counter","BEHAVIORS","parseOffset","basePlacement","useHeight","fragments","divider","splitRegex","ops","op","mergeWithPrevious","toValue","index2","$f195ac6af4853fa1$var$modifiers","shiftvariation","_data$offsets","isVertical","shiftOffsets","$f195ac6af4853fa1$var$_extends","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","keepTogether","opSide","arrow","arrowElement","querySelector","sideCapitalized","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","$f195ac6af4853fa1$var$defineProperty","_data$offsets$arrow","placementOpposite","flipOrder","behavior","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","subtractLength","hide","bound","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","noRound","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","invertTop","invertLeft","applyStyle","applyStyleOnLoad","modifierOptions","$f195ac6af4853fa1$var$Defaults","Popper","debounce","Defaults","jquery","onLoad","Utils","global","PopperUtils","$9da61e952759bc27$export$ca6a3753167de7aa","AbstractComponent1","timeoutStack","clearTimeouts","prevAttrs","getAttrs","getDefaultAttrs","$f6cb3d5ec54cf5be$export$602eac185826482c","Portal1","rootElement","container","onContentMount","$f5477a7def05ab0f$export$2e2bcd8739ae039","TransitionManager1","isEnabled","enable","disable","$e82e0ef2905407c2$var$instanceCounter","$e82e0ef2905407c2$export$c6fdb837b070b4ff","_super","Overlay1","shouldRender","onContainerCreate","handleOpen","onContainerUpdate","isOpen","wasOpen","handleClose","handleBackdropMouseDown","closeOnOutsideClick","onClose","handleDocumentMouseDown","contentEl","isClickOnOverlay","lastOpened","handleKeyDown","closeOnEscapeKey","hasBackdrop","addToStack","transitionName","transitionDuration","handleClosed","backdropClass","inline","portalAttrs","innerContent","onmousedown","tabindex","onOpened","openStack","handleEnterTransition","scrollHeight","handleFocus","handleExitTransition","restoreFocus","onClosed","lastActiveElement","autofocus","autofocusEl","tabIndexEl","getLastOpened","$94ba282c4034f63a$export$5b6b19405a83ff9d","Popover1","handleOpened","popoverEl","createPopper","destroyPopper","handleOverlayClose","trigger","KeyboardEvent","isControlled","handleInteraction","handlePopoverClick","hasDimiss","closeOnContentClick","handleTriggerMouseEnter","hoverOpenDelay","interactionType","isHoverInteraction","handleTriggerMouseLeave","hoverCloseDelay","getContentOffset","hasArrow","arrowSize","boundariesEl","defaultIsOpen","overlayClass","overlayStyle","setTriggerAttrs","onmouseenter","onmouseleave","isClickInteraction","$f195ac6af4853fa1$export$2e2bcd8739ae039","triggerAttrs","triggerEvents","onfocus","onblur","handleTriggerClick","handleTriggerFocus","handleTriggerBlur","onInteraction","openOnTriggerFocus","$faa88de4f0afd1d0$var$reTrim","$faa88de4f0afd1d0$var$reIsBadHex","$faa88de4f0afd1d0$var$reIsBinary","$faa88de4f0afd1d0$var$reIsOctal","$faa88de4f0afd1d0$var$freeParseInt","$faa88de4f0afd1d0$var$freeGlobal","$faa88de4f0afd1d0$var$freeSelf","$faa88de4f0afd1d0$var$root","Function","$faa88de4f0afd1d0$var$objectToString","$faa88de4f0afd1d0$var$nativeMax","$faa88de4f0afd1d0$var$nativeMin","$faa88de4f0afd1d0$var$now","Date","$faa88de4f0afd1d0$var$isObject","$faa88de4f0afd1d0$var$toNumber","$faa88de4f0afd1d0$var$isObjectLike","$faa88de4f0afd1d0$var$isSymbol","other","isBinary","$faa88de4f0afd1d0$exports","wait","lastArgs","lastThis","maxWait","result1","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","$362778d3f9246a50$export$f5b8910cec6cf069","Input1","updatePadding","$609d03e51cd22a42$export$53fc189dda010966","QueryList1","filteredItems","renderItem","itemRender","disableArrowKeys","checkmark","listAttrs","listItem","handleSelect","activeIndex","$792c6f1bb85322f7$exports","CHECK","handleInput","handleSearchDebounce","updateQuery","getFilteredItems","updateActiveIndex","handleInputClear","scrollToActiveItem","inputEl","isDisabled","onSelect","selectedItem","actionsEl","moveActiveIndex","handleEnterKey","ofType","cacheItems","inputAttrs","filterable","controlGroupAttrs","emptyContent","defaultQuery","defaultActiveIndex","setControlledAttrs","listEl","items","eventCallbacks","initialContent","itemPredicate","itemListPredicate","itemListRender","onActiveItemChange","onQueryChange","renderControlGroup","renderList","onkeydown","placeholder","oninput","X","itemNodes","isEmpty","hasInitialContent","emptyOrInitialContent","activeEl","activeTop","offsetTop","activeHeight","listScrollTop","listHeight","activeBottomEdge","activeTopEdge","maxIndex","$609d03e51cd22a42$var$getNextIndex","activeItem","$b42a0cf5d27a86b3$export$ed433d8050015de5","SelectList1","queryList","handleActiveItemChange","closeOnSelect","handlePopoverInteraction","nextOpenState","popoverAttrs","header","footer","queryListAttrs","bbs","$cf3ef0e83dd06017$export$568b89e600fc77eb","$cf3ef0e83dd06017$export$ac4156b3386a7c70","$cf3ef0e83dd06017$export$59704c468e1a1527","$cf3ef0e83dd06017$export$133e2d8df80661d8","$730e9787333daa75$export$8d3a5d672ffcdf41","$730e9787333daa75$export$102b5ba6b3edbf17","$730e9787333daa75$export$1ac08fc90088bdc5","newBpm","$730e9787333daa75$export$d519f82124a8846b","digits","$730e9787333daa75$export$cfdbec07e6696eb2","$1e295809725b2795$var$selected","$1e295809725b2795$export$d9b273488cd8ce6f","CHEVRONS_DOWN","APERTURE","SETTINGS","$b4e14b6b8da86996$export$b94310965bed44e6"],"version":3,"file":"index.e3562595.js.map"}